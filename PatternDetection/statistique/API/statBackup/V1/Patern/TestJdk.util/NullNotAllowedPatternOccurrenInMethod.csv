class name;;Method name;;number of detected pattern;;parameter;;number of occurrences;;occurrenceType;;unitOnwhichOccurrenceIsDetected;;commentFragment
java.util.WeakHashMap;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.WeakHashMap;;eq;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.WeakHashMap;;hash;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.lang.Object: int hashCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.WeakHashMap;;transfer;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r2[i1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = r3;;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.util.WeakHashMap;;putAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.WeakHashMap;;removeMapping;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
java.util.AbstractMap;;putAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractMap;;equals;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = interfaceinvoke r2.<java.util.Map: int size()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.AbstractCollection;;toArray;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractCollection;;finishToArray;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i7] = $r2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractCollection;;containsAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractCollection;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractCollection;;removeAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractCollection;;retainAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Arrays;;legacyMergeSort;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Arrays;;mergeSort;;2
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r0[$i20];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r10 = r0[i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r11 = r0[$i23];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r12 = r0[$i24];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i7] = $r11;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i7] = $r12;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Arrays;;swap;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;r1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $r2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;legacyMergeSort;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Arrays;;mergeSort;;3
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i21 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r5, $r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i22 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r8);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r0[$i20];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r9 = r0[$i23];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r10 = r0[$i24];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i7] = $r9;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i7] = $r10;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;l6 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;i6 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;s6 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;c6 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;b6 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;f1 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;binarySearch0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = l0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = l2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = i0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = i2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = s0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = s2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = c0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = c2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = b0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = b2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = z0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i2] = z0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = d0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i2] = d0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = f0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i2] = f0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;fill;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i2] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Arrays;;copyOf;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Arrays;;copyOf;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Arrays;;copyOfRange;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Arrays;;copyOfRange;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Arrays;;deepEquals0;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
*;;*;;*;;*;;*;;InvokeExpr for param;;z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Arrays;;deepToString;;2
*;; * ;; * ;;r1;;16
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[...]");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>(r0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.Locale;;getDefault;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.util.Locale$Category: int ordinal()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Locale;;initDefault;;1
*;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r0.<java.util.Locale$Category: java.lang.String languageKey>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r13 = r0.<java.util.Locale$Category: java.lang.String scriptKey>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r18 = r0.<java.util.Locale$Category: java.lang.String countryKey>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r23 = r0.<java.util.Locale$Category: java.lang.String variantKey>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.util.Locale$Category: int ordinal()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Locale;;setDefault;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Locale;;getISO2Table;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Locale;;getISO3Code;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Locale;;getDisplayString;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.Locale;;equals;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r2 = $r3.<java.util.Locale: sun.util.locale.BaseLocale baseLocale>;;pattern detected param  r1 must not be null it define a local $r3which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r7 = $r6.<java.util.Locale: sun.util.locale.LocaleExtensions localeExtensions>;;pattern detected param  r1 must not be null it define a local $r6which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r10 = $r9.<java.util.Locale: sun.util.locale.LocaleExtensions localeExtensions>;;pattern detected param  r1 must not be null it define a local $r9which used in  FieldRef 
java.util.Locale;;formatList;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Locale;;composeList;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r0.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Locale;;writeObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Locale;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Locale;;getCompatibilityExtensions;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Locale;;access$600;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.Locale: sun.util.locale.BaseLocale baseLocale>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Locale;;access$700;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.Locale: sun.util.locale.LocaleExtensions localeExtensions>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.AbstractList;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractList;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r3 = interfaceinvoke $r6.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r1 must not be null it define a local $r6which used in  InvokeExpr 
java.util.AbstractSet;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = interfaceinvoke r2.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.AbstractSet;;removeAll;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z4 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.AbstractQueue;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.AbstractSequentialList;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayDeque;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayDeque;;addFirst;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.ArrayDeque;;addLast;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.ArrayDeque;;toArray;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.ArrayDeque;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayDeque;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayDeque;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.ArrayDeque: int head>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.ArrayDeque;;access$300;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.ArrayDeque: int tail>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.ArrayDeque;;access$400;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.ArrayDeque: java.lang.Object[] elements>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.ArrayDeque;;access$500;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = specialinvoke r0.<java.util.ArrayDeque: boolean delete(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Properties;;load0;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.util.Properties$LineReader: int readLine()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.util.Properties$LineReader: char[] lineBuf>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.util.Properties$LineReader: char[] lineBuf>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.util.Properties$LineReader: char[] lineBuf>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.util.Properties$LineReader: char[] lineBuf>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.Properties;;loadConvert;;2
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r3[$i22] = $c23;;pattern detected param  r2 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r3[$i24] = c11;;pattern detected param  r2 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r3[$i25] = c9;;pattern detected param  r2 must not be null it define a local r3which used in  ArrayRef 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;c9 = r1[$i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c11 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c13 = r1[$i12];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Properties;;saveConvert;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Properties;;writeComments;;2
*;; * ;; * ;;r0;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>("#");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>($r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>($r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.BufferedWriter: void newLine()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>("#");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.BufferedWriter: void newLine()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c17 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c20 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i19);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c22 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i21);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Properties;;store0;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>($r13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.BufferedWriter: void newLine()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>($r23);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.BufferedWriter: void newLine()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.BufferedWriter: void flush()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Properties;;loadFromXML;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Properties;;storeToXML;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Properties;;storeToXML;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Properties;;list;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("-- listing properties --");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Properties;;list;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("-- listing properties --");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Properties;;enumerate;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Properties;;enumerateStringProperties;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashMap;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashMap;;hash;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashMap;;putAllForCreate;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashMap;;transfer;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i3] = r3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.HashMap;;putAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashMap;;removeMapping;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.HashMap;;writeObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashMap;;readObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;hash;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.lang.Object: int hashCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = virtualinvoke r1.<java.lang.Object: int hashCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;contains;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Hashtable;;put;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.Hashtable;;putAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;equals;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = interfaceinvoke r2.<java.util.Map: int size()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.Hashtable;;writeObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;readObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;reconstitutionPut;;2
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r3 must not be null  otherwise an exception is thrown 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;r4 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r9 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i1] = $r5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Hashtable;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = specialinvoke r0.<java.util.Hashtable: java.util.Iterator getIterator(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.Hashtable: int count>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Hashtable;;access$400;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.Hashtable: java.util.Hashtable$Entry[] table>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Hashtable;;access$500;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = specialinvoke r0.<java.util.Hashtable: int hash(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Hashtable;;access$608;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.Hashtable: int modCount>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.Hashtable: int modCount> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Hashtable;;access$210;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.Hashtable: int count>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.Hashtable: int count> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Hashtable;;access$600;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.Hashtable: int modCount>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.ArrayList;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayList;;toArray;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i6] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.ArrayList;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayList;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayList;;batchRemove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayList;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayList;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ArrayList;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.ArrayList: int size>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.ArrayList;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.ArrayList: java.lang.Object[] elementData>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;23
*;;*;;*;;*;;*;;ArrayRef for param;;$i13 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i15 = r0[$i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i17 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i18 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i19 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i21 = r0[$i20];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i23 = r0[$i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i24 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i6 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i26 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i4] = $i26;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = i6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i29 = r0[$i28];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i30 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$i39 = r2[i38];;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i46 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i47 = r0[i11];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i49 = r0[$i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $i49;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i51 = r0[$i50];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $i51;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i56 = r0[i53];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i53] = $i56;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;134
*;;*;;*;;*;;*;;ArrayRef for param;;i5 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i17 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i19 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i18] = $i19;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i21] = i5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i22 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i24 = r0[$i23];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i27 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i28 = r0[i26];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i27 = r0[i26];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i29 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i31 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i30] = $i31;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i33] = i27;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i34 = r0[i32];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i36 = r0[i32];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i35] = $i36;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i37] = i28;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i38 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i39 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i41 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i40] = $i41;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i42] = i38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i50 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i51 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i9 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i52 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $i52;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = i9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i53 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i54 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i55 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i56 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $i56;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = i55;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i57 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i58 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $i58;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = i55;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i59 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i60 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i61 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i62 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $i62;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = i61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i63 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i64 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $i64;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = i61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i65 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i66 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $i66;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = i61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i67 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i68 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i69 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i70 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = $i70;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = i69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i71 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i72 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $i72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = i69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i73 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i74 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $i74;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = i69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i75 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i76 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $i76;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = i69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i78 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i79 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i80 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i81 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i82 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i83 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i84 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i85 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i11 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i12 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i86 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $i86;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i87 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $i87;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i88 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i89 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i14 = r0[i13];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i90 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $i90;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = i14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i91 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i93 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i94 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $i94;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i95 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = $i95;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i96 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $i96;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = i14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i98 = r0[$i97];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $i98;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i99] = i11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i101 = r0[$i100];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $i101;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i102] = i12;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i105 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i106 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i108 = r0[i107];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i109 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $i109;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = i108;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i110 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i112 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i113 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $i113;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = i11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i114 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $i114;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = i108;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i115 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i117 = r0[i116];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i118 = r0[i116];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i119 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = $i119;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = i118;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i120 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i121 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i122 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = $i122;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i123 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = $i123;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = i115;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = i118;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;23
*;;*;;*;;*;;*;;ArrayRef for param;;$l13 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l15 = r0[$i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l18 = r0[$i17];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l19 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l21 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l23 = r0[$i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l26 = r0[$i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l27 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l6 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l30 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i4] = $l30;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = l6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l33 = r0[$i32];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l34 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$l44 = r2[i43];;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l51 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l52 = r0[i11];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l55 = r0[$i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $l55;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l57 = r0[$i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $l57;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l62 = r0[i59];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i59] = $l62;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;134
*;;*;;*;;*;;*;;ArrayRef for param;;l5 = r0[$i17];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l18 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l21 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i20] = $l21;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i23] = l5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l24 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l26 = r0[$i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l30 = r0[i28];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l6 = r0[i29];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l30 = r0[i29];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l32 = r0[i28];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l35 = r0[i28];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i34] = $l35;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i37] = l30;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l38 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l41 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i40] = $l41;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i42] = l6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l43 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l44 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l47 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i46] = $l47;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i48] = l43;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l57 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l58 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l9 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l60 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = $l60;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i56] = l9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l61 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l62 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l64 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l65 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i54] = $l65;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = l64;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l66 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l68 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = $l68;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i56] = l64;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l69 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l70 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l72 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l73 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $l73;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i54] = l72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l74 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l76 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i54] = $l76;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = l72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l77 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l79 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = $l79;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i56] = l72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l80 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l81 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l83 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l84 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = $l84;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = l83;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l85 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l87 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $l87;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i54] = l83;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l88 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l90 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i54] = $l90;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = l83;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l91 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l93 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = $l93;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i56] = l83;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l95 = r0[i56];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l96 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l98 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l99 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l101 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l102 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l104 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l105 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l11 = r0[i55];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l12 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l107 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i55] = $l107;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l108 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $l108;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l109 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l111 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l14 = r0[i13];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l114 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $l114;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i94] = l14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l116 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l119 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l121 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $l121;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l122 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i94] = $l122;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l123 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $l123;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = l14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l125 = r0[$i124];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $l125;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i126] = l11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l128 = r0[$i127];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $l128;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i129] = l12;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l132 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l134 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l137 = r0[i136];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l139 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i136] = $l139;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i94] = l137;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l141 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l144 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l146 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i136] = $l146;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i94] = l11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l147 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i136] = $l147;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = l137;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l148 = r0[i54];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l150 = r0[i149];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;l15 = r0[i149];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l153 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i149] = $l153;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i94] = l15;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l154 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l156 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l158 = r0[i94];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i149] = $l158;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$l159 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i94] = $l159;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i149] = l148;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = l15;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$s7 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = s4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;doSort;;1
*;; * ;; * ;;r0;;23
*;;*;;*;;*;;*;;ArrayRef for param;;$s13 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s15 = r0[$i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s17 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s18 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s19 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s21 = r0[$i20];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s23 = r0[$i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s24 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s6 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s26 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i4] = $s26;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = s6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s29 = r0[$i28];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s30 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$s39 = r2[i38];;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s46 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s47 = r0[i11];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s49 = r0[$i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $s49;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s51 = r0[$i50];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $s51;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s56 = r0[i53];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i53] = $s56;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;134
*;;*;;*;;*;;*;;ArrayRef for param;;s5 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s17 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s19 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i18] = $s19;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i21] = s5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s22 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s24 = r0[$i23];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s27 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s28 = r0[i26];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s27 = r0[i26];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s29 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s31 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i30] = $s31;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i33] = s27;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s34 = r0[i32];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s36 = r0[i32];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i35] = $s36;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i37] = s28;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s38 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s39 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s41 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i40] = $s41;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i42] = s38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s50 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s51 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s9 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s52 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $s52;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = s9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s53 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s54 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s55 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s56 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $s56;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = s55;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s57 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s58 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $s58;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = s55;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s59 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s60 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s61 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s62 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $s62;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = s61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s63 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s64 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $s64;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = s61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s65 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s66 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $s66;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = s61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s67 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s68 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s69 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s70 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = $s70;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = s69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s71 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s72 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $s72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = s69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s73 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s74 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $s74;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = s69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s75 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s76 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $s76;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = s69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s78 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s79 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s80 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s81 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s82 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s83 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s84 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s85 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s11 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s12 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s86 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $s86;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s87 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $s87;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s88 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s89 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s14 = r0[i13];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s90 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $s90;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = s14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s91 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s93 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s94 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $s94;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s95 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = $s95;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s96 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $s96;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = s14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s98 = r0[$i97];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $s98;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i99] = s11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s101 = r0[$i100];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $s101;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i102] = s12;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s105 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s106 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s108 = r0[i107];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s109 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $s109;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = s108;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s110 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s112 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s113 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $s113;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = s11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s114 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $s114;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = s108;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s115 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s117 = r0[i116];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;s118 = r0[i116];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s119 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = $s119;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = s118;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s120 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s121 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s122 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = $s122;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s123 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = $s123;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = s115;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = s118;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$c7 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = c4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;doSort;;1
*;; * ;; * ;;r0;;23
*;;*;;*;;*;;*;;ArrayRef for param;;$c13 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c15 = r0[$i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c17 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c18 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c19 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c21 = r0[$i20];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c23 = r0[$i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c24 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c6 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c26 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i4] = $c26;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = c6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c29 = r0[$i28];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c30 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$c39 = r2[i38];;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c46 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c47 = r0[i11];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c49 = r0[$i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $c49;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c51 = r0[$i50];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i9] = $c51;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c56 = r0[i53];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i53] = $c56;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;134
*;;*;;*;;*;;*;;ArrayRef for param;;c5 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c17 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c19 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i18] = $c19;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i21] = c5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c22 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c24 = r0[$i23];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c27 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c28 = r0[i26];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c27 = r0[i26];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c29 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c31 = r0[i25];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i30] = $c31;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i33] = c27;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c34 = r0[i32];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c36 = r0[i32];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i35] = $c36;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i37] = c28;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c38 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c39 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c41 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i40] = $c41;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i42] = c38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c50 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c51 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c9 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c52 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $c52;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = c9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c53 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c54 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c55 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c56 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $c56;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = c55;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c57 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c58 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $c58;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = c55;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c59 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c60 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c61 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c62 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $c62;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = c61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c63 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c64 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $c64;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = c61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c65 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c66 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $c66;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = c61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c67 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c68 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c69 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c70 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = $c70;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = c69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c71 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c72 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $c72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = c69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c73 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c74 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $c74;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = c69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c75 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c76 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $c76;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = c69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c78 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c79 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c80 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c81 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c82 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c83 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c84 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c85 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c11 = r0[i49];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c12 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c86 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i49] = $c86;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c87 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $c87;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c88 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c89 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c14 = r0[i13];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c90 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $c90;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = c14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c91 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c93 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c94 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $c94;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c95 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = $c95;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c96 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i13] = $c96;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = c14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c98 = r0[$i97];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $c98;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i99] = c11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c101 = r0[$i100];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $c101;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i102] = c12;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c105 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c106 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c108 = r0[i107];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c109 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $c109;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = c108;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c110 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c112 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c113 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $c113;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = c11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c114 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i107] = $c114;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = c108;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c115 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c117 = r0[i116];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;c118 = r0[i116];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c119 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = $c119;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = c118;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c120 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c121 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c122 = r0[i77];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = $c122;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$c123 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i77] = $c123;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i116] = c115;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = c118;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;7
*;;*;;*;;*;;*;;ArrayRef for param;;$b7 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = b4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;b17 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b18 = r0[i15];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b20 = r0[i15];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i19] = $b20;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i22] = b17;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;10
*;;*;;*;;*;;*;;ArrayRef for param;;$f3 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f0 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f4 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i2] = $f4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = f0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f1 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f5 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f2 = r0[i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i9] = 0.0F;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = -0.0F;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;doSort;;1
*;; * ;; * ;;r0;;23
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f2 = r0[$i12];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f3 = r0[$i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f4 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f5 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f6 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f7 = r0[$i18];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f8 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f0 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f9 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i4] = $f9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = f0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f10 = r0[$i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f11 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f12 = r2[i31];;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f13 = r0[i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f14 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f15 = r0[$i39];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i8] = $f15;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f16 = r0[$i40];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i8] = $f16;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f17 = r0[i42];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i42] = $f17;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;136
*;;*;;*;;*;;*;;ArrayRef for param;;f0 = r0[$i11];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f5 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f6 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i13] = $f6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i15] = f0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f7 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f8 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f9 = r0[i18];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f10 = r0[i19];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f9 = r0[i19];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f11 = r0[i18];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f12 = r0[i18];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i22] = $f12;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i24] = f9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f13 = r0[i23];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f14 = r0[i23];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i26] = $f14;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i27] = f10;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f15 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f16 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f17 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i29] = $f17;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i30] = f15;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f18 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f19 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f1 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f20 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = $f20;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = f1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f21 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f22 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f23 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f24 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $f24;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = f23;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f25 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f26 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = $f26;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = f23;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f27 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f28 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f29 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f30 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = $f30;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = f29;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f31 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f32 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $f32;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = f29;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f33 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f34 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = $f34;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = f29;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f35 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f36 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f37 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f38 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = $f38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = f37;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f39 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f40 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = $f40;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = f37;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f41 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f42 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $f42;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = f37;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f43 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f44 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = $f44;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = f37;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f45 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f46 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f47 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f48 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f49 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f50 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f51 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f52 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f2 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f3 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f53 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = $f53;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f54 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = $f54;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f55 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f56 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f4 = r0[i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f57 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i9] = $f57;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = f4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f58 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f59 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f60 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i9] = $f60;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f61 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $f61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f62 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i9] = $f62;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = f4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f63 = r0[$i60];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $f63;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i61] = f2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f64 = r0[$i62];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $f64;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i63] = f3;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f65 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f66 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f67 = r0[i68];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f68 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i68] = $f68;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = f67;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f69 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f70 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f71 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i68] = $f71;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f72 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $f72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f73 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i68] = $f73;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = f67;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f74 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f75 = r0[i74];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f76 = r0[i74];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f77 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i74] = $f77;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = f76;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f78 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f79 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f80 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i74] = $f80;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f81 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $f81;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f82 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i74] = $f82;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = f76;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;10
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i2] = $d4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = d0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d2 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i10] = 0.0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i11] = -0.0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.DualPivotQuicksort;;doSort;;1
*;; * ;; * ;;r0;;23
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r0[$i12];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[$i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d6 = r0[$i16];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r0[$i18];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d8 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d9 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i4] = $d9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = d0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d10 = r0[$i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d11 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$d12 = r2[i31];;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d13 = r0[i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d14 = r0[i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d15 = r0[$i39];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i8] = $d15;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d16 = r0[$i40];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i8] = $d16;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d17 = r0[i42];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[i42] = $d17;;pattern detected param  r0 must not be null it define a local r2which used in  ArrayRef 
java.util.DualPivotQuicksort;;sort;;1
*;; * ;; * ;;r0;;136
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[$i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d8 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i12] = $d8;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i14] = d0;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d9 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d10 = r0[$i15];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d11 = r0[i17];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[i18];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d11 = r0[i18];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d12 = r0[i17];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d13 = r0[i17];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i21] = $d13;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i23] = d11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d14 = r0[i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d15 = r0[i22];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i25] = $d15;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i26] = d1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d16 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d17 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d18 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i28] = $d18;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i29] = d16;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d19 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d20 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d2 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d21 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $d21;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = d2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d22 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d23 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d24 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d25 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i35] = $d25;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = d24;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d26 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d27 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $d27;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = d24;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d28 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d29 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d30 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d31 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = $d31;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i35] = d30;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d32 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d33 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i35] = $d33;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = d30;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d34 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d35 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $d35;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = d30;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d36 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d37 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d38 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d39 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i6] = $d39;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = d38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d40 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d41 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = $d41;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i35] = d38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d42 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d43 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i35] = $d43;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = d38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d44 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d45 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $d45;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i37] = d38;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d46 = r0[i37];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d47 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d48 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d49 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d50 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d51 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d52 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d53 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d3 = r0[i36];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d4 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d54 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i36] = $d54;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d55 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i5] = $d55;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d56 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d57 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d5 = r0[i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d58 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = $d58;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = d5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d59 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d60 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d61 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = $d61;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d62 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $d62;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d63 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i8] = $d63;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = d5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d64 = r0[$i60];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $d64;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i61] = d3;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d65 = r0[$i62];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $d65;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i63] = d4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d66 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d67 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d68 = r0[i68];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d69 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i68] = $d69;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = d68;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d70 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d71 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d72 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i68] = $d72;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d73 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $d73;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d74 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i68] = $d74;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = d68;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d75 = r0[i35];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d76 = r0[i74];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d6 = r0[i74];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d77 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i74] = $d77;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = d6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d78 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d79 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d80 = r0[i48];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i74] = $d80;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d81 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i48] = $d81;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d82 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i74] = $d82;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i7] = d6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.TimSort;;binarySort;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, $r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r0;;7
*;;*;;*;;*;;*;;ArrayRef for param;;r2 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[$i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i9] = $r7;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i11] = $r8;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = r2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.TimSort;;countRunAndMakeAscending;;2
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r5, $r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r7, $r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[$i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.TimSort;;reverseRange;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;r1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i3] = $r2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i4] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.TimSort;;gallopLeft;;2
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i25 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r8);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[$i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r1[$i17];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r1[$i24];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.TimSort;;gallopRight;;2
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i25 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, $r8);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[$i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r1[$i17];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r1[$i24];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.HashSet;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashSet;;writeObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFloat(float)>($f0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.HashSet;;readObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;f0 = virtualinvoke r1.<java.io.ObjectInputStream: float readFloat()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ComparableTimSort;;binarySort;;1
*;; * ;; * ;;r0;;7
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r0[i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[$i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i9] = $r7;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i11] = $r8;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i3] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.ComparableTimSort;;countRunAndMakeAscending;;1
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r10 = r0[$i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.ComparableTimSort;;reverseRange;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;r1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i3] = $r2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i4] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.ComparableTimSort;;gallopLeft;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i25 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[$i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[$i17];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r1[$i24];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.ComparableTimSort;;gallopRight;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i25 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[$i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[$i17];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r1[$i24];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Random;;nextBytes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i6] = $b7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Random;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Random;;writeObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.BitSet;;valueOf;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$l2 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.BitSet;;valueOf;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.nio.LongBuffer: java.nio.LongBuffer slice()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.BitSet;;valueOf;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.BitSet;;intersects;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.BitSet;;and;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.BitSet;;or;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.BitSet;;xor;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i13 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.BitSet;;andNot;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.BitSet;;equals;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;specialinvoke r2.<java.util.BitSet: void checkInvariants()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i2 = r2.<java.util.BitSet: int wordsInUse>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.util.BitSet: long[] words>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.BitSet;;writeObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.BitSet;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Calendar;;createCalendar;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getUnicodeLocaleType(java.lang.String)>("ca");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Calendar;;setTime;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r1.<java.util.Date: long getTime()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Calendar;;checkDisplayNameParams;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Calendar;;getFieldStrings;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.text.DateFormatSymbols: java.lang.String[] getEras()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Calendar;;equals;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$z1 = r2.<java.util.Calendar: boolean lenient>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i3 = r2.<java.util.Calendar: int firstDayOfWeek>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i5 = r2.<java.util.Calendar: int minimalDaysInFirstWeek>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.util.Calendar: java.util.TimeZone zone>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.Calendar;;appendValue;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Calendar;;getMillisOf;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.util.Calendar: boolean isTimeSet>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r0.<java.util.Calendar: long time>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.util.Calendar: java.lang.Object clone()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Calendar;;writeObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Calendar;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.TimeZone;;setID;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.TimeZone;;parseCustomTimeZone;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i9 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("GMT");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(b1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i11);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Date;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$l1 = virtualinvoke $r2.<java.util.Date: long getTime()>();;pattern detected param  r1 must not be null it define a local $r2which used in  InvokeExpr 
java.util.Date;;getMillisOf;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r0.<java.util.Date: sun.util.calendar.BaseCalendar$Date cdate>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r0.<java.util.Date: sun.util.calendar.BaseCalendar$Date cdate>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r0.<java.util.Date: long fastTime>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r0.<java.util.Date: sun.util.calendar.BaseCalendar$Date cdate>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Date;;convertToAbbr;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Date;;normalize;;1
*;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getHours()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getMinutes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i5 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getSeconds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i6 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getMillis()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: java.util.TimeZone getZone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.BaseCalendar$Date setNormalizedDate(int,int,int)>(i0, i1, i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r16 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.BaseCalendar$Date setNormalizedDate(int,int,int)>(i0, i1, i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Date;;getCalendarSystem;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.Era getEra()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Date;;writeObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeLong(long)>($l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Date;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r1.<java.io.ObjectInputStream: long readLong()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ResourceBundle;;getBundle;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.ResourceBundle;;checkList;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.ResourceBundle;;findBundle;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$CacheKey setLocale(java.util.Locale)>(r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r27 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.Object clone()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<java.util.List: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ResourceBundle;;loadBundle;;3
*;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.util.Locale getLocale()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.String getName()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.ClassLoader getLoader()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.util.ResourceBundle$CacheKey: void setFormat(java.lang.String)>(r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.String getName()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.util.List: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>($r8, r3, r5, $r9, z0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.ResourceBundle;;findBundleInCache;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z6 = virtualinvoke r1.<java.util.ResourceBundle$Control: boolean needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)>($r19, $r20, $r21, $r22, r4, $l8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ResourceBundle;;putBundleInCache;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.Object clone()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.ResourceBundle: java.util.ResourceBundle$CacheKey cacheKey> = r3;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.ResourceBundle: java.util.ResourceBundle$CacheKey cacheKey> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.ResourceBundle;;setExpirationTime;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.lang.String getName()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.util.ResourceBundle$CacheKey: java.util.Locale getLocale()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l0 = virtualinvoke r1.<java.util.ResourceBundle$Control: long getTimeToLive(java.lang.String,java.util.Locale)>($r2, $r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ResourceBundle;;clearCache;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.ResourceBundle;;containsKey;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentHashMap;;hash;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentHashMap;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentHashMap;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentHashMap;;containsKey;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentHashMap;;containsValue;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentHashMap;;put;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentHashMap;;putIfAbsent;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentHashMap;;putAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentHashMap;;replace;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentHashMap;;writeObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentHashMap;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r8 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.JapaneseImperialCalendar;;getYearOffsetInMillis;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$l3 = virtualinvoke r1.<sun.util.calendar.CalendarDate: long getTimeOfDay()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<sun.util.calendar.CalendarDate: int getZoneOffset()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.JapaneseImperialCalendar;;getFixedDateJan1;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.JapaneseImperialCalendar;;getFixedDateMonth1;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.JapaneseImperialCalendar;;getTransitionEraIndex;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i9 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.JapaneseImperialCalendar;;getEraIndex;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.Era getEra()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.JapaneseImperialCalendar;;pinDayOfMonth;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getDayOfMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: int getMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setDate(int,int,int)>(i0, $i16, $i17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.JapaneseImperialCalendar;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.GregorianCalendar;;setGregorianChange;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l0 = virtualinvoke r1.<java.util.Date: long getTime()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.GregorianCalendar;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$l1 = $r2.<java.util.GregorianCalendar: long gregorianCutover>;;pattern detected param  r1 must not be null it define a local $r2which used in  FieldRef 
java.util.GregorianCalendar;;getFixedDate;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l11 = virtualinvoke r1.<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>($i8, $i9, $b10, $r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.GregorianCalendar;;getFixedDateJan1;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.GregorianCalendar;;getFixedDateMonth1;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getNormalizedYear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i19 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i20 = virtualinvoke r1.<sun.util.calendar.BaseCalendar$Date: int getDayOfMonth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.GregorianCalendar;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.SimpleTimeZone;;getTransition;;2
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<sun.util.calendar.BaseCalendar: sun.util.calendar.CalendarDate getNthDayOfWeek(int,int,sun.util.calendar.CalendarDate)>(i3, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<sun.util.calendar.BaseCalendar: sun.util.calendar.CalendarDate getNthDayOfWeek(int,int,sun.util.calendar.CalendarDate)>(1, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<sun.util.calendar.BaseCalendar: sun.util.calendar.CalendarDate getNthDayOfWeek(int,int,sun.util.calendar.CalendarDate)>(-1, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$l8 = virtualinvoke r1.<sun.util.calendar.BaseCalendar: long getTime(sun.util.calendar.CalendarDate)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.util.calendar.BaseCalendar$Date: void setNormalizedYear(int)>(i1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setMonth(int)>($i6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>($i7);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.CalendarDate setDayOfMonth(int)>(i3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.SimpleTimeZone;;inDaylightTime;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r1.<java.util.Date: long getTime()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.SimpleTimeZone;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r4 = virtualinvoke r2.<java.util.SimpleTimeZone: java.lang.String getID()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.SimpleTimeZone;;hasSameRules;;1
*;; * ;; * ;;r1;;16
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.util.SimpleTimeZone: int rawOffset>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$z2 = r2.<java.util.SimpleTimeZone: boolean useDaylight>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i3 = r2.<java.util.SimpleTimeZone: int dstSavings>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i5 = r2.<java.util.SimpleTimeZone: int startMode>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i7 = r2.<java.util.SimpleTimeZone: int startMonth>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i9 = r2.<java.util.SimpleTimeZone: int startDay>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i11 = r2.<java.util.SimpleTimeZone: int startDayOfWeek>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i13 = r2.<java.util.SimpleTimeZone: int startTime>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i15 = r2.<java.util.SimpleTimeZone: int startTimeMode>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i17 = r2.<java.util.SimpleTimeZone: int endMode>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i19 = r2.<java.util.SimpleTimeZone: int endMonth>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i21 = r2.<java.util.SimpleTimeZone: int endDay>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i23 = r2.<java.util.SimpleTimeZone: int endDayOfWeek>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i25 = r2.<java.util.SimpleTimeZone: int endTime>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i27 = r2.<java.util.SimpleTimeZone: int endTimeMode>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i29 = r2.<java.util.SimpleTimeZone: int startYear>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.SimpleTimeZone;;unpackRules;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$b0 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b1 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b2 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b3 = r1[3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b5 = r1[4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b6 = r1[5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.SimpleTimeZone;;unpackTimes;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i0 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i1 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.SimpleTimeZone;;writeObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void write(byte[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.SimpleTimeZone;;readObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void readFully(byte[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.ReentrantLock;;tryLock;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.ReentrantLock;;hasWaiters;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.ReentrantLock;;getWaitQueueLength;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.ReentrantLock;;getWaitingThreads;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Collections;;sort;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;sort;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;binarySearch;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;indexedBinarySearch;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;iteratorBinarySearch;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;get;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r0.<java.util.ListIterator: int nextIndex()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.ListIterator: java.lang.Object next()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.ListIterator: java.lang.Object previous()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;binarySearch;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;indexedBinarySearch;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.Collections;;iteratorBinarySearch;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.Collections;;reverse;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;shuffle;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Collections;;swap;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r2);;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r3);;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
java.util.Collections;;swap;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;r1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = $r2;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.Collections;;fill;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;copy;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.util.List: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Collections;;min;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;min;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;max;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;max;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;rotate;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;rotate1;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i4, r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;rotate2;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(0, i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(i2, i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;replaceAll;;1
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i3, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;indexOfSubList;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<java.util.List: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Collections;;lastIndexOfSubList;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.List: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r0.<java.util.List: java.util.ListIterator listIterator(int)>(i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<java.util.List: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Collections;;list;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r0.<java.util.Enumeration: java.lang.Object nextElement()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;frequency;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Collections;;disjoint;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.util.Collection: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z3 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(r5);;pattern detected param  r0 must not be null it define a local r2which used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
java.util.Collections;;addAll;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r3 = r2[i1];;pattern detected param  r1 must not be null it define a local r2which used in  ArrayRef 
java.util.Currency;;getInstance;;1
*;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Currency;;getInstance;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Currency;;readIntArray;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Currency;;readLongArray;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l2 = virtualinvoke r0.<java.io.DataInputStream: long readLong()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Currency;;readStringArray;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Currency;;replaceCurrencyData;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r9 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;split;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i1, $i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i1, $i7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i9 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i1, $i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;quote;;1
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\\E");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("\\E", i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i6);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;normalizeCharClass;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;produceEquivalentAlternation;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;producePermutations;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i5, $i27);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;composeOneStep;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;bitsOrSingle;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.util.regex.Pattern$BitClass: java.util.regex.Pattern$BitClass add(int,int)>(i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;countChars;;1
*;; * ;; * ;;r0;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$c6 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c9 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i8);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c10 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c13 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c15 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i14);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;countCodePoints;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c4 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c5 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.regex.Pattern;;newSlice;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$i2 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i6 = r1[i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.regex.Pattern;;hasBaseCharacter;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.util.regex.Matcher: boolean transparentBounds>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r0.<java.util.regex.Matcher: int 'from'>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.regex.Matcher;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.util.regex.Pattern: int capturingGroupCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.util.regex.Pattern: int localCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.regex.Matcher;;usePattern;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.regex.Matcher;;group;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.regex.Matcher;;quoteReplacement;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(92);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(36);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.regex.Matcher;;appendReplacement;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>($r35, $i24, $i25);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r2.<java.lang.String: int length()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c7 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i8);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r2.<java.lang.String: int length()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i10);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i15 = virtualinvoke r2.<java.lang.String: int length()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c16 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.regex.Matcher;;appendTail;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>($r2, $i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.regex.Matcher;;replaceFirst;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.StringTokenizer;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.DuplicateFormatFlagsException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.EnumMap;;<init>;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.util.EnumMap: java.lang.Class keyType>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.EnumMap: java.lang.Enum[] keyUniverse>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.util.EnumMap: java.lang.Object[] vals>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.util.EnumMap: int size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.EnumMap;;<init>;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.EnumMap: java.lang.Class keyType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.util.EnumMap: java.lang.Enum[] keyUniverse>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r5 = r2.<java.util.EnumMap: java.lang.Object[] vals>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i0 = r2.<java.util.EnumMap: int size>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;containsKey;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null it define a local $r3which used in  InvokeExpr 
java.util.EnumMap;;containsMapping;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = virtualinvoke $r5.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null it define a local $r5which used in  InvokeExpr 
java.util.EnumMap;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null it define a local $r3which used in  InvokeExpr 
java.util.EnumMap;;put;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;remove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null it define a local $r3which used in  InvokeExpr 
java.util.EnumMap;;removeMapping;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null it define a local $r3which used in  InvokeExpr 
java.util.EnumMap;;putAll;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r5 = r2.<java.util.EnumMap: java.lang.Class keyType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z1 = virtualinvoke r2.<java.util.EnumMap: boolean isEmpty()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r8 = r2.<java.util.EnumMap: java.lang.Class keyType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r15 = r2.<java.util.EnumMap: java.lang.Object[] vals>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.EnumMap;;equals;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i2 = interfaceinvoke r2.<java.util.Map: int size()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z3 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.EnumMap;;equals;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.util.EnumMap: java.lang.Class keyType>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.util.EnumMap: int size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.util.EnumMap: java.lang.Object[] vals>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.EnumMap;;typeCheck;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;writeObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;readObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.EnumMap: int size>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.EnumMap;;access$500;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = specialinvoke r0.<java.util.EnumMap: java.lang.Object maskNull(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;access$600;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.EnumMap: java.lang.Object[] vals>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.EnumMap;;access$210;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.EnumMap: int size>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.EnumMap: int size> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.EnumMap;;access$900;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = specialinvoke r0.<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;access$1000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = specialinvoke r0.<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;access$1100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.EnumMap: java.lang.Enum[] keyUniverse>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.EnumMap;;access$1200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = specialinvoke r0.<java.util.EnumMap: java.lang.Object unmaskNull(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumMap;;access$1600;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = specialinvoke r0.<java.util.EnumMap: int entryHashCode(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;copyOf;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = virtualinvoke r0.<java.util.EnumSet: java.util.EnumSet clone()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;copyOf;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r5 = virtualinvoke $r4.<java.util.EnumSet: java.util.EnumSet clone()>();;pattern detected param  r0 must not be null it define a local $r4which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;of;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;of;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;of;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;of;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;of;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;of;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r4 = r3[i1];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
java.util.EnumSet;;range;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.lang.Enum: int compareTo(java.lang.Enum)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r0.<java.lang.Enum: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.EnumSet;;typeCheck;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.JumboEnumSet;;addRange;;2
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i14 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i17 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.JumboEnumSet;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.JumboEnumSet;;containsAll;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = virtualinvoke r2.<java.util.JumboEnumSet: boolean isEmpty()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<java.util.JumboEnumSet: long[] elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.JumboEnumSet;;addAll;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = virtualinvoke r2.<java.util.JumboEnumSet: boolean isEmpty()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r7 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r15 = r2.<java.util.JumboEnumSet: long[] elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.JumboEnumSet;;removeAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r7 = r2.<java.util.JumboEnumSet: long[] elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.JumboEnumSet;;retainAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r7 = r2.<java.util.JumboEnumSet: long[] elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.JumboEnumSet;;equals;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.JumboEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.util.JumboEnumSet: int size>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r5 = r2.<java.util.JumboEnumSet: long[] elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.JumboEnumSet;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.JumboEnumSet: long[] elements>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.JumboEnumSet;;access$110;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.JumboEnumSet: int size>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.JumboEnumSet: int size> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.RegularEnumSet;;addRange;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.RegularEnumSet;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.RegularEnumSet;;containsAll;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = virtualinvoke r2.<java.util.RegularEnumSet: boolean isEmpty()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$l0 = r2.<java.util.RegularEnumSet: long elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.RegularEnumSet;;addAll;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = virtualinvoke r2.<java.util.RegularEnumSet: boolean isEmpty()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r7 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$l2 = r2.<java.util.RegularEnumSet: long elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.RegularEnumSet;;removeAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$l2 = r2.<java.util.RegularEnumSet: long elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.RegularEnumSet;;retainAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$l4 = r2.<java.util.RegularEnumSet: long elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.RegularEnumSet;;equals;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.util.RegularEnumSet: java.lang.Class elementType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$l2 = r2.<java.util.RegularEnumSet: long elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$l4 = r2.<java.util.RegularEnumSet: long elements>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.RegularEnumSet;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r0.<java.util.RegularEnumSet: long elements>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.RegularEnumSet;;access$074;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$l1 = r0.<java.util.RegularEnumSet: long elements>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.RegularEnumSet: long elements> = $l2;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.EventObject;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.FormatFlagsConversionMismatchException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Formatter;;parse;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Formatter;;checkText;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.Formatter;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.Formatter: java.lang.Appendable a>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Formatter;;access$300;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$c0 = r0.<java.util.Formatter: char zero>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Objects;;compare;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.Objects;;requireNonNull;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.Objects;;requireNonNull;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.MissingFormatArgumentException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.UnknownFormatConversionException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.LinkedHashMap;;transfer;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i1] = r2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.LinkedHashMap;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.util.LinkedHashMap: boolean accessOrder>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.LinkedHashMap;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.LinkedHashMap: java.util.LinkedHashMap$Entry header>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.LinkedHashSet;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.IdentityHashMap;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.IdentityHashMap;;putAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.IdentityHashMap;;equals;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i1 = virtualinvoke r2.<java.util.IdentityHashMap: int size()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r3 = r2.<java.util.IdentityHashMap: java.lang.Object[] table>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r8 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null it define a local r6which used in  InvokeExpr 
java.util.IdentityHashMap;;writeObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.IdentityHashMap;;readObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.IdentityHashMap;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.IdentityHashMap: int size>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.IdentityHashMap;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.IdentityHashMap: java.lang.Object[] table>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.IdentityHashMap;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.IdentityHashMap: int modCount>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.IdentityHashMap;;access$204;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.IdentityHashMap: int modCount>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.IdentityHashMap: int modCount> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.IdentityHashMap;;access$010;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.IdentityHashMap: int size>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.IdentityHashMap: int size> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.IdentityHashMap;;access$1500;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = specialinvoke r0.<java.util.IdentityHashMap: boolean containsMapping(java.lang.Object,java.lang.Object)>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.IdentityHashMap;;access$1600;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = specialinvoke r0.<java.util.IdentityHashMap: boolean removeMapping(java.lang.Object,java.lang.Object)>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.IllegalFormatConversionException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.IllegalFormatFlagsException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.LinkedList;;linkBefore;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r2.<java.util.LinkedList$Node: java.util.LinkedList$Node prev>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.util.LinkedList$Node: java.util.LinkedList$Node prev> = r4;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.util.LinkedList;;unlinkFirst;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.LinkedList$Node: java.lang.Object item>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.util.LinkedList$Node: java.util.LinkedList$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.LinkedList$Node: java.lang.Object item> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.LinkedList$Node: java.util.LinkedList$Node next> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.LinkedList;;unlinkLast;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.LinkedList$Node: java.lang.Object item>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.util.LinkedList$Node: java.util.LinkedList$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.LinkedList$Node: java.lang.Object item> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.LinkedList$Node: java.util.LinkedList$Node prev> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.LinkedList;;unlink;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.LinkedList$Node: java.lang.Object item>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.util.LinkedList$Node: java.util.LinkedList$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r4 = r1.<java.util.LinkedList$Node: java.util.LinkedList$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.LinkedList$Node: java.util.LinkedList$Node prev> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.LinkedList$Node: java.util.LinkedList$Node next> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.LinkedList$Node: java.lang.Object item> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.LinkedList;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.LinkedList;;toArray;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;r2[$i4] = $r8;;pattern detected param  r1 must not be null it define a local r2which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i7] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.LinkedList;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.LinkedList;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ListResourceBundle;;handleGetObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.PropertyPermission;;implies;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.util.PropertyPermission: int mask>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i3 = r2.<java.util.PropertyPermission: int mask>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.PropertyPermission;;equals;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.util.PropertyPermission: int mask>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r4 = virtualinvoke r2.<java.util.PropertyPermission: java.lang.String getName()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.PropertyPermission;;writeObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PropertyPermission;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.MissingFormatWidthException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Observable;;addObserver;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Vector;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Vector;;toArray;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i6] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.Vector;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Vector;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Vector;;writeObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PriorityQueue;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = interfaceinvoke r2.<java.util.SortedSet: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r5 = virtualinvoke r4.<java.util.PriorityQueue: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null it define a local r4which used in  InvokeExpr 
java.util.PriorityQueue;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.util.PriorityQueue: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PriorityQueue;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.SortedSet: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PriorityQueue;;initFromPriorityQueue;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.util.PriorityQueue: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.PriorityQueue: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PriorityQueue;;initElementsFromCollection;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PriorityQueue;;offer;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.PriorityQueue;;toArray;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i6] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.PriorityQueue;;siftUpComparable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i3 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.PriorityQueue;;siftDownComparable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i9 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.PriorityQueue;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PriorityQueue;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.PriorityQueue;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.PriorityQueue: int modCount>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.PriorityQueue;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.PriorityQueue: int size>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.PriorityQueue;;access$300;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.PriorityQueue: java.lang.Object[] queue>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.PriorityQueue;;access$400;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = specialinvoke r0.<java.util.PriorityQueue: java.lang.Object removeAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.XMLUtils;;importProperties;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r10, r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.XMLUtils;;save;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r24 = virtualinvoke r0.<java.util.Properties: java.util.Set stringPropertyNames()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r28 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r10);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.PropertyResourceBundle;;handleGetObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Scanner;;<init>;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.Scanner;;useLocale;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Scanner;;hasNext;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Scanner;;next;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Scanner;;findInLine;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Scanner;;findWithinHorizon;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Scanner;;skip;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.Scanner;;processIntegerToken;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r7, "");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.Scanner;;processFloatToken;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r5, "");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.ServiceLoader;;fail;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.ServiceLoader;;fail;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.ServiceLoader;;parseLine;;2
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r4;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r6);;pattern detected param  r4 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);;pattern detected param  r4 must not be null  because used in  InvokeExpr 
java.util.ServiceLoader;;parse;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.net.URL: java.io.InputStream openStream()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.ServiceLoader;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = specialinvoke r0.<java.util.ServiceLoader: java.util.Iterator parse(java.lang.Class,java.net.URL)>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.ServiceLoader;;access$400;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.ServiceLoader: java.util.LinkedHashMap providers>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.ServiceLoader;;access$500;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.ServiceLoader: java.util.ServiceLoader$LazyIterator lookupIterator>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Timer;;schedule;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r2.<java.util.Date: long getTime()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.Timer;;schedule;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l2 = virtualinvoke r2.<java.util.Date: long getTime()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.Timer;;scheduleAtFixedRate;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l2 = virtualinvoke r2.<java.util.Date: long getTime()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.Timer;;sched;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;FieldRef for param;;$r10 = r1.<java.util.TimerTask: java.lang.Object lock>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.util.TimerTask: int state>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TimerTask: long nextExecutionTime> = l0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TimerTask: long period> = l1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TimerTask: int state> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.Timer;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.Timer: java.util.TaskQueue queue>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.Timer;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.Timer: java.util.TimerThread thread>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.TreeMap;;<init>;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<java.util.SortedMap: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.SortedMap: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.SortedMap: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.TreeMap;;putAll;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.util.Map: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r2 = interfaceinvoke $r4.<java.util.SortedMap: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null it define a local $r4which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.TreeMap;;getEntry;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.TreeMap;;put;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r11;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.TreeMap;;compare;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);;pattern detected param  r1 must not be null it define a local $r4which used in  InvokeExpr 
java.util.TreeMap;;key;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.TreeMap;;fixAfterInsertion;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TreeMap$Entry: boolean color> = 0;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.TreeMap;;deleteEntry;;1
*;; * ;; * ;;r1;;24
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry left>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry right>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TreeMap$Entry: java.lang.Object key> = $r7;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TreeMap$Entry: java.lang.Object value> = $r8;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry left>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r10 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry left>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r10 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry right>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r12 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r13 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r14 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r16 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r17 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent> = $n0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry right> = $n0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry left> = $n0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r1.<java.util.TreeMap$Entry: boolean color>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r18 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$z1 = r1.<java.util.TreeMap$Entry: boolean color>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r19 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r20 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r22 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r23 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r25 = r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.TreeMap$Entry: java.util.TreeMap$Entry parent> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.TreeMap;;writeObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.TreeMap;;readObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.TreeMap;;addAllForTreeSet;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.SortedSet: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.util.SortedSet: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.TreeMap;;buildFromSorted;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.TreeMap;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.TreeMap: void deleteEntry(java.util.TreeMap$Entry)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.TreeMap;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.TreeMap: int modCount>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.TreeMap;;access$300;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.TreeMap: java.util.Comparator comparator>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.TreeSet;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.SortedSet: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.TreeSet;;addAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r4 = interfaceinvoke r2.<java.util.SortedSet: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.TreeSet;;writeObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.TreeSet;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.UnknownFormatFlagsException;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.UUID;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$b5 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b10 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.UUID;;fromString;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.UUID;;compareTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$l1 = r1.<java.util.UUID: long mostSigBits>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l5 = r1.<java.util.UUID: long mostSigBits>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l8 = r1.<java.util.UUID: long leastSigBits>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l11 = r1.<java.util.UUID: long leastSigBits>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.AbstractExecutorService;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.AbstractExecutorService;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.AbstractExecutorService;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.AbstractExecutorService;;doInvokeAny;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r13;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.AbstractExecutorService;;invokeAny;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.AbstractExecutorService;;invokeAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.TimeUnit;;timedWait;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.Object: void wait(long,int)>(l1, i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.TimeUnit;;timedJoin;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.Thread: void join(long,int)>(l1, i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.FutureTask;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.FutureTask;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ExecutorCompletionService;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ExecutorCompletionService;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ExecutorCompletionService;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ExecutorCompletionService;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue completionQueue>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;enq;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node prev> = r2;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;setHead;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.lang.Thread thread> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node prev> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;unparkSuccessor;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;setHeadAndPropagate;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;shouldParkAfterFailedAcquire;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r0.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r0.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node prev>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node prev> = $r2;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;acquireQueued;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;isQueued;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;isOnSyncQueue;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;transferForSignal;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.lang.Thread thread>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;fullyRelease;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;owns;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;hasWaiters;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: boolean hasWaiters()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;getWaitQueueLength;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: int getWaitQueueLength()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.AbstractQueuedSynchronizer;;getWaitingThreads;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.Collection getWaitingThreads()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ArrayBlockingQueue;;checkNotNull;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.ArrayBlockingQueue;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ArrayBlockingQueue;;offer;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.ArrayBlockingQueue;;poll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ArrayBlockingQueue;;toArray;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i3] = $r9;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.ArrayBlockingQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ArrayBlockingQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;unlink;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: void lazySetPrev(java.util.concurrent.ConcurrentLinkedDeque$Node)>($r21);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: void lazySetNext(java.util.concurrent.ConcurrentLinkedDeque$Node)>($r23);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;unlinkFirst;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: boolean casNext(java.util.concurrent.ConcurrentLinkedDeque$Node,java.util.concurrent.ConcurrentLinkedDeque$Node)>(r2, r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.lang.Object item>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r7 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r8 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r10 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r11 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.lang.Object item>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r12 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
java.util.concurrent.ConcurrentLinkedDeque;;unlinkLast;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: boolean casPrev(java.util.concurrent.ConcurrentLinkedDeque$Node,java.util.concurrent.ConcurrentLinkedDeque$Node)>(r2, r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.lang.Object item>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r7 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r8 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r10 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r11 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.lang.Object item>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r12 = r4.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
java.util.concurrent.ConcurrentLinkedDeque;;skipDeletedPredecessors;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: boolean casPrev(java.util.concurrent.ConcurrentLinkedDeque$Node,java.util.concurrent.ConcurrentLinkedDeque$Node)>(r2, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.lang.Object item>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ConcurrentLinkedDeque;;skipDeletedSuccessors;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: boolean casNext(java.util.concurrent.ConcurrentLinkedDeque$Node,java.util.concurrent.ConcurrentLinkedDeque$Node)>(r2, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.lang.Object item>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ConcurrentLinkedDeque;;succ;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ConcurrentLinkedDeque;;pred;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ConcurrentLinkedDeque$Node: java.util.concurrent.ConcurrentLinkedDeque$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ConcurrentLinkedDeque;;checkNotNull;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentLinkedDeque;;screenNullResult;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentLinkedDeque;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;initHeadTail;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.util.concurrent.ConcurrentLinkedDeque$Node: void lazySetNext(java.util.concurrent.ConcurrentLinkedDeque$Node)>(r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;removeFirstOccurrence;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;removeLastOccurrence;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedDeque;;readObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedQueue;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedQueue;;updateHead;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ConcurrentLinkedQueue$Node: void lazySetNext(java.util.concurrent.ConcurrentLinkedQueue$Node)>(r1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedQueue;;succ;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ConcurrentLinkedQueue;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedQueue;;toArray;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i2] = r3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.ConcurrentLinkedQueue;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedQueue;;readObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentLinkedQueue;;checkNotNull;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;comparable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;compare;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i1 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);;pattern detected param  r1 must not be null it define a local $r4which used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListMap;;inHalfOpenRange;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;inOpenRange;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;findPredecessor;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;findNode;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListMap;;addIndex;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Node node>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z1 = virtualinvoke r6.<java.util.concurrent.ConcurrentSkipListMap$Index: boolean indexesDeletedNode()>();;pattern detected param  r1 must not be null it define a local r6which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z3 = virtualinvoke r6.<java.util.concurrent.ConcurrentSkipListMap$Index: boolean indexesDeletedNode()>();;pattern detected param  r1 must not be null it define a local r6which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r6 = r6.<java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down>;;pattern detected param  r1 must not be null it define a local r6which used in  FieldRef 
*;; * ;; * ;;r2;;7
*;;*;;*;;*;;*;;FieldRef for param;;i2 = r2.<java.util.concurrent.ConcurrentSkipListMap$HeadIndex: int level>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r5 = r4.<java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z0 = virtualinvoke r4.<java.util.concurrent.ConcurrentSkipListMap$Index: boolean unlink(java.util.concurrent.ConcurrentSkipListMap$Index)>(r5);;pattern detected param  r2 must not be null it define a local r4which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r5 = r4.<java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = virtualinvoke r4.<java.util.concurrent.ConcurrentSkipListMap$Index: boolean link(java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index)>(r5, r6);;pattern detected param  r2 must not be null it define a local r4which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r4 = r4.<java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index down>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r5 = r4.<java.util.concurrent.ConcurrentSkipListMap$Index: java.util.concurrent.ConcurrentSkipListMap$Index right>;;pattern detected param  r2 must not be null it define a local r4which used in  FieldRef 
java.util.concurrent.ConcurrentSkipListMap;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.util.SortedMap: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListMap;;buildFromSorted;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r10;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;writeObject;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListMap;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r13 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListMap;;put;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;containsValue;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;equals;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r12 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListMap;;putIfAbsent;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;remove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;replace;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;headMap;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;tailMap;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ConcurrentSkipListMap;;toList;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListSet;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<java.util.SortedSet: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListSet;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = interfaceinvoke r2.<java.util.Collection: boolean containsAll(java.util.Collection)>(r0);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.concurrent.ConcurrentSkipListSet;;removeAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;indexOf;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.CopyOnWriteArrayList;;lastIndexOf;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.CopyOnWriteArrayList;;toArray;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.CopyOnWriteArrayList;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.CopyOnWriteArrayList;;containsAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;removeAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;retainAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;addAllAbsent;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;readObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CopyOnWriteArrayList;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>(i0, i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.concurrent.CountDownLatch;;await;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.CyclicBarrier;;await;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.DelayQueue;;poll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.DelayQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.DelayQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.DelayQueue;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.concurrent.DelayQueue;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.concurrent.DelayQueue: java.util.PriorityQueue q>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.concurrent.Exchanger;;tryCancel;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r0.<java.util.concurrent.Exchanger$Node: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, $r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.util.concurrent.Exchanger$Slot: java.lang.Object get()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.Exchanger$Slot: boolean compareAndSet(java.lang.Object,java.lang.Object)>(r0, null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.Exchanger;;spinWait;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.util.concurrent.Exchanger$Node: java.lang.Object get()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.concurrent.Exchanger;;await;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r0.<java.util.concurrent.Exchanger$Node: java.lang.Object get()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r0.<java.util.concurrent.Exchanger$Node: java.lang.Thread waiter>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.concurrent.Exchanger$Node: java.lang.Thread waiter> = r2;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.concurrent.Exchanger;;awaitNanos;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.util.concurrent.Exchanger$Node: java.lang.Object get()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.util.concurrent.Exchanger$Node: java.lang.Thread waiter>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.Exchanger$Node: java.lang.Thread waiter> = r3;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.Exchanger;;scanOnTimeout;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.util.concurrent.Exchanger$Node: java.lang.Object item>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.Exchanger;;exchange;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.LockSupport;;getBlocker;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingQueue;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingQueue;;put;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingQueue;;offer;;2
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingQueue;;offer;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingQueue;;poll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l2 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingQueue;;unlink;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.LinkedBlockingQueue$Node: java.lang.Object item> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.concurrent.LinkedBlockingQueue$Node: java.util.concurrent.LinkedBlockingQueue$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.util.concurrent.LinkedBlockingQueue$Node: java.util.concurrent.LinkedBlockingQueue$Node next> = $r3;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.util.concurrent.LinkedBlockingQueue;;toArray;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i3] = $r10;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i1] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.LinkedBlockingQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingQueue;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingQueue;;readObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingQueue;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.concurrent.LinkedBlockingQueue: java.util.concurrent.LinkedBlockingQueue$Node head>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.concurrent.Executors;;unconfigurableExecutorService;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.Executors;;unconfigurableScheduledExecutorService;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.Executors;;callable;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.Executors;;callable;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.Executors;;callable;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.Executors;;callable;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.Executors;;privilegedCallable;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.Executors;;privilegedCallableUsingCurrentClassLoader;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.util.concurrent.ThreadPoolExecutor;;processWorkerExit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$l2 = r1.<java.util.concurrent.ThreadPoolExecutor$Worker: long completedTasks>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ThreadPoolExecutor;;runWorker;;1
*;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ThreadPoolExecutor$Worker: java.lang.Runnable firstTask>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ThreadPoolExecutor$Worker: java.lang.Runnable firstTask> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ThreadPoolExecutor$Worker: void lock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.util.concurrent.ThreadPoolExecutor$Worker: java.lang.Thread thread>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r1.<java.util.concurrent.ThreadPoolExecutor$Worker: long completedTasks>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ThreadPoolExecutor$Worker: long completedTasks> = $l1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ThreadPoolExecutor$Worker: void unlock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$l2 = r1.<java.util.concurrent.ThreadPoolExecutor$Worker: long completedTasks>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ThreadPoolExecutor$Worker: long completedTasks> = $l3;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ThreadPoolExecutor$Worker: void unlock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ThreadPoolExecutor;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l5 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ThreadPoolExecutor;;execute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ThreadPoolExecutor;;awaitTermination;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ThreadPoolExecutor;;setThreadFactory;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ThreadPoolExecutor;;setRejectedExecutionHandler;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ThreadPoolExecutor;;setKeepAliveTime;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ThreadPoolExecutor;;getKeepAliveTime;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l0, $r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.SynchronousQueue;;put;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.SynchronousQueue;;offer;;2
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.SynchronousQueue;;offer;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.SynchronousQueue;;poll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.SynchronousQueue;;containsAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.SynchronousQueue;;toArray;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.SynchronousQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.SynchronousQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.SynchronousQueue;;writeObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.SynchronousQueue;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.SynchronousQueue;;objectFieldOffset;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r0.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.ScheduledThreadPoolExecutor;;delayedExecute;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = interfaceinvoke r1.<java.util.concurrent.RunnableScheduledFuture: boolean isPeriodic()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.concurrent.RunnableScheduledFuture: boolean cancel(boolean)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ScheduledThreadPoolExecutor;;reExecutePeriodic;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.concurrent.RunnableScheduledFuture: boolean cancel(boolean)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ScheduledThreadPoolExecutor;;triggerTime;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l3 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ScheduledThreadPoolExecutor;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.util.concurrent.ScheduledThreadPoolExecutor: boolean removeOnCancel>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinPool;;work;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z1 = r1.<java.util.concurrent.ForkJoinWorkerThread: boolean terminate>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinPool;;scan;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;FieldRef for param;;i3 = r1.<java.util.concurrent.ForkJoinWorkerThread: int seed>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i30 = r1.<java.util.concurrent.ForkJoinWorkerThread: int poolIndex>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinWorkerThread: void execTask(java.util.concurrent.ForkJoinTask)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: int seed> = $i36;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinWorkerThread: void execTask(java.util.concurrent.ForkJoinTask)>(r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinPool;;tryAwaitWork;;1
*;; * ;; * ;;r1;;11
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: int nextWait> = $i7;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i20 = r1.<java.util.concurrent.ForkJoinWorkerThread: int stealCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: int stealCount> = $b24;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i25 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i33 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i38 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: boolean parked> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i42 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: boolean parked> = 0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: boolean parked> = $z9;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinPool;;idleAwaitWork;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: boolean parked> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: boolean parked> = 0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: boolean terminate> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.ForkJoinWorkerThread: int eventCount> = $i15;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinPool;;tryAwaitJoin;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: void tryAwaitDone(long)>(0L);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: void cancelIgnoringExceptions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinPool;;timedAwaitJoin;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: void cancelIgnoringExceptions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: void tryAwaitDone(long)>(l2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: void cancelIgnoringExceptions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinPool;;awaitBlocker;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<java.util.concurrent.ForkJoinPool$ManagedBlocker: boolean isReleasable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<java.util.concurrent.ForkJoinPool$ManagedBlocker: boolean isReleasable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = interfaceinvoke r1.<java.util.concurrent.ForkJoinPool$ManagedBlocker: boolean block()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinPool;;deregisterWorker;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r1.<java.util.concurrent.ForkJoinWorkerThread: int poolIndex>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r1.<java.util.concurrent.ForkJoinWorkerThread: int stealCount>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinPool;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;invoke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;execute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;execute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;submit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.ForkJoinPool;;invokeAll;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinPool;;drainTasksTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinPool;;awaitTermination;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinPool;;managedBlock;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r0.<java.util.concurrent.ForkJoinPool$ManagedBlocker: boolean isReleasable()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r0.<java.util.concurrent.ForkJoinPool$ManagedBlocker: boolean block()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinWorkerThread;;<init>;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.util.concurrent.ForkJoinPool: java.lang.String nextWorkerName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.util.concurrent.ForkJoinPool: int registerWorker(java.util.concurrent.ForkJoinWorkerThread)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r1.<java.util.concurrent.ForkJoinPool: boolean locallyFifo>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.ForkJoinPool: java.lang.Thread$UncaughtExceptionHandler ueh>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinWorkerThread;;drainTasksTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinWorkerThread;;joinTask;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinWorkerThread;;helpJoinTask;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i11 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i21 = r3.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null it define a local r3which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i25 = r3.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null it define a local r3which used in  FieldRef 
java.util.concurrent.ForkJoinWorkerThread;;tryDeqAndExec;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: void doExec()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i20 = r1.<java.util.concurrent.ForkJoinTask: int status>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.ForkJoinTask;;invokeAll;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask fork()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.ForkJoinTask: java.lang.Object join()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinTask;;invokeAll;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r2 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r5 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.concurrent.ForkJoinTask;;invokeAll;;1
*;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r0.<java.util.Collection: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i3 = interfaceinvoke r1.<java.util.List: int size()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
java.util.concurrent.ForkJoinTask;;get;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;l7 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinTask;;writeObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.ForkJoinTask;;readObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingDeque;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingDeque;;linkFirst;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.LinkedBlockingDeque$Node: java.util.concurrent.LinkedBlockingDeque$Node next> = r2;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.LinkedBlockingDeque;;linkLast;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.LinkedBlockingDeque$Node: java.util.concurrent.LinkedBlockingDeque$Node prev> = r2;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.LinkedBlockingDeque;;unlink;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.LinkedBlockingDeque$Node: java.util.concurrent.LinkedBlockingDeque$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.util.concurrent.LinkedBlockingDeque$Node: java.util.concurrent.LinkedBlockingDeque$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.LinkedBlockingDeque$Node: java.lang.Object item> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.LinkedBlockingDeque;;offerFirst;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingDeque;;offerLast;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingDeque;;putFirst;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingDeque;;putLast;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingDeque;;offerFirst;;2
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingDeque;;offerLast;;2
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingDeque;;pollFirst;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingDeque;;pollLast;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingDeque;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedBlockingDeque;;toArray;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i4] = $r9;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.LinkedBlockingDeque;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedBlockingDeque;;readObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedTransferQueue;;xfer;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedTransferQueue;;awaitMatch;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;r6 = r1.<java.util.concurrent.LinkedTransferQueue$Node: java.lang.Object item>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.concurrent.LinkedTransferQueue$Node: void forgetContents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.util.concurrent.LinkedTransferQueue$Node: boolean casItem(java.lang.Object,java.lang.Object)>(r3, r1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$z3 = r1.<java.util.concurrent.LinkedTransferQueue$Node: boolean isData>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.util.concurrent.LinkedTransferQueue$Node: java.lang.Thread waiter>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.LinkedTransferQueue$Node: java.lang.Thread waiter> = r4;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.LinkedTransferQueue;;succ;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.LinkedTransferQueue$Node: java.util.concurrent.LinkedTransferQueue$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.LinkedTransferQueue;;unsplice;;1
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.util.concurrent.LinkedTransferQueue$Node: void forgetContents()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r2.<java.util.concurrent.LinkedTransferQueue$Node: java.util.concurrent.LinkedTransferQueue$Node next>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r2.<java.util.concurrent.LinkedTransferQueue$Node: java.util.concurrent.LinkedTransferQueue$Node next>;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.util.concurrent.LinkedTransferQueue;;tryTransfer;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedTransferQueue;;poll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedTransferQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedTransferQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.LinkedTransferQueue;;writeObject;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.LinkedTransferQueue;;readObject;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.Phaser;;awaitAdvanceInterruptibly;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l2 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.Phaser;;internalAwaitAdvance;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.Phaser$QNode: boolean wasInterrupted> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.PriorityBlockingQueue;;<init>;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r6 = interfaceinvoke r3.<java.util.SortedSet: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r8 = virtualinvoke r7.<java.util.concurrent.PriorityBlockingQueue: java.util.Comparator comparator()>();;pattern detected param  r1 must not be null it define a local r7which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r9 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null it define a local r7which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r10 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.PriorityBlockingQueue;;siftUpComparable;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i3 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);;pattern detected param  r0 must not be null it define a local r2which used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.PriorityBlockingQueue;;siftUpUsingComparator;;2
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.PriorityBlockingQueue;;siftDownComparable;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i8 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);;pattern detected param  r0 must not be null it define a local r2which used in  InvokeExpr 
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.PriorityBlockingQueue;;siftDownUsingComparator;;2
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, $r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = interfaceinvoke r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = r0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.PriorityBlockingQueue;;offer;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.PriorityBlockingQueue;;poll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.PriorityBlockingQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.PriorityBlockingQueue;;drainTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.PriorityBlockingQueue;;toArray;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = null;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.PriorityBlockingQueue;;writeObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.PriorityBlockingQueue;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.PriorityBlockingQueue;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: void removeEQ(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.concurrent.Semaphore;;tryAcquire;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.Semaphore;;tryAcquire;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l2 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.atomic.AtomicIntegerArray;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.atomic.AtomicLongArray;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.atomic.AtomicMarkableReference;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $z0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.atomic.AtomicMarkableReference;;objectFieldOffset;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r0.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.atomic.AtomicReferenceArray;;readObject;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.atomic.AtomicStampedReference;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $i0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.concurrent.atomic.AtomicStampedReference;;objectFieldOffset;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r0.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;enq;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node prev> = r2;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;setHead;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.lang.Thread thread> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node prev> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;unparkSuccessor;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: int waitStatus>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;setHeadAndPropagate;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;shouldParkAfterFailedAcquire;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r0.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: int waitStatus>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r0.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node prev>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: int waitStatus>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node next> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node prev> = $r2;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;acquireQueued;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node predecessor()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;isQueued;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;isOnSyncQueue;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: int waitStatus>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node prev>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node next>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;transferForSignal;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: java.lang.Thread thread>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;fullyRelease;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: int waitStatus> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node: int waitStatus> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;owns;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;hasWaiters;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject: boolean hasWaiters()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;getWaitQueueLength;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject: int getWaitQueueLength()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.AbstractQueuedLongSynchronizer;;getWaitingThreads;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject: java.util.Collection getWaitingThreads()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.concurrent.locks.ReentrantReadWriteLock;;hasWaiters;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.ReentrantReadWriteLock;;getWaitQueueLength;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.concurrent.locks.ReentrantReadWriteLock;;getWaitingThreads;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.jar.Attributes;;putAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.Attributes;;write;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.DataOutputStream: void writeBytes(java.lang.String)>("\r\n");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.Attributes;;writeMain;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r28);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.DataOutputStream: void writeBytes(java.lang.String)>("\r\n");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.Attributes;;read;;2
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.util.jar.Manifest$FastInputStream: int readLine(byte[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$b14 = virtualinvoke r1.<java.util.jar.Manifest$FastInputStream: byte peek()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$b21 = virtualinvoke r1.<java.util.jar.Manifest$FastInputStream: byte peek()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;ArrayRef for param;;$b4 = r2[i3];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b6 = r2[$i5];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b7 = r2[0];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b17 = r2[$i16];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b19 = r2[i1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.util.jar.Manifest;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.util.jar.Manifest: java.util.Map getEntries()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.Manifest;;make72Safe;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(i1, "\r\n ");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.jar.Manifest;;parseName;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$b1 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b3 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b5 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b7 = r1[3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b9 = r1[4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b10 = r1[5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.jar.Manifest;;equals;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r4 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r6 = virtualinvoke r2.<java.util.jar.Manifest: java.util.Map getEntries()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.util.jar.JarEntry;;<init>;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.util.jar.JarEntry: java.util.jar.Attributes attr>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.jar.JarEntry: java.security.cert.Certificate[] certs>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.util.jar.JarEntry: java.security.CodeSigner[] signers>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.zip.ZipEntry;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.ZipEntry;;<init>;;1
*;; * ;; * ;;r1;;9
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.util.zip.ZipEntry: java.lang.String name>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r1.<java.util.zip.ZipEntry: long time>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l1 = r1.<java.util.zip.ZipEntry: long crc>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l2 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l3 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.util.zip.ZipEntry: int method>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.util.zip.ZipEntry: int flag>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.util.zip.ZipEntry: byte[] extra>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.util.zip.ZipEntry: java.lang.String comment>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.jar.JarFile;;getBytes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r1.<java.util.zip.ZipEntry: long getSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JarFile;;getInputStream;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JarFile;;entryNames;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.jar.JarFile;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.jar.JarFile: void maybeInstantiateVerifier()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.jar.JarFile;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.jar.JarFile: java.util.jar.JarVerifier jv>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.zip.ZipFile;;<init>;;2
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r13;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$l5 = virtualinvoke r1.<java.io.File: long lastModified()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.ZipFile;;getEntry;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.ZipFile;;getInputStream;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r10;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.ZipFile;;releaseInflater;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.util.zip.Inflater: boolean ended()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.zip.Inflater: void reset()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.ZipFile;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.zip.ZipFile: java.util.Map streams>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.zip.ZipFile;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.zip.ZipFile: void releaseInflater(java.util.zip.Inflater)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.zip.ZipFile;;access$200;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.zip.ZipFile: void ensureOpen()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.zip.ZipFile;;access$300;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.zip.ZipFile: int total>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.zip.ZipFile;;access$400;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r0.<java.util.zip.ZipFile: long jzfile>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.zip.ZipFile;;access$600;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.util.zip.ZipFile: boolean closeRequested>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.zip.ZipFile;;access$800;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.zip.ZipFile: java.lang.String name>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.zip.ZipFile;;access$900;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = specialinvoke r0.<java.util.zip.ZipFile: java.util.zip.ZipEntry getZipEntry(java.lang.String,long)>(r1, l0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.zip.ZipFile;;access$1300;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.zip.ZipFile: void ensureOpenOrZipException()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;beginEntry;;1
*;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(r4, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>(null, r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;update;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: void update(byte)>($b1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;update;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>(r1, i1, i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;processEntry;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: java.util.jar.JarEntry getEntry()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>($r9, $r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r16 = virtualinvoke r1.<sun.security.util.ManifestEntryVerifier: java.util.jar.JarEntry getEntry()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;getCodeSigners;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.util.jar.JarEntry: java.lang.String getName()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;mapSignersToCodeSources;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r2.<java.util.List: int size()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;findMatchingSigners;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z1 = virtualinvoke r2.<java.util.jar.JarVerifier$VerifierCodeSource: boolean isSameDomain(java.lang.Object)>($r5);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;entryNames;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r9 = r2[i0];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.util.jar.JarVerifier;;isSigningRelated;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.jar.JarVerifier;;unsignedEntryNames;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.util.jar.JarFile: java.util.Enumeration entries()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.ZipCoder;;getBytes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.ZipCoder;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.Inflater;;setInput;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.Inflater;;setDictionary;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.Inflater;;inflate;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.jar.JavaUtilJarAccessImpl;;jarFileHasClassPathAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.util.jar.JarFile: boolean hasClassPathAttribute()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JavaUtilJarAccessImpl;;getCodeSources;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.util.jar.JarFile: java.security.CodeSource[] getCodeSources(java.net.URL)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JavaUtilJarAccessImpl;;getCodeSource;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.jar.JarFile: java.security.CodeSource getCodeSource(java.net.URL,java.lang.String)>(r2, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JavaUtilJarAccessImpl;;entryNames;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.util.jar.JarFile: java.util.Enumeration entryNames(java.security.CodeSource[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JavaUtilJarAccessImpl;;entries2;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.util.jar.JarFile: java.util.Enumeration entries2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JavaUtilJarAccessImpl;;setEagerValidation;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.jar.JarFile: void setEagerValidation(boolean)>(z0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JavaUtilJarAccessImpl;;getManifestDigests;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.util.jar.JarFile: java.util.List getManifestDigests()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JarInputStream;;getBytes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.ZipInputStream;;<init>;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.zip.ZipInputStream;;readEnd;;1
*;; * ;; * ;;r1;;18
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long crc> = l1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long csize> = $l11;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long size> = $l12;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long crc> = $l13;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long csize> = $l14;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long size> = $l15;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long crc> = l16;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long csize> = $l18;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long size> = $l19;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long crc> = $l20;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long csize> = $l21;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long size> = $l22;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l23 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l26 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l28 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l31 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l33 = r1.<java.util.zip.ZipEntry: long crc>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l36 = r1.<java.util.zip.ZipEntry: long crc>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.zip.ZipInputStream;;get16;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$b1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b4 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.zip.InflaterInputStream;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.CRC32;;update;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.jar.JarOutputStream;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.jar.JarOutputStream;;putNextEntry;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.zip.ZipEntry: byte[] getExtra()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.zip.ZipEntry: void setExtra(byte[])>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.jar.JarOutputStream;;get16;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$b1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b4 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.jar.JarOutputStream;;set16;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i2] = $b3;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i4] = $b6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.zip.ZipOutputStream;;version;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.util.zip.ZipEntry: int method>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.zip.ZipOutputStream;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.zip.ZipOutputStream;;putNextEntry;;1
*;; * ;; * ;;r1;;24
*;;*;;*;;*;;*;;FieldRef for param;;$l1 = r1.<java.util.zip.ZipEntry: long time>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.zip.ZipEntry: void setTime(long)>($l0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.util.zip.ZipEntry: int method>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: int method> = $i4;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: int flag> = 0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.util.zip.ZipEntry: int method>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l6 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l8 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l10 = r1.<java.util.zip.ZipEntry: long crc>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: int flag> = 8;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l12 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l14 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long size> = $l14;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l15 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l17 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: long csize> = $l17;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l18 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l19 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l21 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l23 = r1.<java.util.zip.ZipEntry: long crc>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.util.zip.ZipEntry: java.lang.String name>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r11 = r1.<java.util.zip.ZipEntry: java.lang.String name>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i25 = r1.<java.util.zip.ZipEntry: int flag>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.util.zip.ZipEntry: int flag> = $i26;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.zip.ZipOutputStream;;writeLOC;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.zip.ZipOutputStream$XEntry: java.util.zip.ZipEntry entry>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.zip.ZipOutputStream;;writeEXT;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r1.<java.util.zip.ZipEntry: long crc>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l1 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l3 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l5 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l6 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l7 = r1.<java.util.zip.ZipEntry: long csize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l8 = r1.<java.util.zip.ZipEntry: long size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.zip.ZipOutputStream;;writeCEN;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;r2 = r1.<java.util.zip.ZipOutputStream$XEntry: java.util.zip.ZipEntry entry>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;l4 = r1.<java.util.zip.ZipOutputStream$XEntry: long offset>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l10 = r1.<java.util.zip.ZipOutputStream$XEntry: long offset>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$l28 = r1.<java.util.zip.ZipOutputStream$XEntry: long offset>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.util.zip.Deflater;;setInput;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.Deflater;;setDictionary;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.Deflater;;deflate;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.StreamHandler;;setOutputStream;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.LogRecord;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.LogRecord;;setLevel;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.LogRecord;;writeObject;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeByte(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeByte(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(-1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.LogRecord;;readObject;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;b0 = virtualinvoke r1.<java.io.ObjectInputStream: byte readByte()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;b1 = virtualinvoke r1.<java.io.ObjectInputStream: byte readByte()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.LogRecord;;isLoggerImplFrame;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.util.logging.Logger");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.logging.LoggingProxyImpl");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("sun.util.logging.");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Handler;;setFormatter;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Handler;;setErrorManager;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.Handler;;setLevel;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.Handler;;isLoggable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.LogManager;;addPropertyChangeListener;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.LogManager;;processParentHandlers;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>(".", i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.logging.LogManager;;addLogger;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.logging.Logger: java.lang.String getName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.LogManager;;doSetLevel;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.logging.LogManager;;doSetParent;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.util.logging.Logger: void setParent(java.util.logging.Logger)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.logging.LogManager;;findNode;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(".");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.LogManager;;access$102;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.logging.LogManager: java.util.logging.Logger rootLogger> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.logging.LogManager;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.logging.LogManager: java.util.logging.Logger rootLogger>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.logging.LogManager;;access$302;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.logging.LogManager: boolean deathImminent> = z0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.logging.LogManager;;access$402;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.util.logging.LogManager: boolean initializedGlobalHandlers> = z0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.logging.LogManager;;access$600;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = specialinvoke r0.<java.util.logging.LogManager: java.lang.String[] parseClassNames(java.lang.String)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.logging.LogManager;;access$700;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.logging.LogManager: java.lang.ref.ReferenceQueue loggerRefQueue>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.logging.LogManager;;access$800;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.logging.LogManager: java.util.Hashtable namedLoggers>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.logging.LogManager;;access$1100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.logging.LogManager: void initializeGlobalHandlers()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.logging.Formatter;;formatMessage;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Object[] getParameters()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Level;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.Level;;parse;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r18);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.logging.Level;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i0 = r2.<java.util.logging.Level: int value>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.util.logging.SimpleFormatter;;format;;1
*;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;$l0 = virtualinvoke r1.<java.util.logging.LogRecord: long getMillis()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r18 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r23 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;doLog;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.logging.LogRecord: void setLoggerName(java.lang.String)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.logging.LogRecord: void setResourceBundleName(java.lang.String)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.logging.LogRecord: void setResourceBundle(java.util.ResourceBundle)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logp;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logp;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logp;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logp;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;doLog;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.logging.LogRecord: void setLoggerName(java.lang.String)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.logging.LogRecord: void setResourceBundleName(java.lang.String)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.logging.LogRecord: void setResourceBundle(java.util.ResourceBundle)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logrb;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logrb;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logrb;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;logrb;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;isLoggable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.util.logging.Level: int intValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;addHandler;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;findResourceBundle;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r19);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logger;;setParent;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.FileHandler;;open;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$l1 = virtualinvoke r1.<java.io.File: long length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.FileHandler;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.FileHandler;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.FileHandler;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.FileHandler;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.FileHandler;;generate;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.FileHandler;;access$100;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.logging.FileHandler: void rotate()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.logging.XMLFormatter;;a2;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.XMLFormatter;;appendISO8601;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(84);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.XMLFormatter;;escape;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&gt;");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.XMLFormatter;;format;;1
*;; * ;; * ;;r1;;19
*;;*;;*;;*;;*;;InvokeExpr for param;;$l2 = virtualinvoke r1.<java.util.logging.LogRecord: long getMillis()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$l3 = virtualinvoke r1.<java.util.logging.LogRecord: long getMillis()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$l4 = virtualinvoke r1.<java.util.logging.LogRecord: long getSequenceNumber()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getLoggerName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r21 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r24 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r26 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r28 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r30 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.util.logging.LogRecord: int getThreadID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r35 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r39 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r40 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r43 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r46 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getResourceBundleName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r49 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Object[] getParameters()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r50 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getMessage()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r57 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r58 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.Logging;;setLoggerLevel;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.logging.LoggingPermission;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("control");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.LoggingProxyImpl;;getLevel;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = virtualinvoke $r2.<java.util.logging.Logger: java.util.logging.Level getLevel()>();;pattern detected param  r1 must not be null it define a local $r2which used in  InvokeExpr 
java.util.logging.LoggingProxyImpl;;setLevel;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r3.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r4);;pattern detected param  r1 must not be null it define a local $r3which used in  InvokeExpr 
java.util.logging.LoggingProxyImpl;;isLoggable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);;pattern detected param  r1 must not be null it define a local $r3which used in  InvokeExpr 
java.util.logging.LoggingProxyImpl;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r4.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r5, r3);;pattern detected param  r1 must not be null it define a local $r4which used in  InvokeExpr 
java.util.logging.LoggingProxyImpl;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r6, r3, r4);;pattern detected param  r1 must not be null it define a local $r5which used in  InvokeExpr 
java.util.logging.LoggingProxyImpl;;log;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r5.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>($r6, r3, r4);;pattern detected param  r1 must not be null it define a local $r5which used in  InvokeExpr 
java.util.logging.LoggingProxyImpl;;getLevelName;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = virtualinvoke $r2.<java.util.logging.Level: java.lang.String getName()>();;pattern detected param  r1 must not be null it define a local $r2which used in  InvokeExpr 
java.util.logging.MemoryHandler;;publish;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.logging.MemoryHandler;;setPushLevel;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.prefs.AbstractPreferences;;<init>;;1
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(47);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.prefs.AbstractPreferences;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.prefs.AbstractPreferences;;node;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.AbstractPreferences;;node;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.AbstractPreferences;;nodeExists;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.AbstractPreferences;;nodeExists;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z4 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.AbstractPreferences;;addPreferenceChangeListener;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.prefs.AbstractPreferences;;addNodeChangeListener;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.prefs.AbstractPreferences;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.util.prefs.AbstractPreferences: java.util.prefs.AbstractPreferences root>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.util.prefs.Preferences;;nodeName;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.Base64;;byteArrayToBase64;;1
*;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;ArrayRef for param;;$b13 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b15 = r0[i12];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b16 = r0[i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b32 = r0[i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b40 = r0[i31];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.prefs.Base64;;base64ToByteArray;;1
*;; * ;; * ;;r0;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i14);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i18);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i20);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c39 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c42 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i38);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c50 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i41);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.Base64;;base64toInt;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;b1 = r0[c0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.prefs.Base64;;main;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r0[1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.prefs.XmlSupport;;export;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z1 = virtualinvoke $r8.<java.util.prefs.AbstractPreferences: boolean isRemoved()>();;pattern detected param  r1 must not be null it define a local $r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.util.prefs.Preferences: boolean isUserNode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r7 = virtualinvoke r6.<java.util.prefs.Preferences: java.util.prefs.Preferences parent()>();;pattern detected param  r1 must not be null it define a local r6which used in  InvokeExpr 
java.util.prefs.XmlSupport;;putPreferencesInXml;;3
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r16 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r26 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r25);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("map");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r17 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("entry");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r25 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("node");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r11 = $r10.<java.util.prefs.AbstractPreferences: java.lang.Object lock>;;pattern detected param  r2 must not be null it define a local $r10which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z1 = virtualinvoke $r12.<java.util.prefs.AbstractPreferences: boolean isRemoved()>();;pattern detected param  r2 must not be null it define a local $r12which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r2.<java.util.prefs.Preferences: java.lang.String[] keys()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r21 = virtualinvoke r2.<java.util.prefs.Preferences: java.lang.String get(java.lang.String,java.lang.String)>($r20, null);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<java.util.prefs.Preferences: java.lang.String[] childrenNames()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r23 = virtualinvoke r2.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>($r22);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.util.prefs.XmlSupport;;writeDoc;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.DocumentType getDoctype()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.XmlSupport;;ImportSubtree;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r9 = $r8.<java.util.prefs.AbstractPreferences: java.lang.Object lock>;;pattern detected param  r0 must not be null it define a local $r8which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z0 = virtualinvoke $r10.<java.util.prefs.AbstractPreferences: boolean isRemoved()>();;pattern detected param  r0 must not be null it define a local $r10which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r0.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>($r13);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.XmlSupport;;ImportPrefs;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>($r5, $r6);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.XmlSupport;;exportMap;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.XmlSupport;;importMap;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.WindowsPreferences;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = specialinvoke r1.<java.util.prefs.WindowsPreferences: int openKey(int,int)>(4, 131097);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.prefs.WindowsPreferences;;openKey;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b12 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.prefs.WindowsPreferences;;toJavaAlt64Name;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.WindowsPreferences;;toWindowsName;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.WindowsPreferences;;toWindowsAlt64Name;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.WindowsPreferences;;toWindowsValueString;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.WindowsPreferences;;stringToByteArray;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.prefs.WindowsPreferences;;byteArrayToString;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b3 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.util.regex.UnicodeProp;;forName;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.regex.UnicodeProp;;forPOSIXName;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.zip.Adler32;;update;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.Adler32;;update;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$l4 = interfaceinvoke $r4.<sun.nio.ch.DirectBuffer: long address()>();;pattern detected param  r1 must not be null it define a local $r4which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.Adler32;;access$000;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.util.zip.Adler32: void update(java.nio.ByteBuffer)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.util.zip.DeflaterInputStream;;<init>;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.zip.DeflaterInputStream;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.util.zip.GZIPInputStream;;readUByte;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.InputStream: int read()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.GZIPInputStream;;skipBytes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>($r3, $b1, $i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.util.zip.GZIPOutputStream;;writeShort;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i1] = $b3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i4] = $b7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.util.zip.InflaterOutputStream;;<init>;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.util.zip.InflaterOutputStream;;write;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
