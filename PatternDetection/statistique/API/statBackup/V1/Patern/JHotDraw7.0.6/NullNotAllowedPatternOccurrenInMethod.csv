class name;;Method name;;number of detected pattern;;parameter;;number of occurrences;;occurrenceType;;unitOnwhichOccurrenceIsDetected;;commentFragment
nanoxml.XMLElement;;setAttribute;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;setIntAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;setDoubleAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;getAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;getAttribute;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;getIntAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;getIntAttribute;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;getDoubleAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;getDoubleAttribute;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;getBooleanAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;parseString;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;parseString;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;parseString;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;removeAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;write;;1
*;; * ;; * ;;r1;;19
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(60);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(32);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(61);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(34);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(34);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(60);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(47);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(47);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(60);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(47);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r22);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;print;;1
*;; * ;; * ;;r1;;23
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(char[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(60);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(32);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(61);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(34);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(34);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(60);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(47);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>($r18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(47);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(char[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(60);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(47);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(java.lang.String)>($r24);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void write(int)>(10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;writeEncoded;;2
*;; * ;; * ;;r1;;31
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(38);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(108);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(116);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(59);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(38);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(103);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(116);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(59);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(38);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(97);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(109);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(112);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(59);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(38);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(113);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(117);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(111);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(116);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(59);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(38);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(97);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(112);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(111);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(115);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(59);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(38);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(35);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(120);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(59);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(int)>(c1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r2.<java.lang.String: int length()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;scanIdentifier;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;scanWhitespace;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;scanString;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;scanPCData;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;checkCDATA;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;checkLiteral;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;scanElement;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<nanoxml.XMLElement: void setName(java.lang.String)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<nanoxml.XMLElement: void setAttribute(java.lang.String,java.lang.Object)>(r5, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<nanoxml.XMLElement: void addChild(nanoxml.XMLElement)>(r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<nanoxml.XMLElement: void setContent(java.lang.String)>($r13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<nanoxml.XMLElement: void setContent(java.lang.String)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
nanoxml.XMLElement;;resolveEntity;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>(r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.CDATAReader;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i2] = c3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
net.n3.nanoxml.ContentReader;;read;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i2] = c10;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i2] = c4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
net.n3.nanoxml.XMLUtil;;skipComment;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$c2 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: java.lang.String getSystemID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: int getLineNr()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;skipTag;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;scanPublicID;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;scanIdentifier;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;c0 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: void unread(char)>(c0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;scanString;;1
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: int getStreamLevel()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: java.lang.String getSystemID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: int getLineNr()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: void unread(char)>(c3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i9 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: int getStreamLevel()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;processEntity;;3
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: java.lang.String getSystemID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: int getLineNr()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void startNewStream(java.io.Reader,boolean)>(r3, $z1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r2.<net.n3.nanoxml.IXMLEntityResolver: java.io.Reader getEntity(net.n3.nanoxml.IXMLReader,java.lang.String)>(r1, r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;z0 = interfaceinvoke r2.<net.n3.nanoxml.IXMLEntityResolver: boolean isExternalEntity(java.lang.String)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;processCharLiteral;;1
*;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(3, $i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i6);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;skipWhitespace;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;c0 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c0 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: void unread(char)>(c0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;read;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;readChar;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: java.lang.String getSystemID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: int getLineNr()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLUtil;;checkLiteral;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$c1 = interfaceinvoke r0.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLException;;printStackTrace;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("*** Nested Exception:");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLException;;printStackTrace;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("*** Nested Exception:");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.NonValidator;;parseDTD;;1
*;; * ;; * ;;r2;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r2.<net.n3.nanoxml.IXMLReader: int getStreamLevel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r2.<net.n3.nanoxml.IXMLReader: java.lang.String getSystemID()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r2.<net.n3.nanoxml.IXMLReader: int getLineNr()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = interfaceinvoke r2.<net.n3.nanoxml.IXMLReader: char read()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r2.<net.n3.nanoxml.IXMLReader: int getStreamLevel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<net.n3.nanoxml.IXMLReader: void unread(char)>(c3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<net.n3.nanoxml.IXMLReader: void unread(char)>(c3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.NonValidator;;processConditionalSection;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void startNewStream(java.io.Reader)>($r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.NonValidator;;processAttList;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void unread(char)>(c0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void unread(char)>(c1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void unread(char)>(c2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void unread(char)>(c3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.NonValidator;;processEntity;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void unread(char)>(c0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: void unread(char)>(c1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<net.n3.nanoxml.IXMLEntityResolver: void addInternalEntity(java.lang.String,java.lang.String)>(r3, r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<net.n3.nanoxml.IXMLEntityResolver: void addExternalEntity(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.NonValidator;;elementAttributesProcessed;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r10);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLEntityResolver;;openExternalEntity;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: java.lang.String getSystemID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: java.io.Reader openStream(java.lang.String,java.lang.String)>(r2, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<net.n3.nanoxml.IXMLReader: int getLineNr()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.PIReader;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i2] = c3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
net.n3.nanoxml.StdXMLBuilder;;addPCData;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.io.Reader: int read(char[])>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLElement;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLElement;;setName;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLElement;;addChild;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
net.n3.nanoxml.XMLElement;;insertChild;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
net.n3.nanoxml.XMLElement;;removeChild;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
net.n3.nanoxml.XMLElement;;setAttribute;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLElement;;equalsXMLElement;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: int getAttributeCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: boolean hasAttribute(java.lang.String,java.lang.String)>($r11, $r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getAttribute(java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getAttributeType(java.lang.String,java.lang.String)>($r16, $r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: int getChildrenCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r21 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: net.n3.nanoxml.IXMLElement getChildAtIndex(int)>(i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.StdXMLParser;;processElement;;1
*;; * ;; * ;;r2;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, r13);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r45 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r57 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r15);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r61 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r72 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r99 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r101 = virtualinvoke r2.<java.util.Properties: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.StdXMLParser;;processAttribute;;3
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>("CDATA");;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>(r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.StdXMLReader;;getEncoding;;1
*;; * ;; * ;;r1;;19
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("<?xml");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i9 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i13 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(c1, i17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i17, i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.StdXMLReader;;stream2reader;;1
*;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.lang.StringBuffer: void setLength(int)>(0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLWriter;;write;;1
*;; * ;; * ;;r1;;22
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getContent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getContent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getContent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getFullName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r18 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getNamespace()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r19 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r20 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getFullName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r23 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getNamespace()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getFullName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r34 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getNamespace()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r38 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.util.Iterator iterateAttributeNames()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getAttributeNamespace(java.lang.String)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r49 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.util.Iterator iterateAttributeNames()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r52 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getAttribute(java.lang.String,java.lang.String)>(r51, null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r59 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getContent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r60 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getContent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r62 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getContent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r65 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getFullName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z6 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: boolean hasChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r72 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.util.Iterator iterateChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r78 = interfaceinvoke r1.<net.n3.nanoxml.IXMLElement: java.lang.String getFullName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
net.n3.nanoxml.XMLWriter;;writeEncoded;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.AbstractApplication;;remove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setApplication(org.jhotdraw.app.Application)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.AbstractApplication;;add;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: org.jhotdraw.app.Application getApplication()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setApplication(org.jhotdraw.app.Application)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.AbstractApplication;;dispose;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void dispose()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.ResourceBundleUtil;;getImageIcon;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r19 = virtualinvoke r2.<java.lang.Class: java.net.URL getResource(java.lang.String)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.ResourceBundleUtil;;configureAction;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("Name", $r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("AcceleratorKey", $r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("MnemonicKey", $r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.Action: void putValue(java.lang.String,java.lang.Object)>("SmallIcon", $r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.ResourceBundleUtil;;configureButton;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.AbstractButton: void setText(java.lang.String)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.AbstractButton: void setIcon(javax.swing.Icon)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.AbstractButton: void setToolTipText(java.lang.String)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.ResourceBundleUtil;;configureToolBarButton;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.AbstractButton: void setText(java.lang.String)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.AbstractButton: void setIcon(javax.swing.Icon)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.AbstractButton: void setToolTipText(java.lang.String)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.ResourceBundleUtil;;configureMenu;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenuItem: void setText(java.lang.String)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenuItem: void setAccelerator(javax.swing.KeyStroke)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenuItem: void setMnemonic(char)>($c0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultAppletApplication;;show;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultMDIApplication;;initProjectActions;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void putAction(java.lang.String,javax.swing.Action)>("focus", $r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultMDIApplication;;show;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r1.<org.jhotdraw.app.Project: boolean isShowing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setShowing(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: java.io.File getFile()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.app.Project: int getMultipleOpenId()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r26);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r29 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r35 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultMDIApplication;;hide;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.app.Project: boolean isShowing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultMDIApplication;;wrapDesktopPane;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r17);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r30);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultMDIApplication;;addStandardActionsTo;;1
*;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r10 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r12 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r14 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r16 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r18 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultMDIApplication;;updateOpenRecentMenu;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<javax.swing.JMenu: int getItemCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<javax.swing.JMenu: int getItemCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<javax.swing.JMenu: javax.swing.JMenuItem getItem(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: void removeAll()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.Action)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultMDIApplication;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.DefaultMDIApplication: javax.swing.JFrame parentFrame>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.DefaultMDIApplication;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.DefaultMDIApplication: java.util.LinkedList toolBarActions>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.DefaultMDIApplication;;access$2;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.app.DefaultMDIApplication: void updateOpenRecentMenu(javax.swing.JMenu)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.MDIDesktopPane;;setArrangement;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<org.jhotdraw.app.action.Arrangeable$Arrangement: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.MDIDesktopPane;;setAllSize;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.OpenRecentAction;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.OpenRecentAction;;openFile;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setMultipleOpenId(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void execute(java.lang.Runnable)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.OpenRecentAction;;fileOpened;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.OpenRecentAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.OpenRecentAction: java.io.File file>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.ClearRecentFilesAction;;installApplicationListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Application: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ClearRecentFilesAction;;uninstallApplicationListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Application: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ClearRecentFilesAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.app.action.ClearRecentFilesAction: void updateEnabled()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.Actions;;configureJCheckBoxMenuItem;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JCheckBoxMenuItem: void setSelected(boolean)>($z0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JCheckBoxMenuItem: void putClientProperty(java.lang.Object,java.lang.Object)>("actionPropertyHandler", r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("selected");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.Action: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.Actions;;unconfigureJCheckBoxMenuItem;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<javax.swing.JCheckBoxMenuItem: java.lang.Object getClientProperty(java.lang.Object)>("actionPropertyHandler");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JCheckBoxMenuItem: void putClientProperty(java.lang.Object,java.lang.Object)>("actionPropertyHandler", null);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.Action: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ToggleToolBarAction;;putValue;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();;pattern detected param  r2 must not be null it define a local $r5which used in  InvokeExpr 
org.jhotdraw.app.action.RedoAction;;installProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.Action getAction(java.lang.String)>("redo");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.RedoAction;;uninstallProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.Action getAction(java.lang.String)>("redo");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.OpenAction;;openFile;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.app.Project: void setMultipleOpenId(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.app.Project: void execute(java.lang.Runnable)>($r11);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.OpenAction;;fileOpened;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.CloseAction;;doIt;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: org.jhotdraw.app.Application getApplication()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.UndoAction;;installProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.Action getAction(java.lang.String)>("undo");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.UndoAction;;uninstallProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.Action getAction(java.lang.String)>("undo");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.SaveAction;;saveToFile;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void execute(java.lang.Runnable)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.SaveAction;;fileSaved;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void markChangesAsSaved()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.app.Project: org.jhotdraw.app.Application getApplication()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setMultipleOpenId(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.SaveAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.SaveAction: java.awt.Component oldFocusOwner>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.ExitAction;;fileSaved;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ExitAction;;fileSavedAndReviewNext;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ExitAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.ExitAction: org.jhotdraw.app.Project unsavedProject>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.ExitAction;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.ExitAction: java.awt.Component oldFocusOwner>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.FocusAction;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.prefs.PreferencesUtil;;installFramePrefsHandler;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r18, 0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i17 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r22, 0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i20 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r26, $i19);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i24 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r30, $i23);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.awt.Window: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r2.<java.awt.Window: java.awt.Toolkit getToolkit()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r2.<java.awt.Window: java.awt.Dimension getPreferredSize()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r2.<java.awt.Window: java.awt.Dimension getMinimumSize()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Window: void setBounds(java.awt.Rectangle)>(r8);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Window: void addComponentListener(java.awt.event.ComponentListener)>($r31);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.prefs.PreferencesUtil;;installPalettePrefsHandler;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i19 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r17, $i18);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i22 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r21, $i21);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.awt.Window: java.awt.GraphicsConfiguration getGraphicsConfiguration()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r2.<java.awt.Window: java.awt.Toolkit getToolkit()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r2.<java.awt.Window: java.awt.Dimension getPreferredSize()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Window: void setBounds(java.awt.Rectangle)>(r7);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Window: void addComponentListener(java.awt.event.ComponentListener)>($r22);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.prefs.PreferencesUtil;;installInternalFramePrefsHandler;;3
*;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r3.<javax.swing.JDesktopPane: java.awt.Rectangle getBounds()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r3.<javax.swing.JDesktopPane: java.awt.Insets getInsets()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r17, 0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i17 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r21, 0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i20 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r25, $i19);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i24 = virtualinvoke r0.<java.util.prefs.Preferences: int getInt(java.lang.String,int)>($r29, $i23);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r2.<javax.swing.JInternalFrame: java.awt.Dimension getPreferredSize()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r2.<javax.swing.JInternalFrame: java.awt.Dimension getMinimumSize()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<javax.swing.JInternalFrame: void setBounds(java.awt.Rectangle)>(r8);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<javax.swing.JInternalFrame: void addComponentListener(java.awt.event.ComponentListener)>($r30);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ArrangeAction;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r2.<org.jhotdraw.app.action.Arrangeable$Arrangement: int ordinal()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.AbstractApplicationAction;;installApplicationListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Application: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.AbstractApplicationAction;;uninstallApplicationListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Application: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.AbstractProjectAction;;installProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.AbstractProjectAction;;uninstallProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.SaveBeforeAction;;saveChanges;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.app.Project: java.io.File getFile()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JFileChooser getSaveChooser()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.app.Project: java.io.File getFile()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.SaveBeforeAction;;saveToFile;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void execute(java.lang.Runnable)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.SaveBeforeAction;;fileSaved;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void markChangesAsSaved()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.SaveBeforeAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.SaveBeforeAction: java.awt.Component oldFocusOwner>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.OSXPaletteHandler;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Window: void addWindowFocusListener(java.awt.event.WindowFocusListener)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.OSXPaletteHandler;;remove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Window: void removeWindowFocusListener(java.awt.event.WindowFocusListener)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.OSXPaletteHandler;;addPalette;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Window: void addWindowFocusListener(java.awt.event.WindowFocusListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.OSXPaletteHandler;;removePalette;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Window: void removeWindowFocusListener(java.awt.event.WindowFocusListener)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.OSXPaletteHandler;;isFocused;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Window: boolean isFocused()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.Window: java.awt.Window[] getOwnedWindows()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.OSXPaletteHandler;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.OSXPaletteHandler: javax.swing.Timer timer>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.OSXPaletteHandler;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.OSXPaletteHandler: java.util.HashMap windows>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.OSXPaletteHandler;;access$2;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.OSXPaletteHandler: org.jhotdraw.app.DefaultOSXApplication app>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.OSXPaletteHandler;;access$3;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.app.OSXPaletteHandler: void showPalettes()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.OSXPaletteHandler;;access$4;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.app.OSXPaletteHandler: void maybeHidePalettes()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultSDIApplication;;show;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r1.<org.jhotdraw.app.Project: boolean isShowing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setShowing(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: java.io.File getFile()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<org.jhotdraw.app.Project: boolean hasUnsavedChanges()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.app.Project: int getMultipleOpenId()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r37);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultSDIApplication;;wrapProjectComponent;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultSDIApplication;;addStandardActionsTo;;1
*;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r11 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r13 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r15 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r17 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r19 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultSDIApplication;;hide;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.app.Project: boolean isShowing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setShowing(boolean)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultSDIApplication;;updateOpenRecentMenu;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<javax.swing.JMenu: int getItemCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<javax.swing.JMenu: int getItemCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<javax.swing.JMenu: javax.swing.JMenuItem getItem(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: void removeAll()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.Action)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.DefaultSDIApplication;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.app.DefaultSDIApplication: void updateOpenRecentMenu(javax.swing.JMenu)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.LoadAction;;doIt;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JFileChooser getOpenChooser()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.LoadAction;;openFile;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void execute(java.lang.Runnable)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<javax.swing.JFileChooser: java.io.File getSelectedFile()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.LoadAction;;fileOpened;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ClearAction;;doIt;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void clear()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ToggleVisibleAction;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Component: boolean isVisible()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void addComponentListener(java.awt.event.ComponentListener)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ToggleVisibleAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.ToggleVisibleAction: java.awt.Component component>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.LoadRecentAction;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.LoadRecentAction;;doIt;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setMultipleOpenId(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void execute(java.lang.Runnable)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.LoadRecentAction;;fileOpened;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setFile(java.io.File)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.LoadRecentAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.LoadRecentAction: java.io.File file>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.gui.JSheet;;fireOptionSelected;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<javax.swing.JOptionPane: java.lang.Object getValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<javax.swing.JOptionPane: java.lang.Object[] getOptions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<javax.swing.JOptionPane: java.lang.Object[] getOptions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<javax.swing.JOptionPane: java.lang.Object getInputValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;showSheet;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<javax.swing.JOptionPane: int getMessageType()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;showInputSheet;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r11 = virtualinvoke $r10.<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r0 must not be null it define a local $r10which used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;showOptionSheet;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r11 = virtualinvoke $r10.<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r0 must not be null it define a local $r10which used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;createSheet;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JOptionPane: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r12);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;showSaveSheet;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JFileChooser: void setDialogType(int)>(1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;showOpenSheet;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JFileChooser: void setDialogType(int)>(0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;showSheet;;1
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JFileChooser: void setApproveButtonText(java.lang.String)>(r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JFileChooser: void setDialogType(int)>(2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r0.<javax.swing.JFileChooser: javax.swing.plaf.FileChooserUI getUI()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r0.<javax.swing.JFileChooser: javax.accessibility.AccessibleContext getAccessibleContext()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JFileChooser: void addActionListener(java.awt.event.ActionListener)>(r8);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JFileChooser: void rescanCurrentDirectory()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.JSheet;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.gui.JSheet: java.awt.Point oldLocation>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.gui.JSheet;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<org.jhotdraw.gui.JSheet: java.awt.Point shiftBackLocation> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.gui.JSheet;;access$2;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<org.jhotdraw.gui.JSheet: java.awt.Point oldLocation> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.ExportAction;;exportToFile;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void execute(java.lang.Runnable)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ExportAction;;fileExported;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void setEnabled(boolean)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r16 = interfaceinvoke r1.<org.jhotdraw.app.Project: javax.swing.JComponent getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ExportAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.ExportAction: java.awt.Component oldFocusOwner>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.util.Methods;;invoke;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invoke;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invokeStatic;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invokeStatic;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invokeGetter;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invokeGetter;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invokeGetter;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invokeGetter;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invokeStaticGetter;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invoke;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invoke;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invoke;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invoke;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.Methods;;invoke;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.OSXTogglePaletteAction;;putValue;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();;pattern detected param  r2 must not be null it define a local $r4which used in  InvokeExpr 
org.jhotdraw.app.action.ProjectPropertyAction;;<init>;;1
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ProjectPropertyAction;;<init>;;1
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$c0 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r19 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ProjectPropertyAction;;installProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ProjectPropertyAction;;uninstallProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ProjectPropertyAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.ProjectPropertyAction: java.lang.String propertyName>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.ProjectPropertyAction;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.app.action.ProjectPropertyAction: void updateSelectedState()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<init>;;1
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$c0 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r20 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ToggleProjectPropertyAction;;installProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ToggleProjectPropertyAction;;uninstallProjectListeners;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.app.Project: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.app.action.ToggleProjectPropertyAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.app.action.ToggleProjectPropertyAction: java.lang.String propertyName>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.app.action.ToggleProjectPropertyAction;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.app.action.ToggleProjectPropertyAction: void updateSelectedState()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;setAttributes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;getAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<org.jhotdraw.draw.AttributeKey: java.lang.Object getDefaultValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;drawFigure;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d1, $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r27);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d4, $d6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r30);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;writeAttributes;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: java.lang.Object getPrototype()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>($r15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;readAttributes;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;applyAttributesTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>($r8, $r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;removeAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<org.jhotdraw.draw.AttributeKey: java.lang.Object getDefaultValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addNotify(org.jhotdraw.draw.Drawing)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;basicAdd;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addFigureListener(org.jhotdraw.draw.FigureListener)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;basicAddAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;remove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void removeNotify(org.jhotdraw.draw.Drawing)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;sendToBack;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void invalidate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;sendToFront;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void invalidate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d8 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d9 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.AbstractCompositeFigure;;undoableEditHappened;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;read;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("children");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;write;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("children");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractCompositeFigure;;restoreTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r3 = virtualinvoke r2.<java.util.LinkedList: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.draw.AttributeKey;;get;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.lang.Object getAttribute(org.jhotdraw.draw.AttributeKey)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributeKey;;set;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>(r0, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributeKey;;basicSet;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>(r0, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributeKey;;equals;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<org.jhotdraw.draw.AttributeKey: java.lang.String key>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.AbstractFigure;;setBounds;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r1.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Dimension2DDouble;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<org.jhotdraw.geom.Dimension2DDouble: double width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<org.jhotdraw.geom.Dimension2DDouble: double height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Dimension2DDouble;;setSize;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<org.jhotdraw.geom.Dimension2DDouble: double width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<org.jhotdraw.geom.Dimension2DDouble: double height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Dimension2DDouble;;equals;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<org.jhotdraw.geom.Dimension2DDouble: double width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<org.jhotdraw.geom.Dimension2DDouble: double height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.geom.Geom;;outcode;;2
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i11 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i16 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i13 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;outcode;;2
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d9 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d10 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d15 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d8 = r1.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r1.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;south;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;south;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;center;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;center;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;chop;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r0.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>($r8, 1.0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r10 = interfaceinvoke r0.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>($r9, 1.0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d18 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d19 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;west;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;west;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;east;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;east;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;north;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;north;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;length;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;cap;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d9 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;pointToAngle;;2
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;pointToAngle;;2
*;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d8 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d9 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d14 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;angleToPoint;;1
*;; * ;; * ;;r0;;8
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r0.<java.awt.Rectangle: int x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r0.<java.awt.Rectangle: int y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;angleToPoint;;1
*;; * ;; * ;;r0;;8
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d4 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d19 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d21 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d5 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d22 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d24 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;ovalAngleToPoint;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;ovalAngleToPoint;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Geom;;grow;;1
*;; * ;; * ;;r0;;8
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r0.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Rectangle2D$Double: double x> = $d3;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Rectangle2D$Double: double y> = $d5;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r0.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Rectangle2D$Double: double width> = $d8;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d9 = r0.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Rectangle2D$Double: double height> = $d11;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.AbstractConnector;;getConnectorTarget;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Figure getDecorator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Figure getDecorator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractConnector;;draw;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractConnector;;read;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: boolean getAttribute(java.lang.String,boolean)>("connectToDecorator", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: boolean getAttribute(java.lang.String,boolean)>("visible", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("owner");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractConnector;;write;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,boolean)>("connectToDecorator", 1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,boolean)>("visible", 1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("owner");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;addAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;basicAddAll;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addNotify(org.jhotdraw.draw.Drawing)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;remove;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void removeNotify(org.jhotdraw.draw.Drawing)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;fireFigureAdded;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;fireFigureRemoved;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;read;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("figures");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractDrawing;;write;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("figures");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SetBoundsEdit;;addEdit;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<org.jhotdraw.draw.SetBoundsEdit: org.jhotdraw.draw.AbstractFigure owner>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r5 = r2.<org.jhotdraw.draw.SetBoundsEdit: java.awt.geom.Point2D$Double newAnchor>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<org.jhotdraw.draw.SetBoundsEdit: java.awt.geom.Point2D$Double newLead>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<org.jhotdraw.draw.SetBoundsEdit: void die()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.draw.SetBoundsEdit;;replaceEdit;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<org.jhotdraw.draw.SetBoundsEdit: org.jhotdraw.draw.AbstractFigure owner>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r2.<org.jhotdraw.draw.SetBoundsEdit: java.awt.geom.Point2D$Double oldAnchor> = $r5;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r2.<org.jhotdraw.draw.SetBoundsEdit: java.awt.geom.Point2D$Double oldLead> = $r6;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.BoxHandleKit;;addLeadHandles;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BoxHandleKit;;addEdgeHandles;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TransformEdit;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r2.<java.awt.geom.AffineTransform: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TransformEdit;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r2.<java.awt.geom.AffineTransform: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TransformEdit;;addEdit;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<org.jhotdraw.draw.TransformEdit: java.util.Collection figures>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<org.jhotdraw.draw.TransformEdit: java.awt.geom.AffineTransform tx>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<org.jhotdraw.draw.TransformEdit: void die()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.draw.TransformEdit;;replaceEdit;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<org.jhotdraw.draw.TransformEdit: java.util.Collection figures>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<org.jhotdraw.draw.TransformEdit: java.awt.geom.AffineTransform tx>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<org.jhotdraw.draw.TransformEdit: void die()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.geom.Insets2DDouble;;equals;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<org.jhotdraw.geom.Insets2DDouble: double top>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<org.jhotdraw.geom.Insets2DDouble: double left>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d5 = r2.<org.jhotdraw.geom.Insets2DDouble: double bottom>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d7 = r2.<org.jhotdraw.geom.Insets2DDouble: double right>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.geom.Insets2DDouble;;write;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("top", $d0, 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("left", $d1, 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("bottom", $d2, 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("right", $d3, 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.Insets2DDouble;;read;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("top", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("left", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("bottom", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("right", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ChopBoxConnector;;findStart;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getStartConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: int getPointCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Liner getLiner()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getEndConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: java.awt.geom.Point2D$Double getEndPoint()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getEndConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: java.awt.geom.Point2D$Double getPoint(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ChopBoxConnector;;findEnd;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getEndConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: int getPointCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Liner getLiner()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getStartConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: java.awt.geom.Point2D$Double getStartPoint()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getStartConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: int getPointCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: java.awt.geom.Point2D$Double getPoint(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractHandle;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addFigureListener(org.jhotdraw.draw.FigureListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractHandle;;drawCircle;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fillOval(int,int,int,int)>($i0, $i1, $i2, $i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawOval(int,int,int,int)>($i4, $i5, $i6, $i7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractHandle;;drawRectangle;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractHandle;;drawDiamond;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractHandle;;isCombinableWith;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractLayouter;;getInsets;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.lang.Object getAttribute(org.jhotdraw.draw.AttributeKey)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractLineDecoration;;draw;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractLineDecoration;;getTransformedDecoratorPath;;2
*;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r3.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r3 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r3.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r3 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.AbstractTool;;keyPressed;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.event.KeyEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.awt.event.KeyEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.KeyEvent: int getModifiers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractTool;;mouseEntered;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractTool;;mousePressed;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AbstractTool;;fireAreaInvalidated;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r1.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.AbstractTool;;updateCursor;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Handle findHandle(java.awt.Point)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void setCursor(java.awt.Cursor)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Figure findFigure(java.awt.Point)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: java.awt.geom.Point2D$Double viewToDrawing(java.awt.Point)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void setCursor(java.awt.Cursor)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void setCursor(java.awt.Cursor)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ArrowTip;;read;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("angle", 0.3499999940395355);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("innerRadius", 12.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("outerRadius", 12.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: boolean getAttribute(java.lang.String,boolean)>("isFilled", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: boolean getAttribute(java.lang.String,boolean)>("isStroked", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: boolean getAttribute(java.lang.String,boolean)>("isSolid", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ArrowTip;;write;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("angle", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("innerRadius", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("outerRadius", $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,boolean)>("isFilled", $z0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,boolean)>("isStroked", $z1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,boolean)>("isSolid", $z2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;setAttributes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;getAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<org.jhotdraw.draw.AttributeKey: java.lang.Object getDefaultValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;drawFigure;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d1, $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r27);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d4, $d6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r30);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;writeAttributes;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: java.lang.Object getPrototype()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>($r15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;readAttributes;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;applyAttributesTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>($r8, $r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;write;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("w", $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("h", $d3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;read;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("x", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("y", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("w", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("h", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.AttributedFigure;;removeAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<org.jhotdraw.draw.AttributeKey: java.lang.Object getDefaultValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.DoubleStroke;;createStrokedShape;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = interfaceinvoke r1.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>(null, 0.1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.DoubleStroke;;traceStroke;;3
*;; * ;; * ;;r3;;12
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f2, $f3);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f4, $f5);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f6, $f7);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f15, $f16);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f20, $f21);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f22, $f23);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f24, $f25);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f33, $f34);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f35, $f36);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f37, $f38);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void closePath()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f45, $f46);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;39
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: boolean isClosed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object remove(int)>($i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r16 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r18 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(i7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object remove(int)>($i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: boolean isClosed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i13 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r25 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i15 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r28 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r31 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r34 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r37 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r40 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r43 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r46 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i17 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r50 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r53 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r56 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r59 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i19 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r63 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(i18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r66 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(i18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r69 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i21);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r72 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i22);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: boolean isClosed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i23 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r79 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i24);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i25 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r82 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i26);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r85 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r88 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;12
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f8, $f9);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f10, $f11);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f12, $f13);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f17, $f18);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f26, $f27);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f28, $f29);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f30, $f31);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f39, $f40);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f41, $f42);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f43, $f44);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void closePath()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f47, $f48);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.DoubleStroke;;computeThickLine;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[$i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r1[$i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r1[$i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.DoubleStroke;;computeThickLine;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d16;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d17;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d18;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $d19;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $d20;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $d21;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[6] = $d22;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[7] = $d23;;pattern detected param  r1 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.BezierPath;;set;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.BezierPath;;outlineContains;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.BezierPath;;transform;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.BezierPath;;setTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.BezierPath;;findSegment;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.BezierPath;;joinSegments;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierControlPointHandle;;draw;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierControlPointHandle;;fireAreaInvalidated;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierControlPointHandle;;isCombinableWith;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i0 = r2.<org.jhotdraw.draw.BezierControlPointHandle: int index>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i2 = r2.<org.jhotdraw.draw.BezierControlPointHandle: int controlPointIndex>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = virtualinvoke r2.<org.jhotdraw.draw.BezierControlPointHandle: org.jhotdraw.draw.BezierFigure getBezierFigure()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.draw.BezierFigure;;drawStroke;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierFigure;;drawFill;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierFigure;;contains;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d17 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d18 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierFigure;;basicSetBezierPath;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<org.jhotdraw.geom.BezierPath: boolean isClosed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierFigure;;basicSetAttribute;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();;pattern detected param  r2 must not be null it define a local $r5which used in  InvokeExpr 
org.jhotdraw.draw.BezierFigure;;basicSetPoint;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierFigure;;findNode;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierFigure;;findSegment;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierFigure;;handleMouseClick;;2
*;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r3.<org.jhotdraw.draw.DrawingView: int getHandleDetailLevel()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r3.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r2.<java.awt.event.MouseEvent: int getClickCount()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierFigure;;writePoints;;1
*;; * ;; * ;;r1;;13
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("points");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,boolean)>("closed", 1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("p");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,int)>("mask", $i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,boolean)>("colinear", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("c1x", $d6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("c1y", $d7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("c2x", $d12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("c2y", $d13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierFigure;;readPoints;;1
*;; * ;; * ;;r1;;18
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("points");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: boolean getAttribute(java.lang.String,boolean)>("closed", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount(java.lang.String)>("p");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String,int)>("p", i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getAttribute(java.lang.String,int)>("mask", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("x", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("y", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("x", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("c1x", $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("y", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("c1y", $d4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("x", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("c2x", $d6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d8 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("y", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("c2y", $d8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: boolean getAttribute(java.lang.String,boolean)>("colinear", 1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.GrowStroke;;createStrokedShape;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = interfaceinvoke r1.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>(null, 0.1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierNodeHandle;;fireAreaInvalidated;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<org.jhotdraw.geom.BezierPath$Node: double[] y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierNodeEdit;;addEdit;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<org.jhotdraw.draw.BezierNodeEdit: org.jhotdraw.draw.BezierFigure owner>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i0 = r2.<org.jhotdraw.draw.BezierNodeEdit: int index>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r5 = r2.<org.jhotdraw.draw.BezierNodeEdit: org.jhotdraw.geom.BezierPath$Node newValue>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<org.jhotdraw.draw.BezierNodeEdit: void die()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.draw.BezierNodeEdit;;replaceEdit;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<org.jhotdraw.draw.BezierNodeEdit: org.jhotdraw.draw.BezierFigure owner>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i0 = r2.<org.jhotdraw.draw.BezierNodeEdit: int index>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r2.<org.jhotdraw.draw.BezierNodeEdit: org.jhotdraw.geom.BezierPath$Node oldValue> = $r5;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.BezierScaleHandle;;trackStart;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierScaleHandle;;trackStep;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r2.<java.awt.Point: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierLabelLocator;;getRelativePoint;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPointOnPath(float,double)>($f0, 3.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPointOnPath(float,double)>($f2, 3.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierLabelLocator;;getRelativeLabelPoint;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPointOnPath(float,double)>($f0, 3.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPointOnPath(float,double)>($f2, 3.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = interfaceinvoke r2.<org.jhotdraw.draw.Figure: org.jhotdraw.geom.Dimension2DDouble getPreferredSize()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierLabelLocator;;read;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("relativePosition", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("angle", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getAttribute(java.lang.String,int)>("distance", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierLabelLocator;;write;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("relativePosition", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("angle", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("distance", $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierPointLocator;;locate;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i1 = virtualinvoke r2.<org.jhotdraw.draw.BezierFigure: int getNodeCount()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = virtualinvoke r2.<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPoint(int,int)>($i2, $i3);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.draw.BezierPointLocator;;write;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,int,int)>("index", $i0, 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,int,int)>("coord", $i1, 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierPointLocator;;read;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getAttribute(java.lang.String,int)>("index", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getAttribute(java.lang.String,int)>("coord", 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RestoreDataEdit;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.lang.Object getRestoreData()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierTool;;mousePressed;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierTool;;addPointToFigure;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.geom.Point2D$Double: boolean equals(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BezierTool;;mouseClicked;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BezierTool;;mouseDragged;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.Bezier;;fitCurve;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.awt.Polygon: int npoints>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r0.<java.awt.Polygon: int[] xpoints>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r0.<java.awt.Polygon: int[] ypoints>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;fitCurve;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;fitBezierCurve;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: java.awt.geom.Point2D$Double[] toPolygonArray()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: boolean isClosed()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.Bezier;;fitCubic;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r10 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r11 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r13 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r14 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r3;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, $f4, $f5);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>($f6, $f7, $f8, $f9, $f10, $f11);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>($f12, $f13, $f14, $f15, $f16, $f17);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.Bezier;;fitCubic;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r10 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r11 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r13 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r14 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r3;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<org.jhotdraw.geom.BezierPath: void curveTo(double,double,double,double,double,double)>($d5, $d6, $d7, $d8, $d9, $d10);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<org.jhotdraw.geom.BezierPath: void curveTo(double,double,double,double,double,double)>($d11, $d12, $d13, $d14, $d15, $d16);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<org.jhotdraw.geom.BezierPath: void curveTo(double,double,double,double,double,double)>($d18, $d19, $d20, $d21, $d22, $d23);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.Bezier;;generateBezier;;4
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d19 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d21 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d23 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d25 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = virtualinvoke r2.<java.awt.geom.Point2D$Double: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r3.<java.awt.geom.Point2D$Double: java.lang.Object clone()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r0;;11
*;;*;;*;;*;;*;;ArrayRef for param;;$r40 = r0[$i11];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r41 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r43 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r45 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r47 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r69 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r70 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r71 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r72 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r81 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r82 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;reparameterize;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[$i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;newtonRaphsonRootFind;;2
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r12 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r13 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r14 = r0[$i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r15 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d21 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d26 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d38 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d44 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;bezierII;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;computeLeftTangent;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;computeRightTangent;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;computeCenterTangent;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r10 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r11 = r0[$i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;chordLengthParameterize;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r0[$i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;computeMaxError;;3
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r2[$i6];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r3[0] = $i5;;pattern detected param  r3 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r3[0] = i2;;pattern detected param  r3 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r9 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
org.jhotdraw.geom.Bezier;;v2AddII;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2ScaleIII;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2SubII;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2DistanceBetween2Points;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2Scale;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Point2D$Double: double x> = $d4;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Point2D$Double: double y> = $d7;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2SquaredLength;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2Add;;3
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.geom.Point2D$Double: double x> = $d2;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.geom.Point2D$Double: double y> = $d5;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2Negate;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Point2D$Double: double x> = $d1;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Point2D$Double: double y> = $d3;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2Dot;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.geom.Bezier;;v2Normalize;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r0.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Point2D$Double: double x> = $d2;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r0.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.geom.Point2D$Double: double y> = $d4;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.BidirectionalConnectionTool;;mouseDragged;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BidirectionalConnectionTool;;mouseReleased;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BidirectionalConnectionTool;;findConnection;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r2.<org.jhotdraw.draw.Drawing: java.util.List getFiguresFrontToBack()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BidirectionalConnectionTool;;trackConnectors;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BidirectionalConnectionTool;;findConnector;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r2.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>(r1, r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BidirectionalConnectionTool;;findConnectableFigure;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r2.<org.jhotdraw.draw.Drawing: org.jhotdraw.draw.Figure findFigureExcept(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Figure)>(r1, $r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.BidirectionalConnectionTool;;figureAreaInvalidated;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RectangleFigure;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RectangleFigure;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RectangleFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.RectangleFigure;;basicTransform;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RectangleFigure;;restoreTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d0 = r2.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d2 = r2.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.ChangeConnectionHandle;;findConnector;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r2.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>(r1, r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ChangeConnectionHandle;;findConnectableFigure;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r2.<org.jhotdraw.draw.Drawing: java.util.List getFiguresFrontToBack()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ChopDiamondConnector;;chop;;1
*;; * ;; * ;;r2;;10
*;;*;;*;;*;;*;;FieldRef for param;;$d63 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d65 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d88 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d89 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d96 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d97 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d104 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d105 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d112 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d113 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.DiamondFigure;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DiamondFigure;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DiamondFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.DiamondFigure;;basicTransform;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DiamondFigure;;restoreTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d0 = r2.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d2 = r2.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.RoundRectangleFigure;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RoundRectangleFigure;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RoundRectangleFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.RoundRectangleFigure;;basicTransform;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RoundRectangleFigure;;read;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("arcWidth", 20.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("arcHeight", 20.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RoundRectangleFigure;;write;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("arcWidth", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("arcHeight", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RoundRectangleFigure;;restoreTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d0 = r2.<java.awt.geom.RoundRectangle2D$Double: double x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.RoundRectangle2D$Double: double y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d2 = r2.<java.awt.geom.RoundRectangle2D$Double: double width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<java.awt.geom.RoundRectangle2D$Double: double height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.RoundRectangleFigure;;access$2;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.draw.RoundRectangleFigure: java.awt.geom.RoundRectangle2D$Double roundrect>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.TriangleFigure;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TriangleFigure;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TriangleFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.TriangleFigure;;basicTransform;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TriangleFigure;;restoreTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d0 = r2.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d2 = r2.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.CloseHandle;;draw;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i0, $i1, $i4, $i7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i10, $i11, $i12, $i15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RelativeLocator;;locate;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Figure getDecorator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RelativeLocator;;write;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("relativeX", $d0, 0.5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("relativeY", $d1, 0.5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RelativeLocator;;read;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("relativeX", 0.5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("relativeY", 0.5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.CompositeTransformEdit;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r2.<java.awt.geom.AffineTransform: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.CompositeTransformEdit;;addEdit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.undo.UndoableEdit: void die()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionHandle;;findConnectableFigure;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r2.<org.jhotdraw.draw.Drawing: java.util.List getFiguresFrontToBack()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;mouseDragged;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;mouseReleased;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;findConnection;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r2.<org.jhotdraw.draw.Drawing: java.util.List getFiguresFrontToBack()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;trackConnectors;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;draw;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Graphics create()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;findConnector;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r2.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>(r1, r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;findConnectableFigure;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r2.<org.jhotdraw.draw.Drawing: org.jhotdraw.draw.Figure findFigureExcept(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Figure)>(r1, $r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ConnectionTool;;figureAreaInvalidated;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.CreationTool;;mousePressed;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.CreationTool;;mouseDragged;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.CreationTool;;mouseReleased;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;basicAdd;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addFigureListener(org.jhotdraw.draw.FigureListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;basicRemove;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void removeFigureListener(org.jhotdraw.draw.FigureListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;draw;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Rectangle getClipBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;draw;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;sort;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r10 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;figureAreaInvalidated;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;figureChanged;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;figureRequestRemove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.Figure getFigure()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;findFigureExcept;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;findFiguresWithin;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.geom.Rectangle2D$Double: boolean contains(java.awt.geom.Rectangle2D)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;bringToFront;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;sendToBack;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawing;;undoableEditHappened;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.FigureLayerComparator;;compare;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: int getLayer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r2.<org.jhotdraw.draw.Figure: int getLayer()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingEditor;;areaInvalidated;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<org.jhotdraw.draw.ToolEvent: java.awt.Rectangle getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<org.jhotdraw.draw.ToolEvent: org.jhotdraw.draw.DrawingView getView()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingEditor;;toolStarted;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.ToolEvent: org.jhotdraw.draw.DrawingView getView()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingEditor;;applyDefaultAttributesTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>($r8, $r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingEditor;;setDefaultAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<org.jhotdraw.draw.AttributeKey: java.lang.String getKey()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingEditor;;remove;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: java.awt.Container getContainer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void removeMouseListener(java.awt.event.MouseListener)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void removeKeyListener(java.awt.event.KeyListener)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void removeNotify(org.jhotdraw.draw.DrawingEditor)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingEditor;;add;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addNotify(org.jhotdraw.draw.DrawingEditor)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: java.awt.Container getContainer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addMouseListener(java.awt.event.MouseListener)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addKeyListener(java.awt.event.KeyListener)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingEditor;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.draw.DefaultDrawingEditor: void setFocusedView(org.jhotdraw.draw.DrawingView)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;paintComponent;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r3, $r4);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r5, $r6);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r7, $r8);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r10, $r11);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r12, $r13);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r14, $r15);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r16, $r17);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r2.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r19, $r20);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;drawBackground;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(i0, i1, $i4, $i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i2, i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i0, i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;drawDrawing;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Graphics create()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;areaInvalidated;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.DrawingEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;areaInvalidated;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.HandleEvent: java.awt.Rectangle getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;figureAdded;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.DrawingEvent: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<org.jhotdraw.draw.DrawingEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;figureRemoved;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.DrawingEvent: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<org.jhotdraw.draw.DrawingEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<org.jhotdraw.draw.DrawingEvent: org.jhotdraw.draw.Figure getFigure()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;getCompatibleHandles;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.draw.Handle: org.jhotdraw.draw.Figure getOwner()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;handleRequestRemove;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<org.jhotdraw.draw.HandleEvent: org.jhotdraw.draw.Handle getHandle()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<org.jhotdraw.draw.HandleEvent: org.jhotdraw.draw.Handle getHandle()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<org.jhotdraw.draw.HandleEvent: java.awt.Rectangle getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DefaultDrawingView;;drawingToView;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.DefaultDrawingView;;viewToDrawing;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.DefaultDrawingView;;drawingToView;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d10 = r1.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r1.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.DefaultDrawingView;;viewToDrawing;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.DefaultDrawingView;;handleRequestSecondaryHandles;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<org.jhotdraw.draw.HandleEvent: org.jhotdraw.draw.Handle getHandle()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.GridConstrainer;;constrainPoint;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.geom.Point2D$Double: double x> = $d5;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.geom.Point2D$Double: double y> = $d11;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.GridConstrainer;;draw;;2
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Rectangle getClipBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i5, $i6, $i7, $i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i16, $i17, $i20, $i21);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r2.<org.jhotdraw.draw.DrawingView: java.awt.geom.AffineTransform getDrawingToViewTransform()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = interfaceinvoke r2.<org.jhotdraw.draw.DrawingView: java.awt.geom.Rectangle2D$Double viewToDrawing(java.awt.Rectangle)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = interfaceinvoke r2.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d19 = interfaceinvoke r2.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;save;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE ");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(">\n");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;writeStorable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMStorable: void write(org.jhotdraw.xml.DOMOutput)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.gui.datatransfer.CompositeTransferable;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.awt.datatransfer.Transferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DelegationSelectionTool;;mousePressed;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DelegationSelectionTool;;mouseReleased;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DelegationSelectionTool;;mouseClicked;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DelegationSelectionTool;;handlePopupMenu;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DelegationSelectionTool;;showPopupMenu;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r2.<java.awt.Point: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.DelegationSelectionTool;;handleDoubleClick;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiersEx()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DelegationSelectionTool;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<org.jhotdraw.draw.DelegationSelectionTool: javax.swing.Timer popupTimer> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.SelectionTool;;mousePressed;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isShiftDown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SelectionTool;;areaInvalidated;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.ToolEvent: java.awt.Rectangle getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DragTracker;;mouseMoved;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DragTracker;;mousePressed;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isShiftDown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DragTracker;;mouseDragged;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.DragTracker;;mouseReleased;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.ElbowLiner;;lineout;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r2 = virtualinvoke $r9.<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.geom.BezierPath getBezierPath()>();;pattern detected param  r1 must not be null it define a local $r9which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getStartConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getEndConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;canConnect;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: boolean canConnect()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = interfaceinvoke r2.<org.jhotdraw.draw.Figure: boolean canConnect()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;connectsSame;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getStartConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getEndConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;remap;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;canConnect;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: boolean canConnect()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;handleMouseClick;;2
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r3.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r2.<java.awt.event.MouseEvent: int getClickCount()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;readPoints;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("startConnector");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("endConnector");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;readLiner;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount(java.lang.String)>("liner");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("liner");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;writeLiner;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("liner");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineConnectionFigure;;writePoints;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("startConnector");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("endConnector");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LineFigure;;handleMouseClick;;2
*;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r3.<org.jhotdraw.draw.DrawingView: int getHandleDetailLevel()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r3.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r2.<java.awt.event.MouseEvent: int getClickCount()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.EllipseFigure;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.EllipseFigure;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.EllipseFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.EllipseFigure;;basicTransform;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.EllipseFigure;;restoreTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d0 = r2.<java.awt.geom.Ellipse2D$Double: double x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.Ellipse2D$Double: double y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d2 = r2.<java.awt.geom.Ellipse2D$Double: double width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<java.awt.geom.Ellipse2D$Double: double height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.FloatingTextArea;;createOverlay;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: java.awt.Container getContainer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.FloatingTextField;;createOverlay;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: java.awt.Container getContainer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r2.<org.jhotdraw.draw.TextHolder: java.awt.Font getFont()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r2.<org.jhotdraw.draw.TextHolder: java.awt.Color getTextColor()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r2.<org.jhotdraw.draw.TextHolder: java.awt.Color getFillColor()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.FloatingTextField;;setBounds;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.FontSizeHandle;;trackStep;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.FontSizeLocator;;locate;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Point2D$Double getStartPoint()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r9 = interfaceinvoke $r8.<org.jhotdraw.draw.TextHolder: org.jhotdraw.geom.Insets2DDouble getInsets()>();;pattern detected param  r1 must not be null it define a local $r8which used in  InvokeExpr 
org.jhotdraw.draw.GraphicalCompositeFigure;;basicSetBounds;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.GraphicalCompositeFigure;;getAttribute;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<org.jhotdraw.draw.AttributeKey: java.lang.Object getDefaultValue()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.GraphicalCompositeFigure;;applyAttributesTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>($r8, $r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.GraphicalCompositeFigure;;writeAttributes;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: java.lang.Object getPrototype()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>($r15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r16);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.GraphicalCompositeFigure;;readAttributes;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("a");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.MoveHandle;;addMoveHandles;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.MoveHandle;;trackEnd;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r2.<java.awt.Point: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.HandleMulticaster;;trackEnd;;1
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = interfaceinvoke r3.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.HandleMulticaster;;trackStart;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r2.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.HandleTracker;;mouseClicked;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getClickCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiersEx()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.HandleTracker;;mouseDragged;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiersEx()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.HandleTracker;;mouseMoved;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.HandleTracker;;mousePressed;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiersEx()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.HandleTracker;;mouseReleased;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiersEx()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.HorizontalLayouter;;calculateLayout;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = interfaceinvoke r1.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.HorizontalLayouter;;layout;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LabeledLineConnectionFigure;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addNotify(org.jhotdraw.draw.Drawing)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LabeledLineConnectionFigure;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addNotify(org.jhotdraw.draw.Drawing)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LabeledLineConnectionFigure;;basicAdd;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addFigureListener(org.jhotdraw.draw.FigureListener)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LabeledLineConnectionFigure;;remove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void removeNotify(org.jhotdraw.draw.Drawing)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LabelFigure;;figureRemoved;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.Figure getFigure()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LabelFigure;;remap;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextFigure;;basicTransform;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r2, $r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextFigure;;basicSetBounds;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.TextFigure;;read;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("x", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("y", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextFigure;;write;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextFigure;;restoreTo;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d0 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.TextTool;;mousePressed;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextTool;;beginEdit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<org.jhotdraw.draw.TextHolder: java.lang.String getText()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextTool;;getFieldBounds;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<org.jhotdraw.draw.TextHolder: java.awt.geom.Rectangle2D$Double getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.VerticalLayouter;;calculateLayout;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = interfaceinvoke r1.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.VerticalLayouter;;layout;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r1.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LocatorConnector;;read;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("locator");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LocatorConnector;;write;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("locator");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LocatorLayouter;;calculateLayout;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LocatorLayouter;;layout;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.LocatorLayouter;;getLocator;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.lang.Object getAttribute(org.jhotdraw.draw.AttributeKey)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.NullHandle;;addLeadHandles;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.NullHandle;;draw;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i1, $i3, $i5, $i7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i8, $i9, $i11, $i13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;basicAdd;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addFigureListener(org.jhotdraw.draw.FigureListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;basicRemove;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void removeFigureListener(org.jhotdraw.draw.FigureListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;draw;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Rectangle getClipBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;sort;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.Collection: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;draw;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;figureAreaInvalidated;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;figureChanged;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.Figure getFigure()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.Figure getFigure()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.Figure getFigure()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;figureRequestRemove;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.Figure getFigure()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;findFigureExcept;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(r12);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;findFiguresWithin;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.geom.Rectangle2D$Double: boolean contains(java.awt.geom.Rectangle2D)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;bringToFront;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;sendToBack;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getDrawBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.QuadTreeDrawing;;undoableEditHappened;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<javax.swing.event.UndoableEditEvent: javax.swing.undo.UndoableEdit getEdit()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.QuadTree2DDouble;;add;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r2.<java.awt.geom.Rectangle2D$Double: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r2.<java.awt.geom.Rectangle2D$Double: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.QuadTree2DDouble;;findIntersects;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.QuadTree2DDouble;;findInside;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.geom.Rectangle2D$Double: boolean contains(java.awt.geom.Rectangle2D)>($r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.geom.QuadTree2DDouble;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<org.jhotdraw.geom.QuadTree2DDouble: int maxCapacity>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.geom.QuadTree2DDouble;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<org.jhotdraw.geom.QuadTree2DDouble: int minSize>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.RelativeDecoratorLocator;;locate;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Figure getDecorator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: org.jhotdraw.draw.Figure getDecorator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.RotateHandle;;trackStart;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.draw.RotateHandle;;trackStep;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r2.<java.awt.Point: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.RoundRectRadiusHandle;;trackStep;;2
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r2.<java.awt.Point: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.SelectAreaTracker;;mouseReleased;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.MouseEvent: boolean isShiftDown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SelectAreaTracker;;mouseDragged;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SelectAreaTracker;;mouseMoved;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SelectAreaTracker;;draw;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void drawRect(int,int,int,int)>($i0, $i1, $i3, $i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SlantedLiner;;lineout;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r2 = virtualinvoke $r10.<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.geom.BezierPath getBezierPath()>();;pattern detected param  r1 must not be null it define a local $r10which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getStartConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: org.jhotdraw.draw.Connector getEndConnector()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r12 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: java.awt.geom.Point2D$Double getStartPoint()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r13 = interfaceinvoke r1.<org.jhotdraw.draw.ConnectionFigure: java.awt.geom.Point2D$Double getEndPoint()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SlantedLiner;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("slant", 20.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.SlantedLiner;;write;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("slant", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.StickyChopConnector;;draw;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.StickyChopConnector;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.StickyChopConnector;;chop;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.draw.Figure: java.awt.geom.Rectangle2D$Double getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.StickyChopConnector;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("angle", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.StickyChopConnector;;write;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,float)>("angle", $f0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d7 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d6 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r2.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.draw.TextAreaFigure;;basicTransform;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;drawText;;1
*;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$r17 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r19 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r19);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r30);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r31);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r32);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;drawParagraph;;2
*;; * ;; * ;;r3;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$f13 = r3[$i19];;pattern detected param  r3 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f14 = r3[i4];;pattern detected param  r3 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f5 = r3[i4];;pattern detected param  r3 must not be null  because used in  ArrayRef 
*;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = interfaceinvoke r2.<java.text.AttributedCharacterIterator: char first()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = interfaceinvoke r2.<java.text.AttributedCharacterIterator: int getIndex()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = interfaceinvoke r2.<java.text.AttributedCharacterIterator: char next()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = interfaceinvoke r2.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = interfaceinvoke r2.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i23 = interfaceinvoke r2.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;readBounds;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("x", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("y", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("w", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("h", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;writeBounds;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("w", $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("h", $d3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaFigure;;restoreTo;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d0 = r2.<java.awt.geom.Rectangle2D$Double: double x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.Rectangle2D$Double: double y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d2 = r2.<java.awt.geom.Rectangle2D$Double: double width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<java.awt.geom.Rectangle2D$Double: double height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
org.jhotdraw.draw.TextAreaTool;;mousePressed;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaTool;;beginEdit;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r1.<org.jhotdraw.draw.TextHolder: java.lang.String getText()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.TextAreaTool;;getFieldBounds;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.draw.TextHolder: java.awt.geom.Rectangle2D$Double getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.draw.TextHolder: org.jhotdraw.geom.Insets2DDouble getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.AbstractSelectedAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.draw.action.AbstractSelectedAction: java.beans.PropertyChangeListener propertyChangeHandler>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.action.AbstractViewAction;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingEditor: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.AbstractViewAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.draw.action.AbstractViewAction: java.beans.PropertyChangeListener propertyChangeHandler>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.action.ColorAttributeIcon;;paintIcon;;1
*;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r4);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void translate(int,int)>(i0, i1);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r8);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void translate(int,int)>($i2, $i3);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
org.jhotdraw.draw.action.ColorChooserAction;;actionPerformed;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.awt.event.ActionEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ColorIcon;;paintIcon;;1
*;; * ;; * ;;r2;;9
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i0, $i4, $i7, i1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(i0, i1, $i9, $i11);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i0, i1, $i14, i1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i17, i1, $i20, $i23);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i26, $i29, i0, $i32);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i0, $i35, i0, i1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.Colors;;shadow;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.awt.Color: int getRed()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r0.<java.awt.Color: int getGreen()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r0.<java.awt.Color: int getBlue()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r0.<java.awt.Color: int getAlpha()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.DefaultAttributeAction;;<init>;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingEditor: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.DefaultAttributeAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.draw.action.DefaultAttributeAction: org.jhotdraw.draw.AttributeKey[] keys>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.action.GenericListener;;create;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.GenericListener;;create;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.GenericListener;;getListenerMethod;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.GenericListener;;getTargetMethod;;3
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r11 = r2[i1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
org.jhotdraw.draw.action.GenericListener;;raiseToPublicClass;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.lang.reflect.Method: int getModifiers()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.GenericListener;;raiseToPublicClass;;2
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r3, $r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.GroupAction;;ungroupFigures;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(java.util.Collection)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicRemoveAllChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.GroupAction;;groupFigures;;2
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(org.jhotdraw.draw.Figure)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void willChange()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicAdd(org.jhotdraw.draw.Figure)>(r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void changed()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ImageBevelBorder;;<init>;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ImageBevelBorder;;paintBorder;;1
*;; * ;; * ;;r2;;16
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r12, i0, i1, r1);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r13, i0, i1, $i14, $i15, 0, 0, i5, i4, r1);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r14, $i17, i1, $i18, $i19, $i20, 0, i8, i4, r1);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r15, i0, $i22, $i23, $i24, 0, $i25, i5, i9, r1);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r16, $i27, $i29, $i30, $i31, $i32, $i33, i8, i9, r1);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r4);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i40, i1, $i42, i4);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r25);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i52, $i54, $i56, i6);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r30);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(i0, $i63, i5, $i65);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r35);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i76, $i77, i7, $i79);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r36);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r41);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i92, $i93, $i95, $i97);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
org.jhotdraw.draw.action.JPopupButton;;setAction;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.Action: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.JPopupButton;;updateFont;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<javax.swing.MenuElement: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<javax.swing.MenuElement: javax.swing.MenuElement[] getSubElements()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.JPopupButton;;add;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JMenuItem: void setFont(java.awt.Font)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.JPopupButton;;performAction;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$l6 = virtualinvoke r1.<java.awt.event.MouseEvent: long getWhen()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<java.awt.event.MouseEvent: int getModifiers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.JPopupButton;;showPopup;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.JPopupButton;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.draw.action.JPopupButton: void showPopup(java.awt.event.MouseEvent)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.JPopupButton;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.draw.action.JPopupButton: void performAction(java.awt.event.MouseEvent)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.VerticalGridLayout;;preferredLayoutSize;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.VerticalGridLayout;;minimumLayoutSize;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.VerticalGridLayout;;layoutContainer;;1
*;; * ;; * ;;r1;;9
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i14 = virtualinvoke r1.<java.awt.Container: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = virtualinvoke r1.<java.awt.Container: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i39 = virtualinvoke r1.<java.awt.Container: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i46);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.PaletteMenuItemUI;;getPreferredMenuItemSize;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r5 = virtualinvoke r4.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();;pattern detected param  r1 must not be null it define a local r4which used in  InvokeExpr 
org.jhotdraw.draw.action.PaletteMenuItemUI;;paint;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r4 = virtualinvoke r3.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
org.jhotdraw.draw.action.LineDecorationIcon;;paintIcon;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r4, $r5);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
org.jhotdraw.draw.action.MoveToBackAction;;sendToBack;;2
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.MoveToBackAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.draw.action.MoveToBackAction: org.jhotdraw.util.ResourceBundleUtil labels>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.action.MoveToFrontAction;;bringToFront;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.MoveToFrontAction;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.draw.action.MoveToFrontAction: org.jhotdraw.util.ResourceBundleUtil labels>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.action.StrokeIcon;;paintIcon;;1
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r4);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r5);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i0, $i4, $i6, $i9);;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
org.jhotdraw.draw.action.SwingWorker;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.draw.action.SwingWorker: org.jhotdraw.draw.action.SwingWorker$ThreadVar threadVar>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.draw.action.SwingWorker;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<org.jhotdraw.draw.action.SwingWorker: void setValue(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addSelectionToolTo;;2
*;; * ;; * ;;r0;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r0.<javax.swing.JToolBar: java.lang.Object getClientProperty(java.lang.Object)>("toolButtonGroup");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r0.<javax.swing.JToolBar: java.lang.Object getClientProperty(java.lang.Object)>("toolButtonGroup");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: void putClientProperty(java.lang.Object,java.lang.Object)>("toolButtonGroup", r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r0.<javax.swing.JToolBar: java.lang.Object getClientProperty(java.lang.Object)>("toolHandler");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r16 = virtualinvoke r0.<javax.swing.JToolBar: java.lang.Object getClientProperty(java.lang.Object)>("toolHandler");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: void putClientProperty(java.lang.Object,java.lang.Object)>("toolHandler", r18);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r7);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingEditor: void setTool(org.jhotdraw.draw.Tool)>(r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addToolTo;;3
*;; * ;; * ;;r4;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r4.<org.jhotdraw.util.ResourceBundleUtil: void configureToolBarButton(javax.swing.AbstractButton,java.lang.String)>(r7, r3);;pattern detected param  r4 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r0.<javax.swing.JToolBar: java.lang.Object getClientProperty(java.lang.Object)>("toolButtonGroup");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r0.<javax.swing.JToolBar: java.lang.Object getClientProperty(java.lang.Object)>("toolHandler");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r7);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.Tool: void addToolListener(org.jhotdraw.draw.ToolListener)>(r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addZoomButtonsTo;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>($r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;createZoomButton;;1
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r0.<org.jhotdraw.draw.DrawingEditor: java.util.Collection getDrawingViews()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r0.<org.jhotdraw.draw.DrawingEditor: java.util.Collection getDrawingViews()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<org.jhotdraw.draw.DrawingEditor: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r14);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;createZoomButton;;1
*;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = interfaceinvoke r0.<org.jhotdraw.draw.DrawingView: double getScaleFactor()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<org.jhotdraw.draw.DrawingView: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r9);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addAttributesButtonsTo;;1
*;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addColorButtonTo;;4
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r5;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r5.<org.jhotdraw.util.ResourceBundleUtil: void configureToolBarButton(javax.swing.AbstractButton,java.lang.String)>(r7, r4);;pattern detected param  r5 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r27 = virtualinvoke r5.<org.jhotdraw.util.ResourceBundleUtil: javax.swing.ImageIcon getImageIcon(java.lang.String,java.lang.Class)>(r4, class "org/jhotdraw/draw/action/ToolBarButtonFactory");;pattern detected param  r5 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r7);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingEditor: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r29);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addStrokeWidthButtonTo;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addStrokeDecorationButtonTo;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addStrokeDashesButtonTo;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addStrokeTypeButtonTo;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addStrokePlacementButtonTo;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addFontButtonsTo;;1
*;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r72 = virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r73 = virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r74 = virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r75 = virtualinvoke r0.<javax.swing.JToolBar: java.awt.Component add(java.awt.Component)>(r6);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;addAlignmentButtonsTo;;1
*;; * ;; * ;;r0;;14
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r7);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r9);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r11);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r13);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r16 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r15);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r18 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r17);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r20 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r19);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r21);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r24 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r23);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r26 = virtualinvoke r0.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r25);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.ToolBarButtonFactory;;createToggleGridButton;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<org.jhotdraw.draw.DrawingView: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.UngroupAction;;ungroupFigures;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(java.util.Collection)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicRemoveAllChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.draw.action.UngroupAction;;groupFigures;;2
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(org.jhotdraw.draw.Figure)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void willChange()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicAdd(org.jhotdraw.draw.Figure)>(r6);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void changed()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.io.ExtensionFileFilter;;<init>;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.io.ExtensionFileFilter;;<init>;;1
*;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r2[i0];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r9 = r2[0];;pattern detected param  r2 must not be null  because used in  ArrayRef 
org.jhotdraw.io.ExtensionFileFilter;;accept;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.io.ExtensionFileFilter;;makeAcceptable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.draw.DrawingPanel;;setDrawing;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Drawing: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.draw.DrawingPanel;;addDefaultCreationButtonsTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.undo.UndoRedoManager;;addEdit;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<javax.swing.undo.UndoableEdit: void die()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<javax.swing.undo.UndoableEdit: boolean isSignificant()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.DefaultDOMFactory;;addStorable;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.DefaultDOMFactory;;getName;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.DefaultDOMFactory;;getEnumName;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.DefaultDOMFactory;;getEnumValue;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.Enum: java.lang.String toString()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.draw.DrawApplicationModel;;initProject;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.app.Application: boolean isSharingToolsAmongProjects()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r3.<org.jhotdraw.samples.draw.DrawProject: void setEditor(org.jhotdraw.draw.DrawingEditor)>($r4);;pattern detected param  r2 must not be null it define a local $r3which used in  InvokeExpr 
org.jhotdraw.samples.draw.DrawApplicationModel;;addDefaultCreationButtonsTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.draw.DrawProject;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.draw.DrawProject: org.jhotdraw.undo.UndoRedoManager undo>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.draw.DrawProject;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.draw.DrawProject: org.jhotdraw.draw.DefaultDrawingView view>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.net.NetApplicationModel;;initProject;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.app.Application: boolean isSharingToolsAmongProjects()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r3.<org.jhotdraw.samples.net.NetProject: void setDrawingEditor(org.jhotdraw.draw.DrawingEditor)>($r4);;pattern detected param  r2 must not be null it define a local $r3which used in  InvokeExpr 
org.jhotdraw.samples.net.NetApplicationModel;;addCreationButtonsTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.net.NetPanel;;setDrawing;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Drawing: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.net.NetPanel;;addCreationButtonsTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.net.NetProject;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.net.NetProject: org.jhotdraw.undo.UndoRedoManager undo>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.net.NetProject;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.net.NetProject: java.util.prefs.Preferences prefs>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.net.NetProject;;access$2;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<org.jhotdraw.samples.net.NetProject: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.net.NetProject;;access$3;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.net.NetProject: org.jhotdraw.draw.DefaultDrawingView view>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.net.figures.NodeFigure;;findConnector;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
org.jhotdraw.samples.pert.PertApplicationModel;;initProject;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.app.Application: boolean isSharingToolsAmongProjects()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r3.<org.jhotdraw.samples.pert.PertProject: void setDrawingEditor(org.jhotdraw.draw.DrawingEditor)>($r4);;pattern detected param  r2 must not be null it define a local $r3which used in  InvokeExpr 
org.jhotdraw.samples.pert.PertApplicationModel;;addCreationButtonsTo;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.pert.PertPanel;;setDrawing;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Drawing: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.pert.PertPanel;;addCreationButtonsTo;;1
*;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.pert.PertProject;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.pert.PertProject: org.jhotdraw.undo.UndoRedoManager undo>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.pert.PertProject;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.pert.PertProject: org.jhotdraw.draw.DefaultDrawingView view>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.pert.figures.DependencyFigure;;canConnect;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z3 = virtualinvoke r3.<org.jhotdraw.samples.pert.figures.TaskFigure: boolean isDependentOf(org.jhotdraw.samples.pert.figures.TaskFigure)>(r4);;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r5 = virtualinvoke r4.<org.jhotdraw.samples.pert.figures.TaskFigure: java.util.List getPredecessors()>();;pattern detected param  r2 must not be null it define a local r4which used in  InvokeExpr 
org.jhotdraw.samples.pert.figures.DependencyFigure;;handleDisconnect;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<org.jhotdraw.samples.pert.figures.TaskFigure: void removeDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)>(r0);;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r4.<org.jhotdraw.samples.pert.figures.TaskFigure: void removeDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)>(r0);;pattern detected param  r2 must not be null it define a local r4which used in  InvokeExpr 
org.jhotdraw.samples.pert.figures.DependencyFigure;;handleConnect;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<org.jhotdraw.samples.pert.figures.TaskFigure: void addDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)>(r0);;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r4.<org.jhotdraw.samples.pert.figures.TaskFigure: void addDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)>(r0);;pattern detected param  r2 must not be null it define a local r4which used in  InvokeExpr 
org.jhotdraw.samples.pert.figures.TaskFigure;;applyAttributes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Figure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>($r10, $r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.pert.figures.TaskFigure;;read;;1
*;; * ;; * ;;r1;;12
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("x", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("y", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("w", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: double getAttribute(java.lang.String,double)>("h", 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("model");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("name");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(java.lang.String)>("duration");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.pert.figures.TaskFigure;;write;;1
*;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("model");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("name");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void openElement(java.lang.String)>("duration");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.pert.figures.SeparatorLineFigure;;basicSetBounds;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.Point2D$Double: double y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r2.<java.awt.geom.Point2D$Double: double x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
org.jhotdraw.samples.svg.SVGApplicationModel;;initProject;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r1.<org.jhotdraw.app.Application: boolean isSharingToolsAmongProjects()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r3.<org.jhotdraw.samples.svg.SVGProject: void setEditor(org.jhotdraw.draw.DrawingEditor)>($r4);;pattern detected param  r2 must not be null it define a local $r3which used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGApplicationModel;;addCreationButtonsTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGApplicationModel;;addAttributesButtonsTo;;1
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r1.<javax.swing.JToolBar: javax.swing.JButton add(javax.swing.Action)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGPath;;drawFigure;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGPath;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGPath;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGPath;;writePoints;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("d", $r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGPath;;readPoints;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>("points", "");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r18 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>("points", "");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGPanel;;setDrawing;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.Drawing: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGPanel;;addCreationButtonsTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addSeparator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.NanoXMLDOMOutput;;save;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE ");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(">\n");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.NanoXMLDOMOutput;;writeStorable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMStorable: void write(org.jhotdraw.xml.DOMOutput)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGLine;;write;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x1", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y1", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x2", $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y2", $d3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGText;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGText;;write;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addText(java.lang.String)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGText;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getText()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGProject;;access$0;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.svg.SVGProject: org.jhotdraw.undo.UndoRedoManager undo>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.svg.SVGProject;;access$1;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<org.jhotdraw.samples.svg.SVGProject: org.jhotdraw.draw.DefaultDrawingView view>;;pattern detected param  r0 must not be null  because used in  FieldRef 
org.jhotdraw.samples.svg.figures.SVGRect;;write;;1
*;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("x", $d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("y", $d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("width", $d2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("height", $d3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("rx", $d4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("ry", $d5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGGroup;;read;;1
*;; * ;; * ;;r1;;16
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGGroup;;write;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGEllipse;;write;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("cx", $d3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("cy", $d7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("rx", $d9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("ry", $d11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGEllipse;;read;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.action.CombineAction;;ungroupFigures;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r21 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(java.util.Collection)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicRemoveAllChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: java.util.Map getAttributes()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.action.CombineAction;;groupFigures;;3
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(org.jhotdraw.draw.Figure)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void willChange()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r13.<org.jhotdraw.samples.svg.figures.SVGPath: void removeAllChildren()>();;pattern detected param  r2 must not be null it define a local $r13which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>($r21, $r22);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicAdd(org.jhotdraw.draw.Figure)>(r9);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void changed()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.action.SplitAction;;ungroupFigures;;2
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r21 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(java.util.Collection)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: java.util.List getChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicRemoveAllChildren()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: java.util.Map getAttributes()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.action.SplitAction;;groupFigures;;3
*;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void clearSelection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: org.jhotdraw.draw.Drawing getDrawing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.draw.DrawingView: void addToSelection(org.jhotdraw.draw.Figure)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void willChange()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r13.<org.jhotdraw.samples.svg.figures.SVGPath: void removeAllChildren()>();;pattern detected param  r2 must not be null it define a local $r13which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>($r21, $r22);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void basicAdd(org.jhotdraw.draw.Figure)>(r9);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<org.jhotdraw.draw.CompositeFigure: void changed()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGDrawing;;read;;1
*;; * ;; * ;;r1;;14
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: int getElementCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void openElement(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getTagName()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getText()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.String getText()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: void closeElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.lang.Object readObject(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGDrawing;;write;;1
*;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("xmlns", "http://www.w3.org/2000/svg");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("version", "1.2");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("baseProfile", "tiny");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void writeObject(java.lang.Object)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGImage;;drawFill;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGImage;;drawStroke;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.figures.SVGImage;;restoreTo;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = virtualinvoke $r2.<java.awt.geom.Rectangle2D$Double: java.lang.Object clone()>();;pattern detected param  r1 must not be null it define a local $r2which used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;getTransform;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r0.<org.jhotdraw.xml.DOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>(r1, "");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;getDimension;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r0.<org.jhotdraw.xml.DOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>(r1, "0");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;getDimensionValue;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r0.<org.jhotdraw.xml.DOMInput: java.util.List getInheritedAttribute(java.lang.String)>("style");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;getPath;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r0.<org.jhotdraw.xml.DOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>(r1, "");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;setPath;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>(r1, $r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;toPathData;;1
*;; * ;; * ;;r0;;11
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r18 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r28 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: boolean isClosed()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r77 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>($i12);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r79 = virtualinvoke r0.<org.jhotdraw.geom.BezierPath: java.lang.Object get(int)>(0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;getInheritedAttribute;;2
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.util.List getInheritedAttribute(java.lang.String)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;readAttributes;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<org.jhotdraw.xml.DOMInput: java.util.List getInheritedAttribute(java.lang.String)>("style");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;getColor;;1
*;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
org.jhotdraw.samples.svg.SVGUtil;;writeAttributes;;1
*;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("fill", r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("fill-rule", "evenodd");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("stroke", r22);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("stroke-width", $d0, 1.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("stroke-miterlimit", $d3, 4.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,java.lang.String)>("stroke-dasharray", $r51);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double,double)>("stroke-dashoffset", $d7, 0.0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMOutput: void addAttribute(java.lang.String,double)>("font-size", $d8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<init>;;2
*;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r3.<java.util.prefs.Preferences: java.lang.String get(java.lang.String,java.lang.String)>($r8, "North");;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r3.<java.util.prefs.Preferences: boolean getBoolean(java.lang.String,boolean)>($r14, 1);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void setOrientation(int)>(b0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<javax.swing.JToolBar: java.awt.Container getParent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void setVisible(boolean)>($z2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addComponentListener(java.awt.event.ComponentListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<javax.swing.JToolBar: void addAncestorListener(javax.swing.event.AncestorListener)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.JavaxDOMInput;;getText;;2
*;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.JavaxDOMOutput;;save;;1
*;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE ");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(">\n");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.JavaxDOMOutput;;writeStorable;;1
*;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<org.jhotdraw.xml.DOMStorable: void write(org.jhotdraw.xml.DOMOutput)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
org.jhotdraw.xml.JavaxDOMOutput;;addAttribute;;1
*;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
