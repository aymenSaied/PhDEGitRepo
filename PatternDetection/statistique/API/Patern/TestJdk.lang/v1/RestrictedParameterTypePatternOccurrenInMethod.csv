class name;;Method name;;number of detected pattern;;method Declaration;;parameter;;number of occurrences;;occurrenceType;;unitOnwhichOccurrenceIsDetected;;commentFragment
java.lang.String;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.String
java.lang.Boolean;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Boolean
java.lang.Long;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Long
java.lang.Integer;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Integer
java.lang.Short;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Short
java.lang.Float;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Float
java.lang.Double;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Double
java.lang.Character;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Character
java.lang.Byte;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Byte
java.lang.SecurityManager;;checkPermission;;1;;public void checkPermission(java.security.Permission, java.lang.Object)
*;; * ;; * ;;*;;r2;;1
*;;*;;*;;*;;*;;*;;ReturnVoidStmt for param;;return;;pattern detected param  r2 is type Restricted  it can be , java.security.AccessControlContext
java.lang.Enum;;compareTo;;1;;public volatile int compareTo(java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $i0;;pattern detected param  r1 is type Restricted  it can be , java.lang.Enum
java.lang.ProcessEnvironment;;toEnvironmentBlock;;1;;static java.lang.String toEnvironmentBlock(java.util.Map)
*;; * ;; * ;;*;;r0;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $r1;;pattern detected param  r0 is type Restricted  it can be , java.lang.ProcessEnvironment
java.lang.ProcessEnvironment;;put;;2;;public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
*;; * ;; * ;;*;;r1;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $r5;;pattern detected param  r1 is type Restricted  it can be , java.lang.String
*;; * ;; * ;;*;;r2;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $r5;;pattern detected param  r2 is type Restricted  it can be , java.lang.String
java.lang.reflect.Proxy;;getInvocationHandler;;1;;public static java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object) throws java.lang.IllegalArgumentException
*;; * ;; * ;;*;;r0;;1
*;;*;;*;;*;;*;;*;;ReturnStmt for param;;return $r4;;pattern detected param  r0 is type Restricted  it can be , java.lang.reflect.Proxy
