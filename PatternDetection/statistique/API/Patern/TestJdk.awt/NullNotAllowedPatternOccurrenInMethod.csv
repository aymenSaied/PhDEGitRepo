class name;;Method name;;number of detected pattern;;parameter;;number of occurrences;;occurrenceType;;unitOnwhichOccurrenceIsDetected;;commentFragment
java.awt.AWTEvent;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.Event: java.lang.Object target>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Event: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.AWTEvent;;copyPrivateDataInto;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.AWTEvent: byte[] bdata> = $r3;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.AWTEvent: boolean isSystemGenerated> = $z4;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.AWTEvent;;access$002;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.AWTEvent: boolean isSystemGenerated> = z0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.AWTEvent;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.awt.AWTEvent: boolean isSystemGenerated>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.AWTEvent;;access$100;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.AWTEvent: byte[] bdata>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.AWTEvent;;access$102;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.AWTEvent: byte[] bdata> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.AlphaComposite;;equals;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.awt.AlphaComposite: int rule>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$f1 = r2.<java.awt.AlphaComposite: float extraAlpha>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.image.ColorModel;;<init>;;2
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r2.<java.awt.color.ColorSpace: int getType()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r2.<java.awt.color.ColorSpace: int getNumComponents()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r17 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;$i14 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i16 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i17 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ColorModel;;getUnnormalizedComponents;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;f0 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r1[$i13];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f9 = r1[$i28];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ColorModel;;getNormalizedComponents;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$i11 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i20 = r1[$i19];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i33 = r1[$i32];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ColorModel;;equals;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = virtualinvoke r2.<java.awt.image.ColorModel: boolean hasAlpha()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z4 = virtualinvoke r2.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i2 = virtualinvoke r2.<java.awt.image.ColorModel: int getPixelSize()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i4 = virtualinvoke r2.<java.awt.image.ColorModel: int getTransparency()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i6 = virtualinvoke r2.<java.awt.image.ColorModel: int getNumComponents()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r3 = virtualinvoke r2.<java.awt.image.ColorModel: int[] getComponentSize()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.image.ColorModel;;getGray8TosRGB8LUT;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r0.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.image.ColorModel;;getLinearGray16ToOtherGray8LUT;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r0.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.image.ColorModel;;getGray16TosRGB8LUT;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r0.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.image.ColorModel;;getLinearGray16ToOtherGray16LUT;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r0.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.RenderingHints;;put;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z0 = virtualinvoke $r4.<java.awt.RenderingHints$Key: boolean isCompatibleValue(java.lang.Object)>(r2);;pattern detected param  r1 must not be null it define a local $r4which used in  InvokeExpr 
java.awt.RenderingHints;;add;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.awt.RenderingHints: java.util.HashMap hintmap>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.RenderingHints;;putAll;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.RenderingHints;;equals;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = $r3.<java.awt.RenderingHints: java.util.HashMap hintmap>;;pattern detected param  r1 must not be null it define a local $r3which used in  FieldRef 
java.awt.image.Raster;;createInterleavedRaster;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;ArrayRef for param;;i6 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i8 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i6 = r0[i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.image.Raster;;createBandedRaster;;2
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.Raster;;createInterleavedRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.image.Raster;;createBandedRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.image.Raster;;createPackedRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.image.Raster;;createPackedRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.image.Raster;;createWritableRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.awt.image.SampleModel: java.awt.image.DataBuffer createDataBuffer()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.image.Raster;;<init>;;2
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.image.SampleModel: java.awt.image.DataBuffer createDataBuffer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.SampleModel: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.image.SampleModel: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r2.<java.awt.Point: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.image.Raster;;<init>;;2
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r3.<java.awt.Point: int x>;;pattern detected param  r3 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r3.<java.awt.Point: int y>;;pattern detected param  r3 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.SampleModel: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.image.SampleModel: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.Raster;;createCompatibleWritableRaster;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.WritableRaster;;<init>;;2
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.image.SampleModel: java.awt.image.DataBuffer createDataBuffer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.SampleModel: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.image.SampleModel: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r2.<java.awt.Point: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r2.<java.awt.Point: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.image.WritableRaster;;<init>;;2
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r3.<java.awt.Point: int x>;;pattern detected param  r3 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r3.<java.awt.Point: int y>;;pattern detected param  r3 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.SampleModel: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.image.SampleModel: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.WritableRaster;;setDataElements;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$i9 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i5 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i6 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i7 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,int,int,java.lang.Object)>(i6, $i21, i4, 1, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.WritableRaster;;setRect;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i5 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.Raster: int[] getPixels(int,int,int,int,int[])>(i4, $i32, i2, 1, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.image.Raster: float[] getPixels(int,int,int,int,float[])>(i4, $i34, i2, 1, r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.image.Raster: double[] getPixels(int,int,int,int,double[])>(i4, $i36, i2, 1, r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.SampleModel;;setPixel;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i4 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setPixel;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setPixel;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setPixels;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i18 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setPixels;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setPixels;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setSamples;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i17 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setSamples;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SampleModel;;setSamples;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.color.ICC_ColorSpace;;<init>;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.color.ICC_Profile: int getColorSpaceType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.color.ICC_Profile: int getNumComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.color.ICC_Profile: int getProfileClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.color.ICC_ColorSpace;;toRGB;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.color.ICC_ColorSpace;;fromRGB;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.color.ICC_ColorSpace;;toCIEXYZ;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.color.ICC_ColorSpace;;fromCIEXYZ;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f2 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.Event;;getOldEventKey;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c5 = virtualinvoke r0.<java.awt.event.KeyEvent: char getKeyChar()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Button;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Button;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Button;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Point;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Point;;setLocation;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Point;;equals;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.awt.Point: int x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i3 = r2.<java.awt.Point: int y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.MenuComponent;;dispatchEventImpl;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.AWTEvent: void setSource(java.lang.Object)>($r9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.AWTEvent: java.awt.Event convertToOld()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuComponent;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;pointRelativeToComponent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;findUnderMouseInWindow;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.PointerInfo: java.awt.Point getLocation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;setLocation;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;resize;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;setBounds;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;paintAll;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.Graphics: java.awt.Shape getClip()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;printAll;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.Graphics: java.awt.Shape getClip()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;createBufferStrategy;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.Component;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;getComponentAt;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;dispatchEventImpl;;1
class name;; * ;; * ;;r1;;15
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r16.<sun.awt.dnd.SunDropTargetEvent: void dispatch()>();;pattern detected param  r1 must not be null it define a local $r16which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$z4 = r1.<java.awt.AWTEvent: boolean focusManagerIsDispatching>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$z5 = r1.<java.awt.AWTEvent: boolean isPosted>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.AWTEvent: boolean isPosted> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z12 = virtualinvoke r1.<java.awt.AWTEvent: boolean isConsumed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z14 = virtualinvoke r1.<java.awt.AWTEvent: boolean isConsumed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z20 = virtualinvoke r1.<java.awt.AWTEvent: boolean isConsumed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z25 = virtualinvoke r1.<java.awt.AWTEvent: boolean isConsumed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r47 = virtualinvoke r1.<java.awt.AWTEvent: java.awt.Event convertToOld()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.AWTEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r48.<java.awt.event.KeyEvent: void setKeyChar(char)>($c5);;pattern detected param  r1 must not be null it define a local $r48which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r49.<java.awt.event.KeyEvent: void setModifiers(int)>($i7);;pattern detected param  r1 must not be null it define a local $r49which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z35 = virtualinvoke r1.<java.awt.AWTEvent: boolean isConsumed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r54 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;dispatchMouseWheelToAncestor;;1
class name;; * ;; * ;;r1;;16
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$l9 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: long getWhen()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getModifiers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getXOnScreen()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getYOnScreen()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i13 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getClickCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z5 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: boolean isPopupTrigger()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i14 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getScrollType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i15 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getScrollAmount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getWheelRotation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: double getPreciseWheelRotation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.AWTEvent: void copyPrivateDataInto(java.awt.AWTEvent)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.event.MouseWheelEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;postEvent;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Event: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Event: void translate(int,int)>($i2, $i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Event: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Event: int x> = i0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Event: int y> = i1;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;isCoalesceEventsOverriden;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("coalesceEvents", $r11);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Component;;processEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processComponentEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.ComponentEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processFocusEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.FocusEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processKeyEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processMouseEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processMouseMotionEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processMouseWheelEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.MouseWheelEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processInputMethodEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.InputMethodEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processHierarchyEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.HierarchyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;processHierarchyBoundsEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.HierarchyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;handleEvent;;1
class name;; * ;; * ;;r1;;18
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Event: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i11 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i13 = r1.<java.awt.Event: int key>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r1.<java.awt.Event: int key>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.Event: java.lang.Object arg>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.awt.Event: java.lang.Object arg>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.Event: java.lang.Object arg>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Component;;add;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.awt.PopupMenu: java.awt.MenuContainer parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.awt.PopupMenu: java.awt.MenuContainer parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.PopupMenu: java.awt.MenuContainer parent> = r0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r11 = r1.<java.awt.PopupMenu: java.awt.peer.MenuComponentPeer peer>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.PopupMenu: void addNotify()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;remove;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r8 = r3.<java.awt.PopupMenu: java.awt.peer.MenuComponentPeer peer>;;pattern detected param  r1 must not be null it define a local r3which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r3.<java.awt.PopupMenu: void removeNotify()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;r3.<java.awt.PopupMenu: java.awt.MenuContainer parent> = null;;pattern detected param  r1 must not be null it define a local r3which used in  FieldRef 
java.awt.Component;;list;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(" ");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintStream: void println(java.lang.Object)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;list;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;writeObject;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;readObject;;1
class name;; * ;; * ;;r1;;17
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r17 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r20 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r23 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r26 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r30 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r34 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r38 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r41 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r47 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r51 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;applyComponentOrientation;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.Component;;applyCompoundShape;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z4 = virtualinvoke r1.<sun.java2d.pipe.Region: boolean isEmpty()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z5 = virtualinvoke r1.<sun.java2d.pipe.Region: boolean equals(java.lang.Object)>($r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z6 = virtualinvoke r1.<sun.java2d.pipe.Region: boolean equals(java.lang.Object)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r25 = virtualinvoke r1.<sun.java2d.pipe.Region: sun.java2d.pipe.Region getTranslatedRegion(int,int)>($i1, $i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Component;;access$002;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Component: sun.java2d.pipe.Region mixingCutoutRegion> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Component;;access$100;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = specialinvoke r0.<java.awt.Component: java.awt.Point location_NoClientCode()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Component;;access$400;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = specialinvoke r0.<java.awt.Component: java.awt.Insets getInsets_NoClientCode()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Dialog;;shouldBlock;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.Window: boolean isVisible_NoClientCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$z2 = r1.<java.awt.Window: boolean isInShow>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$z6 = $r4.<java.awt.Dialog: boolean isInHide>;;pattern detected param  r1 must not be null it define a local $r4which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z7 = virtualinvoke r1.<java.awt.Window: boolean isModalExcluded(java.awt.Dialog$ModalExclusionType)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.awt.Window: java.awt.Window getDocumentRoot()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z10 = virtualinvoke r1.<java.awt.Window: boolean isModalExcluded(java.awt.Dialog$ModalExclusionType)>($r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r13 = r1.<java.awt.Window: sun.awt.AppContext appContext>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z12 = virtualinvoke r1.<java.awt.Window: boolean isModalExcluded(java.awt.Dialog$ModalExclusionType)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Dialog;;blockWindow;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Window: boolean isModalBlocked()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Window: void setModalBlocked(java.awt.Dialog,boolean,boolean)>(r0, 1, 1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Dialog;;blockWindows;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Dialog;;unblockWindow;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Window: boolean isModalBlocked()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Window: void setModalBlocked(java.awt.Dialog,boolean,boolean)>(r0, 0, 1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Dialog;;checkShouldBeBlocked;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.awt.Window: java.lang.Object getTreeLock()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Dialog;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.event.KeyEvent;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.event.KeyEvent;;access$002;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.event.KeyEvent: long rawCode> = l0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.event.KeyEvent;;access$102;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.event.KeyEvent: long primaryLevelUnicode> = l0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.event.KeyEvent;;access$202;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.event.KeyEvent: long extendedKeyCode> = l0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.MenuItem;;deleteShortcut;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.MenuShortcut: boolean equals(java.awt.MenuShortcut)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuItem;;handleShortcut;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.KeyEvent: int getModifiers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.event.KeyEvent: int getExtendedKeyCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.event.KeyEvent: int getModifiers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$l7 = virtualinvoke r1.<java.awt.event.KeyEvent: long getWhen()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<java.awt.event.KeyEvent: int getModifiers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuItem;;getShortcutMenuItem;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.MenuShortcut: boolean equals(java.awt.MenuShortcut)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuItem;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.MenuItem;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuItem;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuItem;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.MenuItem: java.awt.MenuShortcut shortcut>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.MenuItem;;access$100;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = specialinvoke r0.<java.awt.MenuItem: boolean isItemEnabled()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.GraphicsEnvironment;;registerFont;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.event.MouseEvent;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.Component: java.awt.Point getLocationOnScreen()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.event.MouseEvent;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.List;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.List;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.List;;readObject;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Frame;;postProcessKeyEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.event.KeyEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Frame;;writeObject;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Frame;;readObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Frame;;access$002;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Frame: int state> = i0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Frame;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Frame: int state>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Toolkit;;getNativeContainer;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = virtualinvoke r0.<java.awt.Component: java.awt.Container getNativeContainer()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Toolkit;;getDesktopProperty;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("awt.dynamicLayoutSupported");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Toolkit;;deProxyAWTEventListener;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = virtualinvoke $r2.<java.awt.event.AWTEventListenerProxy: java.util.EventListener getListener()>();;pattern detected param  r0 must not be null it define a local $r2which used in  InvokeExpr 
java.awt.Choice;;insertNoInvalidate;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.Choice;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Choice;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Choice;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;checkAdding;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.awt.Component: java.awt.Container parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Component: java.awt.Window getContainingWindow()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void checkGD(java.lang.String)>($r19);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;removeDelicately;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void removeNotify()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.Component: int numListening(long)>(32768L);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.Component: int numListening(long)>(65536L);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.awt.Component: int countHierarchyMembers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Component: java.awt.Container parent> = null;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void setGraphicsConfiguration(java.awt.GraphicsConfiguration)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r11 = r1.<java.awt.Component: java.awt.Container parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: int createHierarchyEvents(int,java.awt.Component,java.awt.Container,long,boolean)>(1400, r1, r0, 1L, $z2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;isRemoveNotifyNeeded;;2
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r0.<java.awt.Component: java.awt.peer.ComponentPeer peer>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r0.<java.awt.Component: boolean isLightweight()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z2 = virtualinvoke $r6.<java.awt.Container: boolean hasHeavyweightDescendants()>();;pattern detected param  r0 must not be null it define a local $r6which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r0.<java.awt.Component: java.awt.peer.ComponentPeer peer>;;pattern detected param  r0 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r2.<java.awt.Container: java.awt.peer.ComponentPeer peer>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.awt.Container: java.awt.Container getHeavyweightContainer()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.Container;;setComponentZOrder;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r1.<java.awt.Component: java.awt.Container parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void mixOnZOrderChanging(int,int)>(i1, i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;reparentTraverse;;1
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r2.<java.awt.Container: int getComponentCount()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.awt.Container: java.awt.Component getComponent(int)>(i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.Container;;addDelicately;;2
class name;; * ;; * ;;r1;;15
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Component: java.awt.Container parent> = r0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void setGraphicsConfiguration(java.awt.GraphicsConfiguration)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.Component: int numListening(long)>(32768L);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.Component: int numListening(long)>(65536L);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.Component: int countHierarchyMembers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r12 = r1.<java.awt.Component: java.awt.peer.ComponentPeer peer>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void addNotify()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void updateZOrder()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.Component: boolean isLightweight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void relocateComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: int createHierarchyEvents(int,java.awt.Component,java.awt.Container,long,boolean)>(1400, r1, r0, 1L, $z5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z6 = virtualinvoke r1.<java.awt.Component: boolean isFocusOwner()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z7 = virtualinvoke r1.<java.awt.Component: boolean canBeFocusOwnerRecursively()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void transferFocus()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: int createHierarchyEvents(int,java.awt.Component,java.awt.Container,long,boolean)>(1400, r1, r0, 1400L, $z11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<java.awt.Container: java.awt.Container getHeavyweightContainer()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.Container;;addImpl;;1
class name;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void checkGD(java.lang.String)>($r11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r12 = r1.<java.awt.Component: java.awt.Container parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r13 = r1.<java.awt.Component: java.awt.Container parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Component: java.awt.Container parent> = r0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void setGraphicsConfiguration(java.awt.GraphicsConfiguration)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.Component: int numListening(long)>(32768L);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.Component: int numListening(long)>(65536L);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.awt.Component: int countHierarchyMembers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void addNotify()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: int createHierarchyEvents(int,java.awt.Component,java.awt.Container,long,boolean)>(1400, r1, r0, 1L, $z4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;remove;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.awt.Component: java.awt.Container parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Container;;update;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics: void clearRect(int,int,int,int)>(0, 0, $i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;processContainerEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.ContainerEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;dispatchEventImpl;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.AWTEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;getMouseEventTargetImpl;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z8 = interfaceinvoke r1.<java.awt.Container$EventTargetFilter: boolean accept(java.awt.Component)>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z13 = interfaceinvoke r1.<java.awt.Container$EventTargetFilter: boolean accept(java.awt.Component)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;deliverEvent;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Event: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Event: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Event: void translate(int,int)>($i3, $i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;getComponentAt;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Container;;findComponentAt;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Container;;writeObject;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;readObject;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r26 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r30 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;getAccessibleAt;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i15 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Container;;increaseComponentCount;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Component: boolean isDisplayable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;i1 = $r7.<java.awt.Container: int numOfLWComponents>;;pattern detected param  r1 must not be null it define a local $r7which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;i0 = $r8.<java.awt.Container: int numOfHWComponents>;;pattern detected param  r1 must not be null it define a local $r8which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.Component: boolean isLightweight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;decreaseComponentCount;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Component: boolean isDisplayable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;i1 = $r7.<java.awt.Container: int numOfLWComponents>;;pattern detected param  r1 must not be null it define a local $r7which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;i0 = $r8.<java.awt.Container: int numOfHWComponents>;;pattern detected param  r1 must not be null it define a local $r8which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.Component: boolean isLightweight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;recursiveSubtractAndApplyShape;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<sun.java2d.pipe.Region: boolean isEmpty()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Container;;recursiveRelocateHeavyweightChildren;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.Point2D;;setLocation;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Point2D;;distanceSq;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Point2D;;distance;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Point2D;;equals;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d1 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.Font;;<init>;;1
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r2.<sun.font.Font2DHandle: sun.font.Font2D font2D>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r2.<sun.font.Font2DHandle: sun.font.Font2D font2D>;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.Font;;<init>;;2
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r3.<sun.font.Font2DHandle: sun.font.Font2D font2D>;;pattern detected param  r3 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<sun.font.AttributeValues: java.lang.String getFamily()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r1.<sun.font.AttributeValues: float getWeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f1 = virtualinvoke r1.<sun.font.AttributeValues: float getPosture()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;<init>;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.Font: sun.font.AttributeValues values>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = specialinvoke r1.<java.awt.Font: sun.font.AttributeValues getAttributeValues()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.awt.Font: java.lang.String name>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Font: int style>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Font: int size>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$f0 = r1.<java.awt.Font: float pointSize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.awt.Font: sun.font.Font2DHandle font2DHandle>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r1.<java.awt.Font: boolean createdFont>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Font;;initFromValues;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.font.AttributeValues: void defineAll(int)>($i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<sun.font.AttributeValues: java.lang.String getFamily()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r1.<sun.font.AttributeValues: float getSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f1 = virtualinvoke r1.<sun.font.AttributeValues: float getSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f2 = virtualinvoke r1.<sun.font.AttributeValues: float getWeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f3 = virtualinvoke r1.<sun.font.AttributeValues: float getPosture()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<sun.font.AttributeValues: boolean anyNonDefault(int)>($i8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<sun.font.AttributeValues: boolean anyNonDefault(int)>($i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;getFont;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r5 = virtualinvoke $r4.<sun.font.AttributeMap: sun.font.AttributeValues getValues()>();;pattern detected param  r0 must not be null it define a local $r4which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r1 = virtualinvoke $r6.<sun.font.AttributeMap: sun.font.AttributeValues getValues()>();;pattern detected param  r0 must not be null it define a local $r6which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r0.<java.util.Map: int size()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Font;;createFont;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r4);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Font;;createFont;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Font;;getFamily;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.Font;;getFontName;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.Font;;decode;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Font;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;canDisplayUpTo;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;canDisplayUpTo;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;c3 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.Font;;canDisplayUpTo;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c4 = interfaceinvoke r1.<java.text.CharacterIterator: char next()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = interfaceinvoke r1.<java.text.CharacterIterator: char next()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;defaultLineMetrics;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r1.<java.awt.font.FontRenderContext: java.lang.Object getAntiAliasingHint()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r1.<java.awt.font.FontRenderContext: java.lang.Object getFractionalMetricsHint()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;getLineMetrics;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;getStringBounds;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;getStringBounds;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;getStringBounds;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = interfaceinvoke r1.<java.text.CharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = interfaceinvoke r1.<java.text.CharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.text.CharacterIterator: char setIndex(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c9 = interfaceinvoke r1.<java.text.CharacterIterator: char current()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.text.CharacterIterator: char next()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;applyTransform;;2
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<sun.font.AttributeValues: void setTransform(java.awt.geom.AffineTransform)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Font;;applyStyle;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<sun.font.AttributeValues: void setWeight(float)>($f0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<sun.font.AttributeValues: void setPosture(float)>($f1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Font;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = specialinvoke r0.<java.awt.Font: sun.font.Font2D getFont2D()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Font;;access$102;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Font: sun.font.Font2DHandle font2DHandle> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Font;;access$202;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Font: boolean createdFont> = z0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Font;;access$200;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.awt.Font: boolean createdFont>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Color;;<init>;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.color.ColorSpace: int getNumComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r20 = virtualinvoke r1.<java.awt.color.ColorSpace: float[] toRGB(float[])>($r19);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r2[i1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f2 = r2[i1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f3 = r2[i1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.Color;;equals;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = virtualinvoke $r2.<java.awt.Color: int getRGB()>();;pattern detected param  r1 must not be null it define a local $r2which used in  InvokeExpr 
java.awt.Color;;getComponents;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.color.ColorSpace: float[] fromCIEXYZ(float[])>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Color;;getColorComponents;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.color.ColorSpace: float[] fromCIEXYZ(float[])>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Cursor;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$l0 = r0.<java.awt.Cursor: long pData>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Cursor;;access$002;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Cursor: long pData> = l0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.dnd.DropTarget;;dragEnter;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.dnd.DropTargetDragEvent: java.awt.dnd.DropTargetContext getDropTargetContext()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.dnd.DropTargetDragEvent: java.awt.Point getLocation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DropTarget;;dragOver;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.dnd.DropTargetDragEvent: java.awt.Point getLocation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DropTarget;;dropActionChanged;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.dnd.DropTargetDragEvent: java.awt.Point getLocation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DropTarget;;drop;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.dnd.DropTargetDropEvent: void rejectDrop()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DropTarget;;addNotify;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;interfaceinvoke $r4.<java.awt.dnd.peer.DropTargetPeer: void addDropTarget(java.awt.dnd.DropTarget)>(r0);;pattern detected param  r1 must not be null it define a local $r4which used in  InvokeExpr 
java.awt.dnd.DropTarget;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DropTarget;;readObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Dimension;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Dimension;;setSize;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Dimension;;equals;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i3 = r2.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.ComponentOrientation;;getOrientation;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.ComponentOrientation;;getOrientation;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)>("Orientation");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.util.ResourceBundle: java.util.Locale getLocale()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Rectangle;;<init>;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;<init>;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r2.<java.awt.Dimension: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r2.<java.awt.Dimension: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.Rectangle;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;setBounds;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;setLocation;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;setSize;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i6 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i7 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;intersection;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;i2 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i3 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i17 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;union;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i13 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i6 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i7 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;add;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;add;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i13 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i15 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i16 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i17 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i6 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i7 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Rectangle;;equals;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i3 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i5 = r2.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i7 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.Graphics;;drawPolygon;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.Polygon: int[] xpoints>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.awt.Polygon: int[] ypoints>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Polygon: int npoints>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Graphics;;fillPolygon;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.Polygon: int[] xpoints>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.awt.Polygon: int[] ypoints>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Polygon: int npoints>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Graphics;;getClipBounds;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Rectangle: int x> = $i0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Rectangle: int y> = $i1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Rectangle: int width> = $i2;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Rectangle: int height> = $i3;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.FontMetrics;;stringWidth;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, r2, 0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.FontMetrics;;myFRC;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r3 = virtualinvoke $r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();;pattern detected param  r1 must not be null it define a local $r2which used in  InvokeExpr 
java.awt.Insets;;equals;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i1 = r2.<java.awt.Insets: int top>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i3 = r2.<java.awt.Insets: int left>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i5 = r2.<java.awt.Insets: int bottom>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i7 = r2.<java.awt.Insets: int right>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.event.InputMethodEvent;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;setMinimumSize;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r1.<java.awt.Dimension: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r1.<java.awt.Dimension: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Window;;updateChildFocusableWindowState;;1
class name;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.awt.Window: java.awt.peer.ComponentPeer getPeer()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r0.<java.awt.Window: boolean isShowing()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r0.<java.awt.Window: java.awt.peer.ComponentPeer getPeer()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r0.<java.awt.Window: java.util.Vector ownedWindowList>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r0.<java.awt.Window: java.util.Vector ownedWindowList>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;getWindows;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r0.<sun.awt.AppContext: java.lang.Object get(java.lang.Object)>(class "java/awt/Window");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Window;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Window;;processEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;processWindowEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.WindowEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;processWindowFocusEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.WindowEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;processWindowStateEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.WindowEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;preProcessKeyEvent;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.KeyEvent: boolean isActionKey()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.event.KeyEvent: boolean isControlDown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.event.KeyEvent: boolean isShiftDown()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;dispatchEventImpl;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;postEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Event: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;connectOwnedWindow;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Window: java.awt.Container parent> = r0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.Window: java.lang.ref.WeakReference weakThis>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Window;;removeFromWindowList;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r0.<sun.awt.AppContext: java.lang.Object get(java.lang.Object)>(class "java/awt/Window");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Window;;setType;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.Window;;writeObject;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>("ownedL");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r27);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;deserializeResources;;1
class name;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r18 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r26 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r29 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r29 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;setBounds;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Window;;paint;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Graphics create()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Window;;setLayersOpaque;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r2 = interfaceinvoke r1.<javax.swing.RootPaneContainer: javax.swing.JRootPane getRootPane()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
java.awt.Window;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.Window: java.lang.ref.WeakReference weakThis>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$202;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Window: boolean disposing> = z0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$300;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.Window: java.lang.Object inputContextLock>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$400;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$f0 = r0.<java.awt.Window: float opacity>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$500;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.Window: void updateWindow()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Window;;access$600;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Window: int securityWarningWidth>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$700;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Window: int securityWarningHeight>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$602;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Window: int securityWarningWidth> = i0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$702;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Window: int securityWarningHeight> = i0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$802;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Window: double securityWarningPointX> = d0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$902;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Window: double securityWarningPointY> = d0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$1002;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Window: float securityWarningAlignmentX> = f0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$1102;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.Window: float securityWarningAlignmentY> = f0;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.Window;;access$1200;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r1 = specialinvoke r0.<java.awt.Window: java.awt.geom.Point2D calculateSecurityWarningPosition(double,double,double,double)>(d0, d1, d2, d3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Window;;access$1300;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.awt.Window: boolean autoRequestFocus>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.ModalEventFilter;;acceptEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ModalEventFilter;;compareTo;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.ModalEventFilter: java.awt.Dialog getModalDialog()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ModalEventFilter;;createFilterForDialog;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.awt.Dialog: java.awt.Dialog$ModalityType getModalityType()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.GraphicsDevice;;getBestConfiguration;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.GraphicsConfigTemplate: java.awt.GraphicsConfiguration getBestConfiguration(java.awt.GraphicsConfiguration[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GraphicsDevice;;isWindowTranslucencySupported;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.GraphicsDevice$WindowTranslucency: int ordinal()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BufferedImage;;<init>;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.image.IndexColorModel: boolean hasAlpha()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.image.IndexColorModel: boolean isAlphaPremultiplied()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.IndexColorModel: int getMapSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.image.IndexColorModel: boolean isCompatibleRaster(java.awt.image.Raster)>($r14);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BufferedImage;;<init>;;2
class name;; * ;; * ;;r1;;24
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.image.ColorModel: boolean isCompatibleRaster(java.awt.image.Raster)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;z1 = virtualinvoke r1.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i13 = virtualinvoke r1.<java.awt.image.ColorModel: int getComponentSize(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = virtualinvoke r1.<java.awt.image.ColorModel: int getComponentSize(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.ColorModel: int getPixelSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i3 = virtualinvoke r8.<java.awt.image.DirectColorModel: int getRedMask()>();;pattern detected param  r1 must not be null it define a local r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i4 = virtualinvoke r8.<java.awt.image.DirectColorModel: int getGreenMask()>();;pattern detected param  r1 must not be null it define a local r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i5 = virtualinvoke r8.<java.awt.image.DirectColorModel: int getBlueMask()>();;pattern detected param  r1 must not be null it define a local r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i19 = virtualinvoke r8.<java.awt.image.DirectColorModel: int getAlphaMask()>();;pattern detected param  r1 must not be null it define a local r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z9 = virtualinvoke r8.<java.awt.image.DirectColorModel: boolean hasAlpha()>();;pattern detected param  r1 must not be null it define a local r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z10 = virtualinvoke r8.<java.awt.image.DirectColorModel: boolean hasAlpha()>();;pattern detected param  r1 must not be null it define a local r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z12 = virtualinvoke r1.<java.awt.image.ColorModel: boolean hasAlpha()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i21 = virtualinvoke r28.<java.awt.image.IndexColorModel: int getPixelSize()>();;pattern detected param  r1 must not be null it define a local r28which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z17 = virtualinvoke r1.<java.awt.image.ColorModel: boolean hasAlpha()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i23 = virtualinvoke r30.<java.awt.image.DirectColorModel: int getRedMask()>();;pattern detected param  r1 must not be null it define a local r30which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i24 = virtualinvoke r30.<java.awt.image.DirectColorModel: int getGreenMask()>();;pattern detected param  r1 must not be null it define a local r30which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i25 = virtualinvoke r30.<java.awt.image.DirectColorModel: int getBlueMask()>();;pattern detected param  r1 must not be null it define a local r30which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i26 = virtualinvoke r30.<java.awt.image.DirectColorModel: int getRedMask()>();;pattern detected param  r1 must not be null it define a local r30which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i27 = virtualinvoke r30.<java.awt.image.DirectColorModel: int getGreenMask()>();;pattern detected param  r1 must not be null it define a local r30which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i28 = virtualinvoke r30.<java.awt.image.DirectColorModel: int getBlueMask()>();;pattern detected param  r1 must not be null it define a local r30which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i29 = virtualinvoke r32.<java.awt.image.ComponentColorModel: int getNumComponents()>();;pattern detected param  r1 must not be null it define a local r32which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i30 = virtualinvoke r32.<java.awt.image.ComponentColorModel: int getNumComponents()>();;pattern detected param  r1 must not be null it define a local r32which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r46 = virtualinvoke r32.<java.awt.image.ComponentColorModel: int[] getComponentSize()>();;pattern detected param  r1 must not be null it define a local r32which used in  InvokeExpr 
class name;; * ;; * ;;r2;;14
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r2.<java.awt.image.WritableRaster: int minX>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r2.<java.awt.image.WritableRaster: int minY>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r2.<java.awt.image.WritableRaster: int minX>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r2.<java.awt.image.WritableRaster: int minY>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r2.<java.awt.image.WritableRaster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i14 = virtualinvoke $r25.<sun.awt.image.ByteComponentRaster: int getPixelStride()>();;pattern detected param  r2 must not be null it define a local $r25which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i15 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i17 = virtualinvoke $r26.<sun.awt.image.ShortComponentRaster: int getPixelStride()>();;pattern detected param  r2 must not be null it define a local $r26which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i18 = virtualinvoke r7.<sun.awt.image.IntegerComponentRaster: int getPixelStride()>();;pattern detected param  r2 must not be null it define a local r7which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i22 = virtualinvoke r29.<sun.awt.image.ByteComponentRaster: int getPixelStride()>();;pattern detected param  r2 must not be null it define a local r29which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r31 = virtualinvoke r2.<java.awt.image.WritableRaster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r33 = virtualinvoke r2.<java.awt.image.WritableRaster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BufferedImage;;setRGB;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i13 = r1[$i12];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.BufferedImage;;getProperty;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.BufferedImage;;getData;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Rectangle: java.awt.Point getLocation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r1.<java.awt.Rectangle: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r1.<java.awt.Rectangle: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i2 = r1.<java.awt.Rectangle: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i3 = r1.<java.awt.Rectangle: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.image.BufferedImage;;setData;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.Raster: int[] getPixels(int,int,int,int,int[])>(i9, i4, i7, 1, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuBar;;setHelpMenu;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.awt.Menu: java.awt.MenuContainer parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.MenuBar;;add;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.awt.Menu: java.awt.MenuContainer parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.awt.Menu: java.awt.MenuContainer parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.Menu: java.awt.MenuContainer parent> = r0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r10 = r1.<java.awt.Menu: java.awt.peer.MenuComponentPeer peer>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Menu: void addNotify()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuBar;;handleShortcut;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.event.KeyEvent: int getModifiers()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuBar;;writeObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MenuBar;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Desktop;;checkFileValidation;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.Desktop;;checkActionSupport;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Desktop$Action: java.lang.String name()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Desktop;;edit;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.File: boolean canWrite()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Desktop;;browse;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.Desktop;;mail;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.TextField;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.TextField;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.TextField;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Label;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Checkbox;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Checkbox;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Checkbox;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Scrollbar;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Scrollbar;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Scrollbar;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ScrollPane;;setScrollPosition;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.ScrollPane;;printComponents;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.Graphics: java.awt.Graphics create()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ScrollPane;;processMouseWheelEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.event.MouseWheelEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ScrollPane;;writeObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ScrollPane;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.TextArea;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Canvas;;paint;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics: void clearRect(int,int,int,int)>(0, 0, $i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Canvas;;update;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics: void clearRect(int,int,int,int)>(0, 0, $i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Menu;;add;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.awt.MenuItem: java.awt.MenuContainer parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.awt.MenuItem: java.awt.MenuContainer parent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.MenuItem: java.awt.MenuContainer parent> = r0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.MenuItem: void addNotify()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Menu;;writeObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Menu;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.FileDialog;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.FileDialog;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.FileDialog: void setFiles(java.io.File[])>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.FileDialog;;access$100;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r0.<java.awt.FileDialog: boolean multipleMode>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.CheckboxMenuItem;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.CheckboxMenuItem;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CheckboxMenuItem;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.JobAttributes;;set;;1
class name;; * ;; * ;;r1;;15
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.JobAttributes: int copies>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.JobAttributes: java.awt.JobAttributes$DefaultSelectionType defaultSelection>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.awt.JobAttributes: java.awt.JobAttributes$DestinationType destination>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.JobAttributes: java.awt.JobAttributes$DialogType dialog>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.awt.JobAttributes: java.lang.String fileName>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.JobAttributes: int fromPage>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.JobAttributes: int maxPage>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.JobAttributes: int minPage>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.awt.JobAttributes: java.awt.JobAttributes$MultipleDocumentHandlingType multipleDocumentHandling>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.awt.JobAttributes: int[][] pageRanges>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.awt.JobAttributes: int prFirst>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.JobAttributes: int prLast>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.awt.JobAttributes: java.lang.String printer>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.awt.JobAttributes: java.awt.JobAttributes$SidesType sides>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.JobAttributes: int toPage>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.JobAttributes;;setDefaultSelection;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.JobAttributes;;setDestination;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.JobAttributes;;setDialog;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.JobAttributes;;setMultipleDocumentHandling;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.JobAttributes;;setPageRanges;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.JobAttributes;;setSides;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.JobAttributes;;equals;;1
class name;; * ;; * ;;r1;;21
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.awt.JobAttributes: java.lang.String fileName>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<java.awt.JobAttributes: java.lang.String fileName>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r8 = r2.<java.awt.JobAttributes: int[][] pageRanges>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r9 = r2.<java.awt.JobAttributes: int[][] pageRanges>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r11 = r2.<java.awt.JobAttributes: int[][] pageRanges>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r15 = r2.<java.awt.JobAttributes: int[][] pageRanges>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r19 = r2.<java.awt.JobAttributes: int[][] pageRanges>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r22 = r2.<java.awt.JobAttributes: java.lang.String printer>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r24 = r2.<java.awt.JobAttributes: java.lang.String printer>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i9 = r2.<java.awt.JobAttributes: int copies>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r26 = r2.<java.awt.JobAttributes: java.awt.JobAttributes$DefaultSelectionType defaultSelection>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r28 = r2.<java.awt.JobAttributes: java.awt.JobAttributes$DestinationType destination>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r30 = r2.<java.awt.JobAttributes: java.awt.JobAttributes$DialogType dialog>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i11 = r2.<java.awt.JobAttributes: int fromPage>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i13 = r2.<java.awt.JobAttributes: int maxPage>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i15 = r2.<java.awt.JobAttributes: int minPage>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r32 = r2.<java.awt.JobAttributes: java.awt.JobAttributes$MultipleDocumentHandlingType multipleDocumentHandling>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i17 = r2.<java.awt.JobAttributes: int prFirst>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i19 = r2.<java.awt.JobAttributes: int prLast>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r34 = r2.<java.awt.JobAttributes: java.awt.JobAttributes$SidesType sides>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i21 = r2.<java.awt.JobAttributes: int toPage>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.PageAttributes;;set;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.PageAttributes: java.awt.PageAttributes$ColorType color>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<java.awt.PageAttributes: java.awt.PageAttributes$MediaType media>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.PageAttributes: java.awt.PageAttributes$OrientationRequestedType orientationRequested>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.awt.PageAttributes: java.awt.PageAttributes$OriginType origin>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.awt.PageAttributes: java.awt.PageAttributes$PrintQualityType printQuality>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.awt.PageAttributes: int[] printerResolution>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.PageAttributes;;setColor;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.PageAttributes;;setMedia;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.PageAttributes;;setOrientationRequested;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.PageAttributes;;setOrigin;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.PageAttributes;;setPrintQuality;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.PageAttributes;;equals;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.awt.PageAttributes: java.awt.PageAttributes$ColorType color>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<java.awt.PageAttributes: java.awt.PageAttributes$MediaType media>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r8 = r2.<java.awt.PageAttributes: java.awt.PageAttributes$OrientationRequestedType orientationRequested>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r10 = r2.<java.awt.PageAttributes: java.awt.PageAttributes$OriginType origin>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r12 = r2.<java.awt.PageAttributes: java.awt.PageAttributes$PrintQualityType printQuality>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r14 = r2.<java.awt.PageAttributes: int[] printerResolution>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r16 = r2.<java.awt.PageAttributes: int[] printerResolution>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r18 = r2.<java.awt.PageAttributes: int[] printerResolution>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.datatransfer.Clipboard;;isDataFlavorAvailable;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.Clipboard;;getData;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.EventQueue;;postEventPrivate;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.AWTEvent: boolean isPosted> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;getPriority;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$l0 = virtualinvoke r1.<sun.awt.PeerEvent: long getFlags()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$l3 = virtualinvoke r1.<sun.awt.PeerEvent: long getFlags()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$l6 = virtualinvoke r1.<sun.awt.PeerEvent: long getFlags()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i9 = virtualinvoke r0.<java.awt.AWTEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;postEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;coalescePaintEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.event.PaintEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.event.PaintEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;mergePaintEvents;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.event.PaintEvent: java.awt.Rectangle getUpdateRect()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<java.awt.event.PaintEvent: java.awt.Rectangle getUpdateRect()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;coalesceMouseEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;coalescePeerEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<sun.awt.PeerEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r9 = virtualinvoke r1.<sun.awt.PeerEvent: sun.awt.PeerEvent coalesceEvents(sun.awt.PeerEvent)>($r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;coalesceOtherEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;coalesceEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;cacheEQItem;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<sun.awt.EventQueueItem: java.awt.AWTEvent event>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<sun.awt.EventQueueItem: java.awt.AWTEvent event>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<sun.awt.EventQueueItem: java.awt.AWTEvent event>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<sun.awt.EventQueueItem: java.awt.AWTEvent event>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.EventQueue;;uncacheEQItem;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r1.<sun.awt.EventQueueItem: java.awt.AWTEvent event>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<sun.awt.EventQueueItem: java.awt.AWTEvent event>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<sun.awt.EventQueueItem: java.awt.AWTEvent event>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.EventQueue;;eventToCacheIndex;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.awt.AWTEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;dispatchEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.AWTEvent: java.security.AccessControlContext getAccessControlContext()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;getAccessControlContextFrom;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r2 = virtualinvoke $r1.<java.awt.Component: java.security.AccessControlContext getAccessControlContext()>();;pattern detected param  r0 must not be null it define a local $r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r2 = virtualinvoke $r3.<java.awt.MenuComponent: java.security.AccessControlContext getAccessControlContext()>();;pattern detected param  r0 must not be null it define a local $r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r2 = virtualinvoke $r4.<java.awt.TrayIcon: java.security.AccessControlContext getAccessControlContext()>();;pattern detected param  r0 must not be null it define a local $r4which used in  InvokeExpr 
java.awt.EventQueue;;dispatchEventImpl;;2
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.AWTEvent: boolean isPosted> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;interfaceinvoke $r3.<java.awt.ActiveEvent: void dispatch()>();;pattern detected param  r1 must not be null it define a local $r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.AWTEvent: void dispatched()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r4.<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)>(r1);;pattern detected param  r2 must not be null it define a local $r4which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r5.<java.awt.MenuComponent: void dispatchEvent(java.awt.AWTEvent)>(r1);;pattern detected param  r2 must not be null it define a local $r5which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke $r6.<java.awt.TrayIcon: void dispatchEvent(java.awt.AWTEvent)>(r1);;pattern detected param  r2 must not be null it define a local $r6which used in  InvokeExpr 
java.awt.EventQueue;;push;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.EventQueue: java.awt.EventDispatchThread dispatchThread> = $r18;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r1.<java.awt.EventQueue: void postEventPrivate(java.awt.AWTEvent)>($r21);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.EventQueue: java.awt.EventQueue previousQueue> = r3;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.EventQueue;;setCurrentEventAndMostRecentTimeImpl;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;l0 = virtualinvoke r2.<java.awt.event.InputEvent: long getWhen()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;l0 = virtualinvoke r9.<java.awt.event.InputMethodEvent: long getWhen()>();;pattern detected param  r1 must not be null it define a local r9which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;l0 = virtualinvoke r10.<java.awt.event.ActionEvent: long getWhen()>();;pattern detected param  r1 must not be null it define a local r10which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;l0 = virtualinvoke r11.<java.awt.event.InvocationEvent: long getWhen()>();;pattern detected param  r1 must not be null it define a local r11which used in  InvokeExpr 
java.awt.EventQueue;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = specialinvoke r0.<java.awt.EventQueue: boolean noEvents()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;access$100;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.EventQueue: void wakeup(boolean)>(z0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;access$200;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.EventQueue: void dispatchEventImpl(java.awt.AWTEvent,java.lang.Object)>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.EventQueue;;access$400;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.EventQueue: java.lang.ThreadGroup threadGroup>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.EventQueue;;access$500;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.EventQueue: java.lang.String name>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.EventQueue;;access$600;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.EventQueue: java.lang.ClassLoader classLoader>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.dnd.DragGestureEvent;;<init>;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r10;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.dnd.DragGestureRecognizer: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.dnd.DragGestureRecognizer: java.awt.dnd.DragSource getDragSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragGestureEvent;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragGestureEvent;;readObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragGestureRecognizer;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.dnd.DragGestureRecognizer;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragGestureRecognizer;;readObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragSource;;writeObject;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragSource;;readObject;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.FocusTraversalPolicy;;getInitialComponent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.geom.Dimension2D;;setSize;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Dimension2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Dimension2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;setRect;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;intersectsLine;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Line2D: double getX1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Line2D: double getY1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Line2D: double getX2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Line2D: double getY2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;outcode;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;intersect;;3
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMinX()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMinY()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d8 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMaxX()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d10 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMaxY()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.Rectangle2D: void setFrame(double,double,double,double)>(d0, d1, $d12, $d13);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;union;;3
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMinX()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMinY()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d8 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMaxX()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d10 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getMaxY()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.Rectangle2D: void setFrameFromDiagonal(double,double,double,double)>(d0, d1, d2, d3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;add;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;add;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Rectangle2D;;equals;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.TextComponent;;eventEnabled;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.AWTEvent: int id>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.TextComponent;;processTextEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.TextEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.TextComponent;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.TextComponent;;readObject;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.RectangularShape;;setFrame;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Dimension2D: double getWidth()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Dimension2D: double getHeight()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.RectangularShape;;setFrame;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.RectangularShape;;setFrameFromDiagonal;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.RectangularShape;;setFrameFromCenter;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.RectangularShape;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.RectangularShape;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.RectangularShape;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.AWTEventMulticaster;;saveInternal;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.AWTEventMulticaster;;save;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.AWTEventMulticaster;;getListenerCount;;2
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.awt.AWTEventMulticaster: java.util.EventListener a>;;pattern detected param  r0 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.awt.AWTEventMulticaster: java.util.EventListener b>;;pattern detected param  r0 must not be null it define a local r2which used in  FieldRef 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.AWTEventMulticaster;;populateListenerArray;;2
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i0] = r1;;pattern detected param  r0 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = r2.<java.awt.AWTEventMulticaster: java.util.EventListener a>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.awt.AWTEventMulticaster: java.util.EventListener b>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.AWTEventMulticaster;;getListeners;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.AWTKeyStroke;;registerSubclass;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.AWTKeyStroke;;getAWTKeyStroke;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r1;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.AWTKeyStroke;;getAWTKeyStrokeForEvent;;1
class name;; * ;; * ;;r0;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r0.<java.awt.event.KeyEvent: int getModifiers()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c4 = virtualinvoke r0.<java.awt.event.KeyEvent: char getKeyChar()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r0.<java.awt.event.KeyEvent: int getModifiers()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.AWTKeyStroke;;getAWTKeyStroke;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r0 must not be null  otherwise an exception is thrown 
java.awt.AWTKeyStroke;;equals;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$c0 = r2.<java.awt.AWTKeyStroke: char keyChar>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i2 = r2.<java.awt.AWTKeyStroke: int keyCode>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$z1 = r2.<java.awt.AWTKeyStroke: boolean onKeyRelease>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i4 = r2.<java.awt.AWTKeyStroke: int modifiers>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.BasicStroke;;equals;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$f1 = r2.<java.awt.BasicStroke: float width>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i2 = r2.<java.awt.BasicStroke: int join>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$i4 = r2.<java.awt.BasicStroke: int cap>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$f3 = r2.<java.awt.BasicStroke: float miterlimit>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$f5 = r2.<java.awt.BasicStroke: float dash_phase>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r5 = r2.<java.awt.BasicStroke: float[] dash>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<java.awt.BasicStroke: float[] dash>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.geom.AffineTransform;;<init>;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.geom.AffineTransform: int state>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.geom.AffineTransform: int type>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.AffineTransform;;<init>;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f2 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f3 = r1[3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f4 = r1[4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f5 = r1[5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;<init>;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r1[3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r1[4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r1[5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;getMatrix;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $d3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $d4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $d5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;setTransform;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;FieldRef for param;;$d0 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d1 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d2 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d3 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d4 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d5 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.geom.AffineTransform: int state>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.geom.AffineTransform: int type>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.AffineTransform;;concatenate;;1
class name;; * ;; * ;;r1;;36
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r1.<java.awt.geom.AffineTransform: int state>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d9 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d10 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d12 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d13 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d14 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.awt.geom.AffineTransform: int type>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d15 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d16 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d17 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d18 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.geom.AffineTransform: int type>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d19 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d20 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d21 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d22 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.geom.AffineTransform: int type>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d23 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d24 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d25 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d26 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d1 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d2 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d35 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d38 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d41 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d44 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d46 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d47 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d4 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d48 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d5 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d49 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d6 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d7 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.AffineTransform;;preConcatenate;;1
class name;; * ;; * ;;r1;;15
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r1.<java.awt.geom.AffineTransform: int state>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d8 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d9 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d11 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$d14 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d0 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d1 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d2 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d3 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d43 = r1.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d44 = r1.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d5 = r1.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d45 = r1.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d46 = r1.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;d6 = r1.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.AffineTransform;;transform;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.AffineTransform;;transform;;2
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r4 = r2[$i5];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[$i6] = r4;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r3 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;transform;;2
class name;; * ;; * ;;r2;;14
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f2;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i8] = $f3;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f6;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i10] = $f7;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f10;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i12] = $f11;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f14;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i14] = $f15;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f17;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i15] = $f19;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f21;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i17] = $f23;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f25;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i19] = $f27;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;14
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f4 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f5 = r1[i9];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f8 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f9 = r1[i11];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f12 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f13 = r1[i13];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f16 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f18 = r1[i16];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f20 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f22 = r1[i18];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f24 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f26 = r1[i20];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;transform;;2
class name;; * ;; * ;;r2;;14
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d11;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i8] = $d15;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d24;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i10] = $d27;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d35;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i12] = $d37;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d42;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i14] = $d43;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d50;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i15] = $d53;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d57;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i17] = $d59;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d63;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i19] = $d65;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;14
*;;*;;*;;*;;*;;ArrayRef for param;;d6 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d7 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d20 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d21 = r1[i9];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d32 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d33 = r1[i11];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d40 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d41 = r1[i13];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d48 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d51 = r1[i16];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d56 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d58 = r1[i18];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d62 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d64 = r1[i20];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;transform;;2
class name;; * ;; * ;;r2;;16
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d11;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i5] = $d15;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d24;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i7] = $d27;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d35;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i9] = $d37;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d42;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i11] = $d43;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d50;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i12] = $d53;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d57;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i14] = $d59;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d63;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i16] = $d65;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d66;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i18] = $d67;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;16
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f2 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f3 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f4 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f5 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f6 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f7 = r1[i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f8 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f9 = r1[i13];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f10 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f11 = r1[i15];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f12 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f13 = r1[i17];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f14 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f15 = r1[i19];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;transform;;2
class name;; * ;; * ;;r2;;16
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f0;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i5] = $f1;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f2;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i7] = $f3;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f4;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i9] = $f5;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f6;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i11] = $f7;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f8;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i12] = $f9;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f10;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i14] = $f11;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f12;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i16] = $f13;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $f14;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i18] = $f15;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;16
*;;*;;*;;*;;*;;ArrayRef for param;;d6 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d7 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d20 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d21 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d32 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d33 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d40 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d41 = r1[i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d48 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d51 = r1[i13];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d56 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d58 = r1[i15];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d62 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d64 = r1[i17];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d66 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d67 = r1[i19];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;inverseTransform;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.AffineTransform;;inverseTransform;;2
class name;; * ;; * ;;r2;;14
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d17;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i9] = $d21;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d35;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i12] = $d39;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d48;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i16] = $d49;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d54;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i20] = $d55;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d62;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i23] = $d65;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d69;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i27] = $d71;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d75;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i29] = $d77;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;14
*;;*;;*;;*;;*;;ArrayRef for param;;$d12 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d13 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d30 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d31 = r1[i11];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d44 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d46 = r1[i15];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d52 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d53 = r1[i19];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d60 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d63 = r1[i24];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d68 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d70 = r1[i28];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d74 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d76 = r1[i30];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;deltaTransform;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.AffineTransform;;deltaTransform;;2
class name;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d8;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i8] = $d11;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d16;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i10] = $d17;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i1] = $d21;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i11] = $d23;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;d4 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d5 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d14 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d15 = r1[i9];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d20 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d22 = r1[i12];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.AffineTransform;;equals;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d1 = r2.<java.awt.geom.AffineTransform: double m00>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d3 = r2.<java.awt.geom.AffineTransform: double m01>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d5 = r2.<java.awt.geom.AffineTransform: double m02>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d7 = r2.<java.awt.geom.AffineTransform: double m10>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d9 = r2.<java.awt.geom.AffineTransform: double m11>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$d11 = r2.<java.awt.geom.AffineTransform: double m12>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.geom.AffineTransform;;writeObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.AffineTransform;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.BorderLayout;;addLayoutComponent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Component: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.BorderLayout;;addLayoutComponent;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r2.<java.awt.Component: java.lang.Object getTreeLock()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.BorderLayout;;removeLayoutComponent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.Component: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.BorderLayout;;getLayoutComponent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.BorderLayout;;minimumLayoutSize;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r28 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.BorderLayout;;preferredLayoutSize;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r28 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.BorderLayout;;layoutContainer;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.awt.Container: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Polygon;;calculateBounds;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;i6 = r1[i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;i7 = r2[i5];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.Polygon;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.Point: int x>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.Point: int y>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.Polygon;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Polygon;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Polygon;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;addLayoutComponent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Component: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;addLayoutComponent;;1
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r2.<java.awt.Component: java.lang.Object getTreeLock()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.Component: void setVisible(boolean)>(0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;removeLayoutComponent;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.Component: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Component: boolean isVisible()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.awt.Component: java.awt.Container getParent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.awt.Component: java.awt.Container getParent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;preferredLayoutSize;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;minimumLayoutSize;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;layoutContainer;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i16 = r1.<java.awt.Container: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;checkLayout;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.Container: java.awt.LayoutManager getLayout()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;first;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Container: void validate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;next;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>($i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Container: void validate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;previous;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>($i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Container: void validate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;showDefaultComponent;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Container: void validate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;last;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>($i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Container: void validate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;show;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r12 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Container: void validate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.CardLayout;;writeObject;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r11 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.EventDispatchThread;;pumpEventsForFilter;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<java.awt.Conditional: boolean evaluate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;setLine;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;setLine;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Line2D: double getX1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Line2D: double getY1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Line2D: double getX2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Line2D: double getY2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;relativeCCW;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;intersectsLine;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Line2D: double getX1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Line2D: double getY1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Line2D: double getX2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Line2D: double getY2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;ptSegDistSq;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;ptSegDist;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;ptLineDistSq;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;ptLineDist;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Line2D;;intersects;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: boolean intersectsLine(double,double,double,double)>($d0, $d1, $d2, $d3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBuffer;;<init>;;1
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i4 = r2[0];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferByte;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferByte;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferUShort;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.DataBufferUShort;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.DataBufferUShort;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.DataBufferUShort;;<init>;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i4 = r2[i1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.DataBufferInt;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferInt;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;getCurrentKeyboardFocusManager;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<sun.awt.AppContext: java.lang.Object get(java.lang.Object)>(class "java/awt/KeyboardFocusManager");;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<sun.awt.AppContext: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "java/awt/KeyboardFocusManager", r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;initFocusTraversalKeysSet;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;setDefaultFocusTraversalPolicy;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.KeyboardFocusManager;;setDefaultFocusTraversalKeys;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.KeyboardFocusManager;;redispatchEvent;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.AWTEvent: boolean focusManagerIsDispatching> = 1;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.AWTEvent: boolean focusManagerIsDispatching> = 0;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.KeyboardFocusManager;;shouldNativelyFocusHeavyweight;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r47 = r1.<java.awt.Component: sun.awt.AppContext appContext>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.KeyboardFocusManager;;isAutoFocusTransferEnabledFor;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r0.<java.awt.Component: boolean isAutoFocusTransferOnDisposal()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;dispatchAndCatchException;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;handleException;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.lang.Throwable: void printStackTrace()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;retargetUnexpectedFocusEvent;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r0.<java.awt.event.FocusEvent: java.awt.Component getComponent()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r0.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.awt.event.FocusEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.awt.event.FocusEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;retargetFocusGained;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.awt.event.FocusEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.awt.event.FocusEvent: java.awt.Component getComponent()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r0.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;retargetFocusLost;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.awt.event.FocusEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r0.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z5 = virtualinvoke r0.<java.awt.event.FocusEvent: boolean isTemporary()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.KeyboardFocusManager;;retargetFocusEvent;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r0.<java.awt.AWTEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r20 = virtualinvoke r3.<java.awt.event.FocusEvent: java.awt.Component getComponent()>();;pattern detected param  r0 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r21 = virtualinvoke r3.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r0 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.awt.AWTEvent: int getID()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.SequencedEvent;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.SequencedEvent;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.SequencedEvent: java.awt.AWTEvent nested>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.font.TextLayout;;<init>;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;<init>;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;singleFont;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.font.TextLine: int characterCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;paragraphInit;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<sun.font.CoreMetrics: float[] baselineOffsets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.font.TextLayout;;fastInit;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r2.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(char[],int,int,java.awt.font.FontRenderContext)>(r1, 0, $i1, r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;standardInit;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;checkTextHit;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;getCaretInfo;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d13 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;getCaretInfoTestInternal;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.font.TextHitInfo: int getCharIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;z0 = virtualinvoke r1.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;hitToCaret;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.font.TextHitInfo: int getCharIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;getNextRightHit;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;getNextLeftHit;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;getVisualOtherHit;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.font.TextHitInfo: int getCharIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z9 = virtualinvoke r1.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;getCaretPath;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d12 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d13 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;pathToShape;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r0[1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.TextLayout;;getCaretShape;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;getStrongHit;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.font.TextHitInfo: int getCharIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r2.<java.awt.font.TextHitInfo: int getCharIndex()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r2.<java.awt.font.TextHitInfo: boolean isLeadingEdge()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;getCaretShapes;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r12;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r11;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;boundingShape;;2
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r1[$i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r1[$i11];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r2[1];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r2[$i8];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d6 = r2[0];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r2[$i14];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d8 = r2[i3];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d9 = r2[$i17];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.font.TextLayout;;leftShape;;1
class name;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d8 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d10 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;rightShape;;1
class name;; * ;; * ;;r1;;14
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d8 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d10 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d13 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d14 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d16 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d17 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d19 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;getVisualHighlightShape;;1
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r3 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;getLogicalHighlightShape;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;caretToPointDistance;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$f6 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f8 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.font.TextLayout;;hitTestChar;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d8 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;draw;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.TextLayout;;getBaselineFromGraphic;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.awt.font.GraphicAttribute: int getAlignment()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.TextLayout;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = specialinvoke r0.<java.awt.font.TextLayout: java.awt.font.TextHitInfo getStrongHit(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo)>(r1, r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.dnd.DropTargetDragEvent;;<init>;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.dnd.DropTargetEvent;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.dnd.DropTargetContext: java.awt.dnd.DropTarget getDropTarget()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DropTargetDropEvent;;<init>;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.TrayIcon;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.TrayIcon;;setImage;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.TrayIcon;;displayMessage;;3
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r3.<java.awt.TrayIcon$MessageType: java.lang.String name()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.TrayIcon;;processEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.TrayIcon;;processMouseEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.TrayIcon;;processMouseMotionEvent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.SystemTray;;add;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.SystemTray;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.Robot;;init;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.GraphicsDevice: java.awt.GraphicsConfiguration getDefaultConfiguration()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.Robot;;checkValidRect;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.Rectangle: int width>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<java.awt.Rectangle: int height>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.DefaultFocusTraversalPolicy;;accept;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Component: boolean isVisible()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.Component: boolean isDisplayable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.Component: boolean isEnabled()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.Component: java.awt.Container getParent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;z7 = virtualinvoke r1.<java.awt.Component: boolean isFocusable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z8 = virtualinvoke r1.<java.awt.Component: boolean isFocusTraversableOverridden()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Component: java.awt.peer.ComponentPeer getPeer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ContainerOrderFocusTraversalPolicy;;getComponentIndex;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.util.List: int indexOf(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.ContainerOrderFocusTraversalPolicy;;enumerateCycle;;2
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Container: boolean isVisible()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.Container: boolean isDisplayable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component[] getComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.ContainerOrderFocusTraversalPolicy;;getTopmostProvider;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.awt.Component: java.awt.Container getParent()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.ContainerOrderFocusTraversalPolicy;;getComponentDownCycle;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z1 = virtualinvoke r3.<java.awt.Container: boolean isFocusCycleRoot()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r4 = virtualinvoke r3.<java.awt.Container: java.awt.FocusTraversalPolicy getFocusTraversalPolicy()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z4 = virtualinvoke r3.<java.awt.Container: boolean isFocusTraversalPolicyProvider()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r13 = virtualinvoke r3.<java.awt.Container: java.awt.FocusTraversalPolicy getFocusTraversalPolicy()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r15 = virtualinvoke r3.<java.awt.Container: java.awt.FocusTraversalPolicy getFocusTraversalPolicy()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
java.awt.ContainerOrderFocusTraversalPolicy;;getFirstComponent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r13;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.ContainerOrderFocusTraversalPolicy;;getLastComponent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r13;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.ContainerOrderFocusTraversalPolicy;;accept;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.Component: boolean canBeFocusOwner()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.Component: java.awt.Container getParent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;restoreFocus;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.event.FocusEvent: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;restoreFocus;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.event.WindowEvent: java.awt.Window getOppositeWindow()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.event.WindowEvent: java.awt.Window getOppositeWindow()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;doRestoreFocus;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.Component: boolean isShowing()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.Component: boolean canBeFocusOwner()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = virtualinvoke r1.<java.awt.Component: boolean requestFocus(boolean,sun.awt.CausedFocusEvent$Cause)>(0, $r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Component: java.awt.Component getNextFocusCandidate()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;sendMessage;;2
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r3 = r0.<java.awt.Component: sun.awt.AppContext appContext>;;pattern detected param  r0 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.AWTEvent: boolean isPosted> = 1;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.DefaultKeyboardFocusManager;;dispatchEvent;;1
class name;; * ;; * ;;r1;;19
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.AWTEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r5 = virtualinvoke r3.<java.awt.event.WindowEvent: java.awt.Window getWindow()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r32 = virtualinvoke r3.<java.awt.event.WindowEvent: java.awt.Window getOppositeWindow()>();;pattern detected param  r1 must not be null it define a local r3which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r36 = virtualinvoke r34.<java.awt.event.WindowEvent: java.awt.Window getWindow()>();;pattern detected param  r1 must not be null it define a local r34which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r45 = virtualinvoke r40.<java.awt.event.FocusEvent: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null it define a local r40which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z17 = virtualinvoke r40.<java.awt.event.FocusEvent: boolean isTemporary()>();;pattern detected param  r1 must not be null it define a local r40which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z19 = virtualinvoke r40.<java.awt.event.FocusEvent: boolean isTemporary()>();;pattern detected param  r1 must not be null it define a local r40which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z27 = virtualinvoke r40.<java.awt.event.FocusEvent: boolean isTemporary()>();;pattern detected param  r1 must not be null it define a local r40which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r61 = virtualinvoke r40.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r1 must not be null it define a local r40which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z29 = virtualinvoke r40.<java.awt.event.FocusEvent: boolean isTemporary()>();;pattern detected param  r1 must not be null it define a local r40which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r68 = virtualinvoke r63.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r1 must not be null it define a local r63which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z34 = virtualinvoke r63.<java.awt.event.FocusEvent: boolean isTemporary()>();;pattern detected param  r1 must not be null it define a local r63which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r63.<java.awt.event.FocusEvent: void setSource(java.lang.Object)>(r64);;pattern detected param  r1 must not be null it define a local r63which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$r77 = virtualinvoke r63.<java.awt.event.FocusEvent: java.awt.Component getOppositeComponent()>();;pattern detected param  r1 must not be null it define a local r63which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r81 = virtualinvoke r1.<java.awt.AWTEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r79.<java.awt.event.WindowEvent: void setSource(java.lang.Object)>(r80);;pattern detected param  r1 must not be null it define a local r79which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r85 = virtualinvoke r83.<java.awt.event.WindowEvent: java.awt.Window getWindow()>();;pattern detected param  r1 must not be null it define a local r83which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r87 = virtualinvoke r83.<java.awt.event.WindowEvent: java.awt.Window getOppositeWindow()>();;pattern detected param  r1 must not be null it define a local r83which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;virtualinvoke r83.<java.awt.event.WindowEvent: void setSource(java.lang.Object)>(r84);;pattern detected param  r1 must not be null it define a local r83which used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;dispatchKeyEvent;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r1.<java.awt.AWTEvent: boolean isPosted>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.event.KeyEvent: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = virtualinvoke r1.<java.awt.event.KeyEvent: boolean isConsumed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.event.KeyEvent: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r12 = virtualinvoke r1.<java.awt.event.KeyEvent: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;postProcessKeyEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.KeyEvent: boolean isConsumed()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.event.KeyEvent: java.awt.Component getComponent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;typeAheadAssertions;;1
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r2.<java.awt.AWTEvent: int getID()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r2.<java.awt.AWTEvent: boolean isPosted>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$l2 = virtualinvoke r3.<java.awt.event.KeyEvent: long getWhen()>();;pattern detected param  r2 must not be null it define a local r3which used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;preDispatchKeyEvent;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;FieldRef for param;;$z0 = r1.<java.awt.AWTEvent: boolean isPosted>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.event.KeyEvent: void setSource(java.lang.Object)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.event.KeyEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.event.KeyEvent: java.lang.Object getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.event.KeyEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;consumeTraversalKey;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.event.KeyEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.event.KeyEvent: boolean isActionKey()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;consumeProcessedKeyEvent;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.event.KeyEvent: void consume()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;processKeyEvent;;2
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = virtualinvoke r1.<java.awt.Component: boolean getFocusTraversalKeysEnabled()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.Component: java.util.Set getFocusTraversalKeys(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.Component: java.util.Set getFocusTraversalKeys(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r1.<java.awt.Component: java.util.Set getFocusTraversalKeys(int)>(2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$z12 = virtualinvoke $r8.<java.awt.Container: boolean isFocusCycleRoot()>();;pattern detected param  r1 must not be null it define a local $r8which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r9 = virtualinvoke r1.<java.awt.Component: java.util.Set getFocusTraversalKeys(int)>(3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r2.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z4 = virtualinvoke r2.<java.awt.event.KeyEvent: boolean isConsumed()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r2.<java.awt.event.KeyEvent: int getID()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.DefaultKeyboardFocusManager: void consumeNextKeyTyped(java.awt.event.KeyEvent)>(r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.DefaultKeyboardFocusManager;;access$108;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.DefaultKeyboardFocusManager: int inSendMessage>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.DefaultKeyboardFocusManager: int inSendMessage> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.DefaultKeyboardFocusManager;;access$110;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<java.awt.DefaultKeyboardFocusManager: int inSendMessage>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.DefaultKeyboardFocusManager: int inSendMessage> = $i1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.dnd.DragSourceContext;;<init>;;4
class name;; * ;; * ;;r5;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r18;;pattern detected param  r5 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r6;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r17;;pattern detected param  r6 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.dnd.DragSourceContext;;dragEnter;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.dnd.DragSourceDragEvent: int getTargetActions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragSourceContext;;dragOver;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.dnd.DragSourceDragEvent: int getTargetActions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragSourceContext;;dropActionChanged;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.dnd.DragSourceDragEvent: int getTargetActions()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragSourceContext;;writeObject;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.dnd.DragSourceContext;;readObject;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.WaitDispatchSupport;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r6;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.WaitDispatchSupport;;access$100;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.WaitDispatchSupport: java.util.concurrent.atomic.AtomicBoolean keepBlockingEDT>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$200;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.WaitDispatchSupport: java.util.concurrent.atomic.AtomicBoolean keepBlockingCT>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$300;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.WaitDispatchSupport: java.awt.Conditional extCondition>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$400;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.WaitDispatchSupport: java.util.TimerTask timerTask>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$402;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;r0.<java.awt.WaitDispatchSupport: java.util.TimerTask timerTask> = r1;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$500;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.WaitDispatchSupport: java.awt.EventFilter filter>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$600;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.WaitDispatchSupport: java.awt.Conditional condition>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$700;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.WaitDispatchSupport: java.awt.EventDispatchThread dispatchThread>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.WaitDispatchSupport;;access$800;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.WaitDispatchSupport: void wakeupEDT()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.FlowLayout;;preferredLayoutSize;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r11 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.FlowLayout;;minimumLayoutSize;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r11 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.FlowLayout;;moveComponents;;3
class name;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$i17 = r2[i10];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i18 = r2[i10];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i25 = r2[i24];;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i28 = r2[i24];;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i19 = r3[i10];;pattern detected param  r3 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i24);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i33 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.FlowLayout;;layoutContainer;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.FlowLayout;;readObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;computePixelBounds;;1
class name;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i3, $i7, 1, r1, 0, i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r0.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i5, $i10, 1, r3, 0, i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i16 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(i2, i15);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i18 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(i4, i17);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;applyFunctionAtIndex;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r1.<java.awt.font.TextLine$Function: float computeFunction(java.awt.font.TextLine,int,int)>(r0, i2, $i6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;draw;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r10 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d4, $d7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>(r10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;fastCreateTextLine;;1
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r20 = r3.<sun.font.CoreMetrics: float[] baselineOffsets>;;pattern detected param  r3 must not be null  because used in  FieldRef 
java.awt.font.TextLine;;createComponentsOnRun;;3
class name;; * ;; * ;;r8;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r8[$i9] = r10;;pattern detected param  r8 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r10 = virtualinvoke r3.<sun.font.TextLabelFactory: sun.font.ExtendedTextLabel createExtended(java.awt.Font,sun.font.CoreMetrics,sun.font.Decoration,int,int)>(r4, r5, r7, i5, $i7);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r4;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r9 = virtualinvoke r4.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(char[],int,int,java.awt.font.FontRenderContext)>(r0, i5, i4, r6);;pattern detected param  r4 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;getComponents;;2
class name;; * ;; * ;;r4;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r4.<sun.font.TextLabelFactory: java.awt.font.FontRenderContext getFontRenderContext()>();;pattern detected param  r4 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r0.<java.awt.font.StyledParagraph: int getRunLimit(int)>(i3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r0.<java.awt.font.StyledParagraph: sun.font.Decoration getDecorationAt(int)>(i3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r8 = virtualinvoke r0.<java.awt.font.StyledParagraph: java.lang.Object getFontOrGraphicAt(int)>(i3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;createLineFromText;;1
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<sun.font.TextLabelFactory: void setLineContext(int,int)>(0, $i0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<sun.font.TextLabelFactory: java.text.Bidi getLineBidi()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r2.<sun.font.TextLabelFactory: java.awt.font.FontRenderContext getFontRenderContext()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;computeComponentOrder;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.TextLine;;advanceToFirstFont;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;c0 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char first()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getRunLimit()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c0 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>($i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;getNormalizedOffsets;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r0[b0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f0 = r0[b0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f2 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.TextLine;;getFontAtCurrentPos;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;getAdvanceBetween;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.TextLine;;access$100;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.font.TextLine: sun.font.TextLineComponent[] fComponents>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.font.TextLine;;access$200;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = specialinvoke r0.<java.awt.font.TextLine: int getComponentVisualIndex(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.TextLine;;access$300;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<java.awt.font.TextLine: float[] locs>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.font.TextLine;;access$400;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = specialinvoke r0.<java.awt.font.TextLine: float getComponentShift(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.NumericShaper;;getContextualShaper;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.NumericShaper;;shape;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.font.NumericShaper;;checkParams;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.font.NumericShaper;;shapeNonContextually;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;c6 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i4] = $c13;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.font.NumericShaper;;shapeContextually;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;c8 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i6] = $c15;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.font.NumericShaper;;shapeContextually;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$c7 = virtualinvoke r2.<java.awt.font.NumericShaper$Range: char getNumericBase()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;c6 = r1[i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i5] = $c10;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.font.NumericShaper;;search;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r0[$i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i11 = r0[$i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.NumericShaper;;writeObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TransformAttribute;;writeObject;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TransformAttribute;;equals;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.awt.font.TransformAttribute: java.awt.geom.AffineTransform transform>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<java.awt.font.TransformAttribute: java.awt.geom.AffineTransform transform>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.geom.Path2D;;append;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = interfaceinvoke r1.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;contains;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r0.<java.awt.geom.PathIterator: int getWindingRule()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;contains;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<java.awt.geom.PathIterator: int getWindingRule()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;intersects;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<java.awt.geom.PathIterator: int getWindingRule()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;writeObject;;1
class name;; * ;; * ;;r1;;11
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeByte(int)>($b5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeByte(int)>($b8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeByte(int)>(b4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeDouble(double)>($d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeDouble(double)>($d1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFloat(float)>($f0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeFloat(float)>($f1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeByte(int)>(97);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Path2D;;readObject;;1
class name;; * ;; * ;;r1;;11
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: byte readByte()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$b6 = virtualinvoke r1.<java.io.ObjectInputStream: byte readByte()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;b2 = virtualinvoke r1.<java.io.ObjectInputStream: byte readByte()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.io.ObjectInputStream: double readDouble()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.io.ObjectInputStream: double readDouble()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r1.<java.io.ObjectInputStream: float readFloat()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f1 = virtualinvoke r1.<java.io.ObjectInputStream: float readFloat()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$b12 = virtualinvoke r1.<java.io.ObjectInputStream: byte readByte()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GradientPaintContext;;getCachedRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r0.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.GradientPaintContext;;putCachedRaster;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GradientPaintContext;;<init>;;6
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r4;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r9 = virtualinvoke r4.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();;pattern detected param  r4 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r20 = virtualinvoke r4.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, null);;pattern detected param  r4 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r5;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i13 = virtualinvoke r5.<java.awt.Color: int getRGB()>();;pattern detected param  r5 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r6;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r6.<java.awt.Color: int getRGB()>();;pattern detected param  r6 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i9 = virtualinvoke r12.<java.awt.image.DirectColorModel: int getAlphaMask()>();;pattern detected param  r1 must not be null it define a local r12which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i24 = virtualinvoke r12.<java.awt.image.DirectColorModel: int getRedMask()>();;pattern detected param  r1 must not be null it define a local r12which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i25 = virtualinvoke r12.<java.awt.image.DirectColorModel: int getGreenMask()>();;pattern detected param  r1 must not be null it define a local r12which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i26 = virtualinvoke r12.<java.awt.image.DirectColorModel: int getBlueMask()>();;pattern detected param  r1 must not be null it define a local r12which used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.GradientPaintContext;;cycleFillRaster;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i10] = $i12;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.GradientPaintContext;;clipFillRaster;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i7] = i5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i10] = $i12;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i14] = i13;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.DirectColorModel;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r1.<java.awt.color.ColorSpace: float getMinValue(int)>(i11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f1 = virtualinvoke r1.<java.awt.color.ColorSpace: float getMaxValue(int)>(i11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DirectColorModel;;getDataElement;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i5 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.DirectColorModel;;getDataElements;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i5 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.DirectColorModel;;coerceData;;1
class name;; * ;; * ;;r1;;19
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.WritableRaster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.WritableRaster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.WritableRaster: int[] getPixel(int,int,int[])>(i6, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i6, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i6, i4, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.WritableRaster: int[] getPixel(int,int,int[])>(i20, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i20, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i20, i4, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.WritableRaster: int[] getPixel(int,int,int[])>(i29, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i29, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i29, i4, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.WritableRaster: int[] getPixel(int,int,int[])>(i40, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i40, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.WritableRaster: int[] getPixel(int,int,int[])>(i47, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i47, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.WritableRaster: int[] getPixel(int,int,int[])>(i55, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i55, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DirectColorModel;;isCompatibleRaster;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.awt.image.Raster: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PackedColorModel;;<init>;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i10 = r2[i5];;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.awt.color.ColorSpace: java.lang.String getName(int)>(i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PackedColorModel;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<java.awt.color.ColorSpace: int getType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PackedColorModel;;isCompatibleSampleModel;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.image.SampleModel: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.image.SampleModel: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r3 = virtualinvoke r2.<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.image.PackedColorModel;;getAlphaRaster;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.image.WritableRaster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.awt.image.WritableRaster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>(i0, i1, $i4, $i5, i0, i1, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PackedColorModel;;equals;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;i0 = virtualinvoke r2.<java.awt.image.PackedColorModel: int getNumComponents()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i4 = virtualinvoke r2.<java.awt.image.PackedColorModel: int getMask(int)>(i1);;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.image.PackedColorModel;;createBitsArray;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i6 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r0[i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;<init>;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$b14 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b16 = r1[i13];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b17 = r1[i15];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b19 = r1[$i18];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;setRGBs;;3
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b10 = r2[i3];;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b11 = r3[i3];;pattern detected param  r3 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b9 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;setRGBs;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;i5 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;getReds;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = $b4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;getGreens;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = $b4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;getBlues;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = $b3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;getAlphas;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = $b4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;getDataElement;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$i4 = r1[$i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i7 = r1[$i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i11 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i13 = r1[$i12];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;getDataElements;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$i3 = r1[$i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i6 = r1[$i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i10 = r1[$i9];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i12 = r1[$i11];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.IndexColorModel;;isCompatibleRaster;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.image.Raster: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.IndexColorModel;;isCompatibleSampleModel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.image.SampleModel: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.SampleModel: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.IndexColorModel;;convertToIntDiscrete;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,int,int,java.lang.Object)>(i2, i3, i0, 1, r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.renderable.RenderContext;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.renderable.RenderContext;;setTransform;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GridBagLayout;;setConstraints;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r2.<java.awt.GridBagConstraints: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.GridBagLayout;;preInitMaximumArraySizes;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.Container: java.awt.Component[] getComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GridBagLayout;;GetLayoutInfo;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component[] getComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GridBagLayout;;calculateBaseline;;3
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r3.<java.awt.Dimension: int width>;;pattern detected param  r3 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r3.<java.awt.Dimension: int height>;;pattern detected param  r3 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i9 = virtualinvoke r1.<java.awt.Component: int getBaseline(int,int)>(i1, i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Component: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.Component: int getBaseline(int,int)>(i1, $i18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;21
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r2.<java.awt.GridBagConstraints: int anchor>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r2.<java.awt.GridBagConstraints: int ipadx>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r2.<java.awt.GridBagConstraints: int ipady>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int ascent> = $i9;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r2.<java.awt.GridBagConstraints: int ascent>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i3 = r2.<java.awt.GridBagConstraints: int ascent>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i11 = r2.<java.awt.GridBagConstraints: int ascent>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r2.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int descent> = $i14;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i15 = r2.<java.awt.GridBagConstraints: int ascent>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r2.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int ascent> = $i17;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: java.awt.Component$BaselineResizeBehavior baselineResizeBehavior> = $r7;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int centerPadding> = 0;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r2.<java.awt.GridBagConstraints: java.awt.Component$BaselineResizeBehavior baselineResizeBehavior>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int centerOffset> = $i20;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int centerPadding> = 1;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i22 = r2.<java.awt.GridBagConstraints: int centerOffset>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int centerOffset> = $i23;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int centerPadding> = 1;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.GridBagConstraints: int ascent> = -1;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.GridBagLayout;;AdjustForGravity;;2
class name;; * ;; * ;;r1;;24
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r11 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r13 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r14 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i25 = r1.<java.awt.GridBagConstraints: int fill>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i26 = r1.<java.awt.GridBagConstraints: int fill>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i28 = r1.<java.awt.GridBagConstraints: int minWidth>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i29 = r1.<java.awt.GridBagConstraints: int ipadx>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i32 = r1.<java.awt.GridBagConstraints: int minWidth>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i33 = r1.<java.awt.GridBagConstraints: int ipadx>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i35 = r1.<java.awt.GridBagConstraints: int minWidth>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i36 = r1.<java.awt.GridBagConstraints: int ipadx>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i38 = r1.<java.awt.GridBagConstraints: int fill>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i39 = r1.<java.awt.GridBagConstraints: int fill>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i41 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i42 = r1.<java.awt.GridBagConstraints: int ipady>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i45 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i46 = r1.<java.awt.GridBagConstraints: int ipady>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i48 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i49 = r1.<java.awt.GridBagConstraints: int ipady>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i51 = r1.<java.awt.GridBagConstraints: int anchor>;;pattern detected param  r1 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r2;;81
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i1 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i6;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r2.<java.awt.Rectangle: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i11;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r2.<java.awt.Rectangle: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int width> = $i16;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i17 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i19;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i20 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i24;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i27 = r2.<java.awt.Rectangle: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i31 = r2.<java.awt.Rectangle: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int width> = $i37;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i40 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i44 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i50;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i52 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i54;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i55 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i56;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i57 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i58;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i59 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i61;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i62 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i63;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i64 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i65;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i66 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i68;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i69 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i70;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i71 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i72;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i73 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i75;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i76 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i78;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i79 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i81;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i82 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i83;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i84 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i85;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i86 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i88;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i89 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i90;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i91 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i92;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i93 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i95;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i96 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i97;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i98 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i99;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i100 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i102;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i103 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i104;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i105 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i107;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i108 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i109;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i110 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i112;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i113 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i114;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i115 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i116;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i117 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i118;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i119 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i120;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i121 = r2.<java.awt.Rectangle: int x>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int x> = $i122;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i123 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i124;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.GridBagLayout;;alignOnBaseline;;2
class name;; * ;; * ;;r1;;39
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.GridBagConstraints: int ascent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.GridBagConstraints: java.awt.Component$BaselineResizeBehavior baselineResizeBehavior>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r1.<java.awt.GridBagConstraints: int tempHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r1.<java.awt.GridBagConstraints: int descent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.GridBagConstraints: boolean isVerticallyResizable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i17 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i19 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i3 = r1.<java.awt.GridBagConstraints: int ascent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i23 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i24 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i27 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r14 = r1.<java.awt.GridBagConstraints: java.awt.Component$BaselineResizeBehavior baselineResizeBehavior>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r17 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r18 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r19 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z3 = virtualinvoke r1.<java.awt.GridBagConstraints: boolean isVerticallyResizable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r21 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r22 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r23 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;i3 = r1.<java.awt.GridBagConstraints: int ascent>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i48 = r1.<java.awt.GridBagConstraints: int minWidth>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i49 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r24 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z4 = virtualinvoke r1.<java.awt.GridBagConstraints: boolean isVerticallyResizable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r26 = r1.<java.awt.GridBagConstraints: java.awt.Component$BaselineResizeBehavior baselineResizeBehavior>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i56 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r27 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r28 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i70 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r29 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i75 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i76 = r1.<java.awt.GridBagConstraints: int centerPadding>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i80 = r1.<java.awt.GridBagConstraints: int centerOffset>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i82 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i86 = r1.<java.awt.GridBagConstraints: int centerPadding>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i90 = r1.<java.awt.GridBagConstraints: int centerOffset>;;pattern detected param  r1 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r2;;18
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i18;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i19;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i22;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i28 = r2.<java.awt.Rectangle: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i29 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i31 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i38 = r2.<java.awt.Rectangle: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i47;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int width> = $i48;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i49;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i53;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i58 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i62;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i63 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i68 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i83;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i85 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i91;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.GridBagLayout;;alignAboveBaseline;;2
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i4 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.GridBagConstraints: boolean isVerticallyResizable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i15 = r1.<java.awt.GridBagConstraints: int ipady>;;pattern detected param  r1 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i11;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i13;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i16;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i17 = r2.<java.awt.Rectangle: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i18;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.GridBagLayout;;alignBelowBaseline;;2
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i5 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.GridBagConstraints: int tempY>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z2 = virtualinvoke r1.<java.awt.GridBagConstraints: boolean isVerticallyResizable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i7;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i10;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i12 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int height> = $i15;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.GridBagLayout;;centerVertically;;2
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.GridBagConstraints: boolean isVerticallyResizable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r5 = r1.<java.awt.GridBagConstraints: java.awt.Insets insets>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i6 = r1.<java.awt.GridBagConstraints: int minHeight>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.GridBagConstraints: int ipady>;;pattern detected param  r1 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r2.<java.awt.Rectangle: int y>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.Rectangle: int y> = $i12;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.GridBagLayout;;GetMinSize;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;FieldRef for param;;$i2 = r2.<java.awt.GridBagLayoutInfo: int width>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r6 = r2.<java.awt.GridBagLayoutInfo: int[] minWidth>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r2.<java.awt.GridBagLayoutInfo: int height>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r7 = r2.<java.awt.GridBagLayoutInfo: int[] minHeight>;;pattern detected param  r2 must not be null  because used in  FieldRef 
java.awt.GridBagLayout;;ArrangeGrid;;1
class name;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component[] getComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i8 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i10 = r1.<java.awt.Container: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i14 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i29 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i32 = r1.<java.awt.Container: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i49 = r1.<java.awt.Container: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i65 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.GridLayout;;preferredLayoutSize;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GridLayout;;minimumLayoutSize;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.GridLayout;;layoutContainer;;1
class name;; * ;; * ;;r1;;9
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.Container: java.lang.Object getTreeLock()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.Container: java.awt.Insets getInsets()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.Container: int getComponentCount()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i22 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i32 = r1.<java.awt.Container: int height>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i48 = r1.<java.awt.Container: int width>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.Container: java.awt.Component getComponent(int)>(i57);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.AreaAveragingScaleFilter;;accumPixels;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i22 = virtualinvoke r1.<java.awt.image.ColorModel: int getRGB(int)>(i15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ImageFilter;;setProperties;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ImageFilter;;resendTopDownLeftRight;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageProducer: void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ReplicateScaleFilter;;setProperties;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ReplicateScaleFilter;;setPixels;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b38 = r2[$i37];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.ReplicateScaleFilter;;setPixels;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i38 = r2[$i37];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.MultipleGradientPaint;;<init>;;5
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r3 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r4;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r10;;pattern detected param  r4 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r5;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r11;;pattern detected param  r5 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.LinearGradientPaintContext;;<init>;;2
class name;; * ;; * ;;r8;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r8.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r8 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r8.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r8 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r7;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r7 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r7 must not be null  because used in  InvokeExpr 
java.awt.LinearGradientPaintContext;;fillRaster;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i9] = $i10;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.MultipleGradientPaintContext;;<init>;;5
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r15;;pattern detected param  r3 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r4;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r16;;pattern detected param  r4 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r5;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r17;;pattern detected param  r5 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r6;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r18;;pattern detected param  r6 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;14
*;;*;;*;;*;;*;;FieldRef for param;;$r22 = r1.<java.awt.MultipleGradientPaint: java.lang.ref.SoftReference gradient>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r23 = r1.<java.awt.MultipleGradientPaint: java.lang.ref.SoftReference gradient>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r26 = r1.<java.awt.MultipleGradientPaint: java.lang.ref.SoftReference gradients>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r27 = r1.<java.awt.MultipleGradientPaint: java.lang.ref.SoftReference gradients>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.MultipleGradientPaint: java.awt.image.ColorModel model> = $r30;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.MultipleGradientPaint: float[] normalizedIntervals> = $r31;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.MultipleGradientPaint: boolean isSimpleLookup> = $z0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.MultipleGradientPaint: int fastGradientArraySize> = $i0;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.MultipleGradientPaint: java.lang.ref.SoftReference gradient> = $r32;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r1.<java.awt.MultipleGradientPaint: java.lang.ref.SoftReference gradients> = $r34;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r36 = r1.<java.awt.MultipleGradientPaint: java.awt.image.ColorModel model>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r37 = r1.<java.awt.MultipleGradientPaint: float[] normalizedIntervals>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$z2 = r1.<java.awt.MultipleGradientPaint: boolean isSimpleLookup>;;pattern detected param  r1 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r1.<java.awt.MultipleGradientPaint: int fastGradientArraySize>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.MultipleGradientPaintContext;;calculateLookupData;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.MultipleGradientPaintContext;;calculateSingleArrayGradient;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r1[$i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r23 = r1[$i19];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.MultipleGradientPaintContext;;calculateMultipleArrayGradient;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r1[$i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.MultipleGradientPaintContext;;interpolate;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i10] = $i36;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.MultipleGradientPaintContext;;getCachedRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r0.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.MultipleGradientPaintContext;;putCachedRaster;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.MouseInfo;;areScreenDevicesIndependent;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.image.SinglePixelPackedSampleModel;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;$i21 = r1[i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SinglePixelPackedSampleModel;;createSubsetSampleModel;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i6 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.SinglePixelPackedSampleModel;;getDataElements;;1
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i7);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i13 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i12);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i17);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;getPixel;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i9);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;getPixels;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i10 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i23);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;getSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.DataBuffer: int getElem(int)>($i8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;getSamples;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i9 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i17);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;setDataElements;;1
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>($i7, $s9);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>($i12, $i14);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>($i17, $i18);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;setPixel;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i13 = r1[i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>(i2);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>(i2, i3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;i12 = r1[$i26];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i10 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i21);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>($i31, i10);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.DataBuffer: int getElem(int)>($i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElem(int,int)>($i20, i17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.SinglePixelPackedSampleModel;;setSamples;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;i10 = r1[$i21];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i9 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i17);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>($i27, i26);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.RadialGradientPaint;;<init>;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.RadialGradientPaint;;<init>;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getCenterX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getCenterY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getCenterX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getCenterY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: boolean isEmpty()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.RadialGradientPaint;;createGradientTransform;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getCenterX()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getCenterY()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r0.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.RadialGradientPaintContext;;simpleNonCyclicFillRaster;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i14] = i6;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i19] = $i20;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i21] = i6;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.RadialGradientPaintContext;;cyclicCircularGradientFillRaster;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i13] = $i14;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.ScrollPaneAdjustable;;access$000;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;specialinvoke r0.<java.awt.ScrollPaneAdjustable: void setTypedValue(int,int)>(i0, i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.SplashScreen;;setImageURL;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.TexturePaint;;<init>;;1
class name;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.TexturePaintContext;;getContext;;3
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;FieldRef for param;;i0 = r3.<java.awt.Rectangle: int width>;;pattern detected param  r3 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r2.<java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>($r9);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r12 = virtualinvoke r2.<java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>($r11);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.TexturePaintContext;;isFilterableICM;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = virtualinvoke r1.<java.awt.image.IndexColorModel: int getMapSize()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
java.awt.TexturePaintContext;;isFilterableDCM;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i0 = virtualinvoke r1.<java.awt.image.DirectColorModel: int getAlphaMask()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i1 = virtualinvoke r1.<java.awt.image.DirectColorModel: int getRedMask()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i2 = virtualinvoke r1.<java.awt.image.DirectColorModel: int getGreenMask()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i3 = virtualinvoke r1.<java.awt.image.DirectColorModel: int getBlueMask()>();;pattern detected param  r0 must not be null it define a local r1which used in  InvokeExpr 
java.awt.TexturePaintContext;;<init>;;1
class name;; * ;; * ;;r2;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r2.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.geom.AffineTransform: void setToScale(double,double)>(0.0, 0.0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r2.<java.awt.geom.AffineTransform: double getScaleX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.AffineTransform: double getShearY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r2.<java.awt.geom.AffineTransform: double getShearX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = virtualinvoke r2.<java.awt.geom.AffineTransform: double getScaleY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d12 = virtualinvoke r2.<java.awt.geom.AffineTransform: double getTranslateX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d13 = virtualinvoke r2.<java.awt.geom.AffineTransform: double getTranslateY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.TexturePaintContext;;makeRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r13 = virtualinvoke r0.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.TexturePaintContext;;makeByteRaster;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r0.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.TexturePaintContext;;blend;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;i7 = r0[i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.image.ComponentSampleModel;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;<init>;;2
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;ArrayRef for param;;i5 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i5 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i10 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;orderBands;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i11 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i13 = r1[$i12];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ComponentSampleModel;;createSubsetSampleModel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i7 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ComponentSampleModel;;getDataElements;;1
class name;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i19 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i16, $i18);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i24 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i21, $i23);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i29 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i26, $i28);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r2.<java.awt.image.DataBuffer: float getElemFloat(int,int)>($i30, $i32);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r2.<java.awt.image.DataBuffer: double getElemDouble(int,int)>($i33, $i35);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;getPixel;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i15 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i12, $i14);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;getPixels;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i30 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i27, $i29);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;getSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.DataBuffer: int getElem(int,int)>($i6, $i13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;getSampleFloat;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;f0 = virtualinvoke r1.<java.awt.image.DataBuffer: float getElemFloat(int,int)>($i5, $i12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;getSampleDouble;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r1.<java.awt.image.DataBuffer: double getElemDouble(int,int)>($i5, $i12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;getSamples;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i23 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i22, i8);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;setDataElements;;1
class name;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i16, $i18, $s20);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i21, $i23, $i25);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i26, $i28, $i29);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElemFloat(int,int,float)>($i30, $i32, $f0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElemDouble(int,int,double)>($i33, $i35, $d0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;setPixel;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i14 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i11, $i13, $i14);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i27 = r1[$i26];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i23, $i25, $i27);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i6, $i13, i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElemFloat(int,int,float)>($i5, $i12, f0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElemDouble(int,int,double)>($i5, $i12, d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentSampleModel;;setSamples;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i22 = r1[$i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i21, i8, $i22);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.DataFlavor;;tryToLoadClass;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;<init>;;3
class name;; * ;; * ;;r4;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r4 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r7;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;initialize;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r5;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;getReaderForText;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.awt.datatransfer.Transferable: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.DataFlavor;;getParameter;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("humanPresentableName");;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.DataFlavor;;isMimeTypeEqual;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.datatransfer.DataFlavor;;isMimeTypeEqual;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r2 = r1.<java.awt.datatransfer.DataFlavor: java.awt.datatransfer.MimeType mimeType>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.datatransfer.DataFlavor;;writeExternal;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.DataFlavor;;readExternal;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r17 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.color.ICC_Profile;;getProfileDataFromStream;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i1, i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i24 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r2, i23, i22);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.color.ICC_Profile;;getDeferredInstance;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;FieldRef for param;;$r1 = r0.<sun.java2d.cmm.ProfileDeferralInfo: java.lang.String filename>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r0.<sun.java2d.cmm.ProfileDeferralInfo: int colorSpaceType>;;pattern detected param  r0 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i1 = r0.<sun.java2d.cmm.ProfileDeferralInfo: int colorSpaceType>;;pattern detected param  r0 must not be null  because used in  FieldRef 
java.awt.color.ICC_Profile;;write;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.color.ICC_Profile;;intFromBigEndian;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$b1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b5 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b10 = r0[$i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b15 = r0[$i14];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.color.ICC_Profile;;intToBigEndian;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $b3;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i4] = $b6;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i7] = $b9;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i10] = $b11;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.color.ICC_Profile;;shortFromBigEndian;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$b1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b5 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.color.ICC_Profile;;shortToBigEndian;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $b3;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i4] = $b5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.color.ICC_Profile;;isChildOf;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.color.ICC_Profile;;writeObject;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.color.ICC_Profile;;readObject;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeType;;<init>;;3
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r3.<java.awt.datatransfer.MimeTypeParameterList: java.lang.Object clone()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeType;;equals;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r4 = r2.<java.awt.datatransfer.MimeType: java.lang.String primaryType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r6 = r2.<java.awt.datatransfer.MimeType: java.lang.String subType>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r8 = r2.<java.awt.datatransfer.MimeType: java.awt.datatransfer.MimeTypeParameterList parameters>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.datatransfer.MimeType;;parse;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(59);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r14 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i3, i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r18 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeType;;writeExternal;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void writeUTF(java.lang.String)>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void writeByte(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void writeByte(int)>(0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void writeInt(int)>($i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectOutput: void write(byte[])>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeType;;readExternal;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<java.io.ObjectInput: int readInt()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.io.ObjectInput: void readFully(byte[])>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeType;;isValidToken;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeTypeParameterList;;equals;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i1 = virtualinvoke r2.<java.awt.datatransfer.MimeTypeParameterList: int size()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r12 = r2.<java.awt.datatransfer.MimeTypeParameterList: java.util.Hashtable parameters>;;pattern detected param  r1 must not be null it define a local r2which used in  FieldRef 
java.awt.datatransfer.MimeTypeParameterList;;parse;;1
class name;; * ;; * ;;r1;;12
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i5, i4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i12, i11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i13, i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeTypeParameterList;;get;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeTypeParameterList;;set;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeTypeParameterList;;remove;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeTypeParameterList;;skipWhiteSpace;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeTypeParameterList;;quote;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.MimeTypeParameterList;;unquote;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.StringSelection;;isDataFlavorSupported;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.StringSelection;;getTransferData;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>($r6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.SystemFlavorMap;;parseAndStoreReader;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.SystemFlavorMap;;continueLine;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.SystemFlavorMap;;loadConvert;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.lang.String: int length()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.SystemFlavorMap;;store;;1
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
java.awt.datatransfer.SystemFlavorMap;;decodeJavaMIMEType;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r0.<java.lang.String: int length()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.ImageGraphicAttribute;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.ImageGraphicAttribute;;draw;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r2, $i0, $i1, null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.LineBreakMeasurer;;<init>;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.LineBreakMeasurer;;insertChar;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.LineBreakMeasurer;;deleteChar;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextMeasurer;;initAll;;1
class name;; * ;; * ;;r1;;9
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: char first()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: char next()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.text.AttributedCharacterIterator: char first()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.text.AttributedCharacterIterator: char first()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r10 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextMeasurer;;insertChar;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;c3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextMeasurer;;deleteChar;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.StyledParagraph;;<init>;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getEndIndex()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.text.AttributedCharacterIterator: char first()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: int getRunLimit()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = interfaceinvoke r1.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.text.AttributedCharacterIterator: char setIndex(int)>(i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.StyledParagraph;;insertInto;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$i2 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i4 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $i5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.StyledParagraph;;insertChar;;2
class name;; * ;; * ;;r2;;10
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r2.<java.awt.font.StyledParagraph: sun.font.Decoration getDecorationAt(int)>(i2);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r2.<java.awt.font.StyledParagraph: java.lang.Object getFontOrGraphicAt(int)>(i2);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i7 = r2.<java.awt.font.StyledParagraph: int length>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.font.StyledParagraph: int length> = $i8;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r13 = r2.<java.awt.font.StyledParagraph: java.util.Vector decorations>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r14 = r2.<java.awt.font.StyledParagraph: int[] decorationStarts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r15 = r2.<java.awt.font.StyledParagraph: java.util.Vector decorations>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r16 = r2.<java.awt.font.StyledParagraph: java.util.Vector fonts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r17 = r2.<java.awt.font.StyledParagraph: int[] fontStarts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r18 = r2.<java.awt.font.StyledParagraph: java.util.Vector fonts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;c1 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: char setIndex(int)>(i0);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r7 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.StyledParagraph;;deleteFrom;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$i2 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i4 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[i1] = $i5;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.StyledParagraph;;deleteChar;;2
class name;; * ;; * ;;r2;;14
*;;*;;*;;*;;*;;FieldRef for param;;$r3 = r2.<java.awt.font.StyledParagraph: java.util.Vector decorations>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r2.<java.awt.font.StyledParagraph: java.util.Vector fonts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$i3 = r2.<java.awt.font.StyledParagraph: int length>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.font.StyledParagraph: int length> = $i4;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r2.<java.awt.font.StyledParagraph: int getRunLimit(int)>(i2);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r2.<java.awt.font.StyledParagraph: int getRunLimit(int)>($i7);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i9 = r2.<java.awt.font.StyledParagraph: int length>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;r2.<java.awt.font.StyledParagraph: int length> = $i10;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r8 = r2.<java.awt.font.StyledParagraph: java.util.Vector decorations>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r9 = r2.<java.awt.font.StyledParagraph: int[] decorationStarts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r10 = r2.<java.awt.font.StyledParagraph: java.util.Vector decorations>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r11 = r2.<java.awt.font.StyledParagraph: java.util.Vector fonts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r12 = r2.<java.awt.font.StyledParagraph: int[] fontStarts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
*;;*;;*;;*;;*;;FieldRef for param;;$r13 = r2.<java.awt.font.StyledParagraph: java.util.Vector fonts>;;pattern detected param  r2 must not be null  because used in  FieldRef 
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r0.<java.text.AttributedCharacterIterator: int getBeginIndex()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.StyledParagraph;;findRunContaining;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i2 = r0[i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.font.StyledParagraph;;addToVector;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r2[$i6] = i0;;pattern detected param  r2 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.Vector: java.lang.Object lastElement()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>(r0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.util.Vector: int size()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.StyledParagraph;;addInputMethodAttrs;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.StyledParagraph;;getGraphicOrFont;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.font.ShapeGraphicAttribute;;draw;;1
class name;; * ;; * ;;r1;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(int,int)>($i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(int,int)>($i3, $i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.Graphics2D: void translate(int,int)>($i7, $i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.font.TextJustifier;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;r2 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.Arc2D;;setArc;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r2.<java.awt.geom.Dimension2D: double getWidth()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r2.<java.awt.geom.Dimension2D: double getHeight()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.Arc2D;;setArc;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Arc2D;;setArc;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Arc2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Arc2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Arc2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Arc2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.Arc2D: double getAngleStart()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Arc2D: double getAngleExtent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;FieldRef for param;;$i0 = r1.<java.awt.geom.Arc2D: int type>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.Arc2D;;setArcByTangent;;3
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d15 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d18 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d12 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$d10 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d13 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d16 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d19 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d24 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d27 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.Arc2D;;setAngleStart;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Arc2D;;setAngles;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.Arc2D;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Arc2D;;equals;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d1 = virtualinvoke r2.<java.awt.geom.Arc2D: double getX()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d3 = virtualinvoke r2.<java.awt.geom.Arc2D: double getY()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d5 = virtualinvoke r2.<java.awt.geom.Arc2D: double getWidth()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d7 = virtualinvoke r2.<java.awt.geom.Arc2D: double getHeight()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d9 = virtualinvoke r2.<java.awt.geom.Arc2D: double getAngleStart()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d11 = virtualinvoke r2.<java.awt.geom.Arc2D: double getAngleExtent()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$i7 = virtualinvoke r2.<java.awt.geom.Arc2D: int getArcType()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.geom.ArcIterator;;<init>;;1
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Arc2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Arc2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.Arc2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d8 = virtualinvoke r1.<java.awt.geom.Arc2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d11 = virtualinvoke r1.<java.awt.geom.Arc2D: double getAngleStart()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d14 = virtualinvoke r1.<java.awt.geom.Arc2D: double getAngleExtent()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.awt.geom.Arc2D: int getArcType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.ArcIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $f6;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $f7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $f8;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $f9;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.ArcIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;10
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d12;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d13;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d14;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d25;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d32;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d43;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $d50;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $d54;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $d58;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.Area;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;FieldRef for local initialized from param;;$r3 = $r2.<java.awt.geom.Area: java.util.Vector curves>;;pattern detected param  r1 must not be null it define a local $r2which used in  FieldRef 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = interfaceinvoke r1.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Area;;pathToCurves;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = interfaceinvoke r0.<java.awt.geom.PathIterator: int getWindingRule()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z0 = interfaceinvoke r0.<java.awt.geom.PathIterator: boolean isDone()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = interfaceinvoke r0.<java.awt.geom.PathIterator: int currentSegment(double[])>(r3);;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r0.<java.awt.geom.PathIterator: void next()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.geom.Area;;add;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.geom.Area: java.util.Vector curves>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.Area;;subtract;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.geom.Area: java.util.Vector curves>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.Area;;intersect;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.geom.Area: java.util.Vector curves>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.Area;;exclusiveOr;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;FieldRef for param;;$r4 = r1.<java.awt.geom.Area: java.util.Vector curves>;;pattern detected param  r1 must not be null  because used in  FieldRef 
java.awt.geom.Area;;transform;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.geom.Area;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Area;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.Area;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.FlatteningPathIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.FlatteningPathIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;setCurve;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[$i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r1[$i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r1[$i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r1[$i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r1[$i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d6 = r1[$i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r1[$i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;setCurve;;4
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r4;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r4 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r4 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.CubicCurve2D;;setCurve;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[$i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[$i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[$i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r1[$i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r1[$i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r8 = r1[$i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r9 = r1[$i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;setCurve;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getX1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getY1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getCtrlX1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getCtrlY1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getCtrlX2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getCtrlY2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d6 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getX2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d7 = virtualinvoke r1.<java.awt.geom.CubicCurve2D: double getY2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.CubicCurve2D;;getFlatnessSq;;1
class name;; * ;; * ;;r0;;8
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r0[$i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r0[$i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d6 = r0[$i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r0[$i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;getFlatness;;1
class name;; * ;; * ;;r0;;8
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r0[$i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r0[$i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d6 = r0[$i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r0[$i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;subdivide;;1
class name;; * ;; * ;;r0;;8
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getX1()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getY1()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d2 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getCtrlX1()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d3 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getCtrlY1()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d4 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getCtrlX2()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d5 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getCtrlY2()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d6 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getX2()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d7 = virtualinvoke r0.<java.awt.geom.CubicCurve2D: double getY2()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.geom.CubicCurve2D;;subdivide;;1
class name;; * ;; * ;;r0;;8
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d2 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d3 = r0[$i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d4 = r0[$i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d5 = r0[$i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d6 = r0[$i9];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d7 = r0[$i10];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;solveCubic;;2
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d14 = r0[2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d15 = r0[1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d16 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;15
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d35;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d39;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d43;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d44 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i1] = $d45;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d58;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d59;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d60 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d61 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d62 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d63 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d64 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d65 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d66 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d66;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;fixRoots;;2
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;$d7 = r0[1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d8 = r0[2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d10 = r0[3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d2 = r0[3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;16
*;;*;;*;;*;;*;;ArrayRef for param;;$d19 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d20;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d23 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d24;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d26 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d27;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d28 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d29;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d30 = r1[2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d31;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = d4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d32 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d33;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d34 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d35 = r1[1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$b5] = $d49;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;refineRootWithHint;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$d8 = r0[1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d9 = r0[2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d11 = r0[3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;solveEqn;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[i0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;getRootUpperBound;;1
class name;; * ;; * ;;r0;;4
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d2 = r0[1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d3 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.CubicCurve2D;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.CubicCurve2D;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.CubicCurve2D;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.QuadCurve2D;;setCurve;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r1[$i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r1[$i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r1[$i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r1[$i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r1[$i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;setCurve;;3
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.geom.QuadCurve2D;;setCurve;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[$i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[$i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r4 = r1[$i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[$i4];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r6 = r1[$i5];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r7 = r1[$i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;setCurve;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.QuadCurve2D: double getX1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.QuadCurve2D: double getY1()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.QuadCurve2D: double getCtrlX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.QuadCurve2D: double getCtrlY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.QuadCurve2D: double getX2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.QuadCurve2D: double getY2()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.QuadCurve2D;;getFlatnessSq;;1
class name;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r0[$i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r0[$i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;getFlatness;;1
class name;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;ArrayRef for param;;$d0 = r0[$i1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d1 = r0[$i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d3 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d4 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r0[$i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;subdivide;;1
class name;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r0.<java.awt.geom.QuadCurve2D: double getX1()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d1 = virtualinvoke r0.<java.awt.geom.QuadCurve2D: double getY1()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d2 = virtualinvoke r0.<java.awt.geom.QuadCurve2D: double getCtrlX()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d3 = virtualinvoke r0.<java.awt.geom.QuadCurve2D: double getCtrlY()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d4 = virtualinvoke r0.<java.awt.geom.QuadCurve2D: double getX2()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;d5 = virtualinvoke r0.<java.awt.geom.QuadCurve2D: double getY2()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.geom.QuadCurve2D;;subdivide;;1
class name;; * ;; * ;;r0;;6
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[$i3];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[$i4];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d2 = r0[$i5];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d3 = r0[$i6];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d4 = r0[$i7];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d5 = r0[$i8];;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;solveQuadratic;;2
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;ArrayRef for param;;d0 = r0[2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d1 = r0[1];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;d2 = r0[0];;pattern detected param  r0 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;r1[b0] = $d6;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[b0] = $d12;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$i7] = $d13;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;contains;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.QuadCurve2D;;fillEqn;;1
class name;; * ;; * ;;r0;;3
*;;*;;*;;*;;*;;ArrayRef for param;;r0[0] = $d4;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[1] = $d7;;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[2] = $d10;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;evalQuadratic;;1
class name;; * ;; * ;;r0;;2
*;;*;;*;;*;;*;;ArrayRef for param;;d3 = r0[i2];;pattern detected param  r0 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r0[$i8] = $d18;;pattern detected param  r0 must not be null  because used in  ArrayRef 
java.awt.geom.QuadCurve2D;;intersects;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.QuadCurve2D;;contains;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.CubicIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $f4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $f5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $f6;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $f7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.CubicIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $d5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $d6;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $d7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.Ellipse2D;;equals;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d1 = virtualinvoke r2.<java.awt.geom.Ellipse2D: double getX()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d3 = virtualinvoke r2.<java.awt.geom.Ellipse2D: double getY()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d5 = virtualinvoke r2.<java.awt.geom.Ellipse2D: double getWidth()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d7 = virtualinvoke r2.<java.awt.geom.Ellipse2D: double getHeight()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.geom.EllipseIterator;;<init>;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Ellipse2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Ellipse2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Ellipse2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Ellipse2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.EllipseIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $f4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $f5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $f6;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $f7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.EllipseIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;8
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d9;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d14;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d19;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d24;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $d29;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[4] = $d34;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[5] = $d39;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.LineIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.LineIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.QuadIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $f4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $f5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.QuadIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d2;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d3;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $d4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[3] = $d5;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.RectIterator;;<init>;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.RectIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f2 = r1[$b3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$b3] = $f4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f5 = r1[$b6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$b6] = $f7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.RectIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $d0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $d1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d2 = r1[$b3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$b3] = $d4;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$d5 = r1[$b6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[$b6] = $d7;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.RoundRectangle2D;;setRoundRect;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d4 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getArcWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getArcHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.RoundRectangle2D;;equals;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d1 = virtualinvoke r2.<java.awt.geom.RoundRectangle2D: double getX()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d3 = virtualinvoke r2.<java.awt.geom.RoundRectangle2D: double getY()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d5 = virtualinvoke r2.<java.awt.geom.RoundRectangle2D: double getWidth()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d7 = virtualinvoke r2.<java.awt.geom.RoundRectangle2D: double getHeight()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d9 = virtualinvoke r2.<java.awt.geom.RoundRectangle2D: double getArcWidth()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$d11 = virtualinvoke r2.<java.awt.geom.RoundRectangle2D: double getArcHeight()>();;pattern detected param  r1 must not be null it define a local r2which used in  InvokeExpr 
java.awt.geom.RoundRectIterator;;<init>;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d2 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d3 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d5 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getArcWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d9 = virtualinvoke r1.<java.awt.geom.RoundRectangle2D: double getArcHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.geom.RoundRectIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i4] = $f1;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.geom.RoundRectIterator;;currentSegment;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i0] = $d8;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i4] = $d17;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.AffineTransformOp;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.AffineTransformOp;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.geom.AffineTransform: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.AffineTransformOp;;filter;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r26 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i14 = virtualinvoke r2.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i15 = virtualinvoke r2.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r34 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();;pattern detected param  r2 must not be null it define a local r4which used in  InvokeExpr 
java.awt.image.AffineTransformOp;;filter;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.AffineTransformOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.AffineTransformOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.AffineTransformOp;;createCompatibleDestImage;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r21 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.AffineTransformOp;;createCompatibleDestRaster;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int,int,int)>($i0, $i1, $i2, $i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.AffineTransformOp;;validateTransform;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.AffineTransform: double getDeterminant()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.ColorConvertOp;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.ColorConvertOp;;filter;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r8 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r9 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;ICCBIFilter;;4
class name;; * ;; * ;;r3;;2
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r9;;pattern detected param  r3 must not be null  otherwise an exception is thrown 
*;;*;;*;;*;;*;;InvokeExpr for param;;r16 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r4;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r11 = virtualinvoke $r13.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r4 must not be null it define a local $r13which used in  InvokeExpr 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i3 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r8 = virtualinvoke $r7.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r2 must not be null it define a local $r7which used in  InvokeExpr 
java.awt.image.ColorConvertOp;;filter;;2
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i8 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i16 = virtualinvoke r1.<java.awt.image.Raster: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i17 = virtualinvoke r2.<java.awt.image.WritableRaster: int getTransferType()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;createCompatibleDestImage;;2
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r3.<java.awt.color.ColorSpace: int getNumComponents()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;createCompatibleDestRaster;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;getPoint2D;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;getRenderingIntent;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.color.ICC_Profile: byte[] getData(int)>(1751474532);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;nonICCBIFilter;;4
class name;; * ;; * ;;r3;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$r22 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r9 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r4;;4
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r11 = virtualinvoke $r27.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r4 must not be null it define a local $r27which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$f6 = virtualinvoke r31.<java.awt.color.ColorSpace: float getMinValue(int)>(i6);;pattern detected param  r4 must not be null it define a local r31which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$f7 = virtualinvoke r31.<java.awt.color.ColorSpace: float getMaxValue(int)>(i6);;pattern detected param  r4 must not be null it define a local r31which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r50 = virtualinvoke r4.<java.awt.color.ColorSpace: float[] fromCIEXYZ(float[])>(r44);;pattern detected param  r4 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r8 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r10 = virtualinvoke $r26.<java.awt.color.ICC_ColorSpace: java.awt.color.ICC_Profile getProfile()>();;pattern detected param  r2 must not be null it define a local $r26which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$f1 = virtualinvoke r12.<java.awt.color.ColorSpace: float getMinValue(int)>(i5);;pattern detected param  r2 must not be null it define a local r12which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;$f2 = virtualinvoke r12.<java.awt.color.ColorSpace: float getMaxValue(int)>(i5);;pattern detected param  r2 must not be null it define a local r12which used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r20 = virtualinvoke r2.<java.awt.color.ColorSpace: float[] toCIEXYZ(float[])>(r20);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r37 = virtualinvoke r2.<java.awt.color.ColorSpace: float[] fromCIEXYZ(float[])>(r32);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r44 = virtualinvoke r2.<java.awt.color.ColorSpace: float[] toCIEXYZ(float[])>(r43);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;nonICCRasterFilter;;2
class name;; * ;; * ;;r1;;11
*;;*;;*;;*;;*;;InvokeExpr for param;;$i14 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i29 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i9 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;f0 = virtualinvoke r1.<java.awt.image.Raster: float getSampleFloat(int,int,int)>(i9, i29, i12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<java.awt.image.WritableRaster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r2.<java.awt.image.WritableRaster: int getTransferType()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i5 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i7 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i10 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.WritableRaster: void setSample(int,int,int,float)>(i10, i7, i30, f22);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;getMinMaxValsFromProfiles;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.color.ICC_Profile: int getColorSpaceType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.color.ICC_Profile: int getNumComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r2.<java.awt.color.ICC_Profile: int getColorSpaceType()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r2.<java.awt.color.ICC_Profile: int getNumComponents()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ColorConvertOp;;setMinMax;;2
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = 0.0F;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = -128.0F;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = -128.0F;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[2] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[1] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[0] = $f0;;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i2] = 0.0F;;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;7
*;;*;;*;;*;;*;;ArrayRef for param;;r2[0] = 100.0F;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[1] = 127.0F;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[2] = 127.0F;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[2] = $f2;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[1] = $f2;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[0] = $f2;;pattern detected param  r2 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r2[i2] = 1.0F;;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.ColorConvertOp;;getMinMaxValsFromColorSpaces;;2
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.color.ColorSpace: int getNumComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r1.<java.awt.color.ColorSpace: float getMinValue(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f1 = virtualinvoke r1.<java.awt.color.ColorSpace: float getMaxValue(int)>(i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r2.<java.awt.color.ColorSpace: int getNumComponents()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f2 = virtualinvoke r2.<java.awt.color.ColorSpace: float getMinValue(int)>(i3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f3 = virtualinvoke r2.<java.awt.color.ColorSpace: float getMaxValue(int)>(i3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandCombineOp;;<init>;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;ArrayRef for param;;$r3 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r13 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.BandCombineOp;;filter;;2
class name;; * ;; * ;;r1;;9
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i20 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i21 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.Raster: int[] getPixel(int,int,int[])>(i7, i2, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i27 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i31 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.Raster: int[] getPixel(int,int,int[])>(i29, i2, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i18 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i6, i4, r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i28, i4, r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandCombineOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandCombineOp;;createCompatibleDestRaster;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r11 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandCombineOp;;getPoint2D;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;createSubsetSampleModel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i7 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.BandedSampleModel;;getDataElements;;1
class name;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;$i17 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i14, $i16);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i22 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i19, $i21);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i27 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i24, $i26);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$f0 = virtualinvoke r2.<java.awt.image.DataBuffer: float getElemFloat(int,int)>($i28, $i30);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r2.<java.awt.image.DataBuffer: double getElemDouble(int,int)>($i31, $i33);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;getPixel;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i13 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>($i10, $i12);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;getPixels;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i28 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>(i9, $i13);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;getSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.DataBuffer: int getElem(int,int)>($i6, $i11);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;getSampleFloat;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;f0 = virtualinvoke r1.<java.awt.image.DataBuffer: float getElemFloat(int,int)>($i5, $i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;getSampleDouble;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;d0 = virtualinvoke r1.<java.awt.image.DataBuffer: double getElemDouble(int,int)>($i5, $i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;getSamples;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i22 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int,int)>(i7, $i11);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;setDataElements;;1
class name;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i14, $i16, $s18);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i19, $i21, $i23);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i24, $i26, $i27);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElemFloat(int,int,float)>($i28, $i30, $f0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElemDouble(int,int,double)>($i31, $i33, $d0);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;setPixel;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i12 = r1[i3];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i9, $i11, $i12);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i25 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>(i9, $i24, $i25);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElem(int,int,int)>($i6, $i11, i3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElemFloat(int,int,float)>($i5, $i10, f0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElemDouble(int,int,double)>($i5, $i10, d0);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.BandedSampleModel;;setSamples;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i21 = r1[$i11];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int,int)>(i7, $i20, $i21);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferDouble;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferDouble;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferShort;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferShort;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferFloat;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.DataBufferFloat;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentColorModel;;bitsHelper;;1
class name;; * ;; * ;;r0;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r0.<java.awt.color.ColorSpace: int getNumComponents()>();;pattern detected param  r0 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentColorModel;;bitsArrayHelper;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.color.ColorSpace: int getNumComponents()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentColorModel;;getDataElement;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i3 = r1[$i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ComponentColorModel;;getDataElements;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i12 = r1[$i11];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i19 = r1[$i18];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ComponentColorModel;;getDataElements;;1
class name;; * ;; * ;;r1;;20
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f7 = r1[$i17];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;f8 = r3[$i21];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f9 = r3[i4];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f17 = r3[i36];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;f21 = r3[$i45];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f22 = r3[i5];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f30 = r3[i61];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;f34 = r3[$i70];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f35 = r3[i6];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f43 = r3[i84];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;f47 = r3[$i92];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f48 = r3[i7];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for local initialized from param;;$f54 = r3[i101];;pattern detected param  r1 must not be null it define a local r3which used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;f57 = r1[$i107];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f58 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f60 = r1[i112];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f61 = r1[$i116];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f62 = r1[i10];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$f63 = r1[i120];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ComponentColorModel;;coerceData;;1
class name;; * ;; * ;;r1;;35
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.WritableRaster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.WritableRaster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r1.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i6, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i6, i4, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i6, i4, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r10 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i28, i4, r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i28, i4, r7);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i28, i4, r8);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r15 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i43, i4, r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i43, i4, r12);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i43, i4, r13);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r19 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i52, i4, r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i52, i4, r17);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i52, i4, r18);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r23 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i62, i4, r21);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i62, i4, r21);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i62, i4, r22);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r28 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i69, i4, r26);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i69, i4, r26);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i69, i4, r27);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r38 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i80, i4, r36);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i80, i4, r36);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r42 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i94, i4, r40);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i94, i4, r40);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r46 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i108, i4, r44);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i108, i4, r44);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r49 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i116, i4, r48);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i116, i4, r48);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r52 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i125, i4, r51);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i125, i4, r51);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r56 = virtualinvoke r1.<java.awt.image.WritableRaster: java.lang.Object getDataElements(int,int,java.lang.Object)>(i131, i4, r55);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.WritableRaster: void setDataElements(int,int,java.lang.Object)>(i131, i4, r55);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentColorModel;;isCompatibleRaster;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i6 = virtualinvoke r1.<java.awt.image.Raster: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentColorModel;;isCompatibleSampleModel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.image.SampleModel: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.SampleModel: int getTransferType()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentColorModel;;getAlphaRaster;;1
class name;; * ;; * ;;r1;;6
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i2 = virtualinvoke r1.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.image.WritableRaster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i5 = virtualinvoke r1.<java.awt.image.WritableRaster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>(i0, i1, $i4, $i5, i0, i1, r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ComponentColorModel;;equals;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PixelInterleavedSampleModel;;<init>;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;ArrayRef for param;;i5 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;i6 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i10 = r1[i7];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.PixelInterleavedSampleModel;;createSubsetSampleModel;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i3 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.BufferedImageFilter;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.image.BufferedImageFilter;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i32 = virtualinvoke r1.<java.awt.image.ColorModel: int getRGB(int)>($s31);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b30 = r2[$i29];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.BufferedImageFilter;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i31 = virtualinvoke r1.<java.awt.image.ColorModel: int getRGB(int)>($i30);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i30 = r2[$i29];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.ByteLookupTable;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ByteLookupTable;;lookupPixel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i10 = r1[i8];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ByteLookupTable;;lookupPixel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$b5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$b11 = r1[i9];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ConvolveOp;;filter;;2
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r8;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for local initialized from param;;r22 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();;pattern detected param  r2 must not be null it define a local r4which used in  InvokeExpr 
java.awt.image.ConvolveOp;;filter;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ConvolveOp;;createCompatibleDestImage;;2
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r5 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$z1 = virtualinvoke r2.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ConvolveOp;;createCompatibleDestRaster;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ConvolveOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ConvolveOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.ConvolveOp;;getPoint2D;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.CropImageFilter;;setProperties;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.MultiPixelPackedSampleModel;;getSample;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i4 = virtualinvoke r1.<java.awt.image.DataBuffer: int getElem(int)>($i15);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.MultiPixelPackedSampleModel;;setSample;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i7 = virtualinvoke r1.<java.awt.image.DataBuffer: int getElem(int)>(i5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.DataBuffer: void setElem(int,int)>(i5, i30);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.MultiPixelPackedSampleModel;;getDataElements;;1
class name;; * ;; * ;;r2;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;i21 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i20);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i31 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i30);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i41 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i40);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.MultiPixelPackedSampleModel;;getPixel;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>($i15);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.MultiPixelPackedSampleModel;;setDataElements;;1
class name;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i6 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>(i4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>(i4, i31);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>(i4, i37);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>(i4, i42);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.MultiPixelPackedSampleModel;;setPixel;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i25 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;i5 = virtualinvoke r2.<java.awt.image.DataBuffer: int getElem(int)>(i3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.DataBuffer: void setElem(int,int)>(i3, i29);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;filter;;2
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;filter;;2
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i16 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i5 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i6 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.Raster: int[] getPixel(int,int,int[])>(i10, i6, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;5
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i15 = virtualinvoke r2.<java.awt.image.WritableRaster: int getNumBands()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i7 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i8 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i11, i8, r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;createCompatibleDestImage;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;createCompatibleDestRaster;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;getPoint2D;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;byteFilter;;3
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.image.WritableRaster: void setSamples(int,int,int,int,int,int[])>(0, i6, i0, 1, i8, r4);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.image.ByteLookupTable: byte[][] getTable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.ByteLookupTable: int getOffset()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<java.awt.image.Raster: int[] getSamples(int,int,int,int,int,int[])>(0, i6, i0, 1, i8, r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.LookupOp;;shortFilter;;3
class name;; * ;; * ;;r3;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r3.<java.awt.image.WritableRaster: void setSamples(int,int,int,int,int,int[])>(0, i10, i0, 1, i7, r4);;pattern detected param  r3 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.image.ShortLookupTable: short[][] getTable()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i3 = virtualinvoke r1.<java.awt.image.ShortLookupTable: int getOffset()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r4 = virtualinvoke r2.<java.awt.image.Raster: int[] getSamples(int,int,int,int,int,int[])>(0, i10, i0, 1, i7, r4);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.ShortLookupTable;;<init>;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$r2 = r1[0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$r5 = r1[i1];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ShortLookupTable;;lookupPixel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$i11 = r1[i9];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.ShortLookupTable;;lookupPixel;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$s5 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;$s11 = r1[i9];;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.MemoryImageSource;;addConsumer;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void imageComplete(int)>($b2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void imageComplete(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void imageComplete(int)>(1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.MemoryImageSource;;initConsumer;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void setDimensions(int,int)>($i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void setProperties(java.util.Hashtable)>($r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void setColorModel(java.awt.image.ColorModel)>($r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void setHints(int)>($b2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.MemoryImageSource;;sendPixels;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)>(i0, i1, i2, i3, $r3, $r6, i4, $i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;interfaceinvoke r1.<java.awt.image.ImageConsumer: void setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)>(i0, i1, i2, i3, $r7, $r10, i4, $i10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PixelGrabber;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.Image: java.awt.image.ImageProducer getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PixelGrabber;;<init>;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.Image: java.awt.image.ImageProducer getSource()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.PixelGrabber;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i51 = virtualinvoke r1.<java.awt.image.ColorModel: int getRGB(int)>($s50);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b49 = r2[$i48];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.PixelGrabber;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i50 = virtualinvoke r1.<java.awt.image.ColorModel: int getRGB(int)>($i49);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i49 = r2[$i48];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.RescaleOp;;<init>;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f0 = r1[i0];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$f1 = r2[i0];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.RescaleOp;;createByteLut;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;f0 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;f1 = r2[i2];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.RescaleOp;;createShortLut;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ArrayRef for param;;f0 = r1[i2];;pattern detected param  r1 must not be null  because used in  ArrayRef 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;f1 = r2[i2];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.RescaleOp;;canUseLookup;;2
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;$r4 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i7 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r5 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i12 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r2.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.RescaleOp;;filter;;2
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r6 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;r7 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.RescaleOp;;filter;;2
class name;; * ;; * ;;r1;;7
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i2 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i19 = virtualinvoke r1.<java.awt.image.Raster: int getNumBands()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i23 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i24 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.Raster: int[] getPixel(int,int,int[])>(i10, i24, r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;i25 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinX()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i26 = virtualinvoke r2.<java.awt.image.WritableRaster: int getMinY()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;r8 = virtualinvoke r2.<java.awt.image.WritableRaster: java.awt.image.SampleModel getSampleModel()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r2.<java.awt.image.WritableRaster: void setPixel(int,int,int[])>(i9, i26, r3);;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.RescaleOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.RescaleOp;;getBounds2D;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.RescaleOp;;createCompatibleDestImage;;1
class name;; * ;; * ;;r1;;4
*;;*;;*;;*;;*;;InvokeExpr for param;;r3 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r6 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.RescaleOp;;createCompatibleDestRaster;;1
class name;; * ;; * ;;r1;;3
*;;*;;*;;*;;*;;InvokeExpr for param;;$i0 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i1 = virtualinvoke r1.<java.awt.image.Raster: int getHeight()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i0, $i1);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.RescaleOp;;getPoint2D;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;InvokeExpr for param;;$d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.RGBImageFilter;;filterIndexColorModel;;1
class name;; * ;; * ;;r1;;9
*;;*;;*;;*;;*;;InvokeExpr for param;;i0 = virtualinvoke r1.<java.awt.image.IndexColorModel: int getMapSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.IndexColorModel: void getReds(byte[])>(r2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.IndexColorModel: void getGreens(byte[])>(r3);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.IndexColorModel: void getBlues(byte[])>(r4);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;virtualinvoke r1.<java.awt.image.IndexColorModel: void getAlphas(byte[])>(r5);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;i1 = virtualinvoke r1.<java.awt.image.IndexColorModel: int getTransparentPixel()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i4 = virtualinvoke r1.<java.awt.image.IndexColorModel: int getRGB(int)>(i2);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i14 = virtualinvoke r1.<java.awt.image.IndexColorModel: int getPixelSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
*;;*;;*;;*;;*;;InvokeExpr for param;;$i15 = virtualinvoke r1.<java.awt.image.IndexColorModel: int getPixelSize()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.image.RGBImageFilter;;filterRGBPixels;;1
class name;; * ;; * ;;r1;;2
*;;*;;*;;*;;*;;ArrayRef for param;;$i11 = r1[i6];;pattern detected param  r1 must not be null  because used in  ArrayRef 
*;;*;;*;;*;;*;;ArrayRef for param;;r1[i6] = $i12;;pattern detected param  r1 must not be null  because used in  ArrayRef 
java.awt.image.RGBImageFilter;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i11 = virtualinvoke r1.<java.awt.image.ColorModel: int getRGB(int)>($s10);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$b9 = r2[i6];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.RGBImageFilter;;setPixels;;2
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$i10 = virtualinvoke r1.<java.awt.image.ColorModel: int getRGB(int)>($i9);;pattern detected param  r1 must not be null  because used in  InvokeExpr 
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ArrayRef for param;;$i9 = r2[i6];;pattern detected param  r2 must not be null  because used in  ArrayRef 
java.awt.image.renderable.RenderableImageOp;;<init>;;1
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r2.<java.awt.image.renderable.ParameterBlock: java.lang.Object clone()>();;pattern detected param  r2 must not be null  because used in  InvokeExpr 
java.awt.image.renderable.RenderableImageOp;;setParameterBlock;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r3 = virtualinvoke r1.<java.awt.image.renderable.ParameterBlock: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.print.Book;;setPage;;2
class name;; * ;; * ;;r2;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r4;;pattern detected param  r2 must not be null  otherwise an exception is thrown 
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r3;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.print.PageFormat;;setPaper;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;InvokeExpr for param;;$r2 = virtualinvoke r1.<java.awt.print.Paper: java.lang.Object clone()>();;pattern detected param  r1 must not be null  because used in  InvokeExpr 
java.awt.print.PrinterJob;;printDialog;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
java.awt.print.PrinterJob;;pageDialog;;1
class name;; * ;; * ;;r1;;1
*;;*;;*;;*;;*;;ThrowStmt for param;;throw $r2;;pattern detected param  r1 must not be null  otherwise an exception is thrown 
