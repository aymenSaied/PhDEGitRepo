class name;;Method name;;number of detected pattern
nanoxml.XMLElement;;<nanoxml.XMLElement: void <init>()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void <init>(java.util.HashMap)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void <init>(boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void <init>(java.util.HashMap,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void <init>(java.util.HashMap,boolean,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void <init>(java.util.HashMap,boolean,boolean,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void <init>(java.util.HashMap,boolean,boolean,boolean,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void addChild(nanoxml.XMLElement)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void setAttribute(java.lang.String,java.lang.Object)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void setIntAttribute(java.lang.String,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void setDoubleAttribute(java.lang.String,double)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: int countChildren()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.util.Iterator enumerateAttributeNames()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.util.Iterator iterateChildren()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.util.ArrayList getChildren()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.String getContent()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: int getLineNr()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.Object getAttribute(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.Object getAttribute(java.lang.String,java.lang.Object)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.Object getAttribute(java.lang.String,java.util.Map,java.lang.String,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.String getStringAttribute(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.String getStringAttribute(java.lang.String,java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.String getStringAttribute(java.lang.String,java.util.HashMap,java.lang.String,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: int getIntAttribute(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: int getIntAttribute(java.lang.String,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: int getIntAttribute(java.lang.String,int,int,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: int getIntAttribute(java.lang.String,java.util.HashMap,java.lang.String,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: double getDoubleAttribute(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: double getDoubleAttribute(java.lang.String,double)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: double getDoubleAttribute(java.lang.String,java.util.HashMap,java.lang.String,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: boolean getBooleanAttribute(java.lang.String,java.lang.String,java.lang.String,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: boolean getBooleanAttribute(java.lang.String,boolean)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.String getName()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseFromReader(java.io.Reader)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseFromReader(java.io.Reader,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseString(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseString(java.lang.String,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseString(java.lang.String,int,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseString(java.lang.String,int,int,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseCharArray(char[],int,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void parseCharArray(char[],int,int,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void removeChild(nanoxml.XMLElement)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void removeAttribute(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLElement createElement(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLElement createElement()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void setContent(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void setName(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: java.lang.String toString()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void write(java.io.Writer)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void print(java.io.PrintWriter)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void print(java.io.PrintWriter,int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void writeEncoded(java.io.Writer,java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void scanIdentifier(java.lang.StringBuffer)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: char scanWhitespace()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: char scanWhitespace(java.lang.StringBuffer)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void scanString(java.lang.StringBuffer)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void scanPCData(java.lang.StringBuffer)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: boolean checkCDATA(java.lang.StringBuffer)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void skipComment()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void skipSpecialTag(int)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: boolean checkLiteral(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: char readChar()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void scanElement(nanoxml.XMLElement)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void resolveEntity(java.lang.StringBuffer)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: void unreadChar(char)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLParseException invalidValueSet(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLParseException invalidValue(java.lang.String,java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLParseException unexpectedEndOfData()>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLParseException syntaxError(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLParseException expectedInput(java.lang.String)>;;0
nanoxml.XMLElement;;<nanoxml.XMLElement: nanoxml.XMLParseException unknownEntity(java.lang.String)>;;0
nanoxml.XMLParseException;;<nanoxml.XMLParseException: void <init>(java.lang.String,java.lang.String)>;;0
nanoxml.XMLParseException;;<nanoxml.XMLParseException: void <init>(java.lang.String,int,java.lang.String)>;;0
nanoxml.XMLParseException;;<nanoxml.XMLParseException: int getLineNr()>;;0
net.n3.nanoxml.CDATAReader;;<net.n3.nanoxml.CDATAReader: void <init>(net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.CDATAReader;;<net.n3.nanoxml.CDATAReader: void finalize()>;;0
net.n3.nanoxml.CDATAReader;;<net.n3.nanoxml.CDATAReader: int read(char[],int,int)>;;0
net.n3.nanoxml.CDATAReader;;<net.n3.nanoxml.CDATAReader: void close()>;;0
net.n3.nanoxml.ContentReader;;<net.n3.nanoxml.ContentReader: void <init>(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver,java.lang.String)>;;0
net.n3.nanoxml.ContentReader;;<net.n3.nanoxml.ContentReader: void finalize()>;;0
net.n3.nanoxml.ContentReader;;<net.n3.nanoxml.ContentReader: int read(char[],int,int)>;;0
net.n3.nanoxml.ContentReader;;<net.n3.nanoxml.ContentReader: void close()>;;0
net.n3.nanoxml.XMLParseException;;<net.n3.nanoxml.XMLParseException: void <init>(java.lang.String)>;;0
net.n3.nanoxml.XMLParseException;;<net.n3.nanoxml.XMLParseException: void <init>(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void <init>()>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void skipComment(net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void skipTag(net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: java.lang.String scanPublicID(java.lang.StringBuffer,net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: java.lang.String scanSystemID(net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: java.lang.String scanIdentifier(net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: java.lang.String scanString(net.n3.nanoxml.IXMLReader,char,net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void processEntity(java.lang.String,net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: char processCharLiteral(java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void skipWhitespace(net.n3.nanoxml.IXMLReader,java.lang.StringBuffer)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: java.lang.String read(net.n3.nanoxml.IXMLReader,char)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: char readChar(net.n3.nanoxml.IXMLReader,char)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: boolean checkLiteral(net.n3.nanoxml.IXMLReader,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorExpectedInput(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorInvalidEntity(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorUnexpectedEntity(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorUnexpectedCDATA(java.lang.String,int)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorInvalidInput(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorWrongClosingTag(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorClosingTagNotEmpty(java.lang.String,int)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorMissingElement(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorUnexpectedElement(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorMissingAttribute(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorUnexpectedAttribute(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorInvalidAttributeValue(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorMissingPCData(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void errorUnexpectedPCData(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLUtil;;<net.n3.nanoxml.XMLUtil: void validationError(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLValidationException;;<net.n3.nanoxml.XMLValidationException: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLValidationException;;<net.n3.nanoxml.XMLValidationException: void finalize()>;;0
net.n3.nanoxml.XMLValidationException;;<net.n3.nanoxml.XMLValidationException: java.lang.String getElementName()>;;0
net.n3.nanoxml.XMLValidationException;;<net.n3.nanoxml.XMLValidationException: java.lang.String getAttributeName()>;;0
net.n3.nanoxml.XMLValidationException;;<net.n3.nanoxml.XMLValidationException: java.lang.String getAttributeValue()>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void <init>(java.lang.String)>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void <init>(java.lang.Exception)>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void <init>(java.lang.String,int,java.lang.Exception)>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void <init>(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void <init>(java.lang.String,int,java.lang.Exception,java.lang.String,boolean)>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: java.lang.String buildMessage(java.lang.String,int,java.lang.Exception,java.lang.String,boolean)>;;1
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void finalize()>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: java.lang.String getSystemID()>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: int getLineNr()>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: java.lang.Exception getException()>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void printStackTrace(java.io.PrintWriter)>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void printStackTrace(java.io.PrintStream)>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: void printStackTrace()>;;0
net.n3.nanoxml.XMLException;;<net.n3.nanoxml.XMLException: java.lang.String toString()>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void <init>()>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void finalize()>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void setParameterEntityResolver(net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: net.n3.nanoxml.IXMLEntityResolver getParameterEntityResolver()>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void parseDTD(java.lang.String,net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver,boolean)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void processElement(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void processConditionalSection(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void processIgnoreSection(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void processAttList(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void processEntity(net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void elementStarted(java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void elementEnded(java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void elementAttributesProcessed(java.lang.String,java.util.Properties,java.lang.String,int)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void attributeAdded(java.lang.String,java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.NonValidator;;<net.n3.nanoxml.NonValidator: void PCDataAdded(java.lang.String,int)>;;0
net.n3.nanoxml.XMLEntityResolver;;<net.n3.nanoxml.XMLEntityResolver: void <init>()>;;0
net.n3.nanoxml.XMLEntityResolver;;<net.n3.nanoxml.XMLEntityResolver: void finalize()>;;0
net.n3.nanoxml.XMLEntityResolver;;<net.n3.nanoxml.XMLEntityResolver: void addInternalEntity(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLEntityResolver;;<net.n3.nanoxml.XMLEntityResolver: void addExternalEntity(java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLEntityResolver;;<net.n3.nanoxml.XMLEntityResolver: java.io.Reader getEntity(net.n3.nanoxml.IXMLReader,java.lang.String)>;;0
net.n3.nanoxml.XMLEntityResolver;;<net.n3.nanoxml.XMLEntityResolver: boolean isExternalEntity(java.lang.String)>;;0
net.n3.nanoxml.XMLEntityResolver;;<net.n3.nanoxml.XMLEntityResolver: java.io.Reader openExternalEntity(net.n3.nanoxml.IXMLReader,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.PIReader;;<net.n3.nanoxml.PIReader: void <init>(net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.PIReader;;<net.n3.nanoxml.PIReader: void finalize()>;;0
net.n3.nanoxml.PIReader;;<net.n3.nanoxml.PIReader: int read(char[],int,int)>;;0
net.n3.nanoxml.PIReader;;<net.n3.nanoxml.PIReader: void close()>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void <init>()>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void <init>(net.n3.nanoxml.IXMLElement)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void finalize()>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void startBuilding(java.lang.String,int)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void newProcessingInstruction(java.lang.String,java.io.Reader)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void startElement(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void elementAttributesProcessed(java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void endElement(java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: void addPCData(java.io.Reader,java.lang.String,int)>;;0
net.n3.nanoxml.StdXMLBuilder;;<net.n3.nanoxml.StdXMLBuilder: java.lang.Object getResult()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void <init>()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void <init>(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void <init>(java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void <init>(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement createPCDataElement()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement createElement(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement createElement(java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement createElement(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement createElement(java.lang.String,java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void finalize()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement getParent()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getFullName()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getName()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getNamespace()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void setName(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void setName(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void addChild(net.n3.nanoxml.IXMLElement)>;;1
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void insertChild(net.n3.nanoxml.IXMLElement,int)>;;1
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void removeChild(net.n3.nanoxml.IXMLElement)>;;1
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void removeChildAtIndex(int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.util.Iterator iterateChildren()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: boolean isLeaf()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: boolean hasChildren()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: int getChildrenCount()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.util.ArrayList getChildren()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement getChildAtIndex(int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement getFirstChildNamed(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.IXMLElement getFirstChildNamed(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.util.ArrayList getChildrenNamed(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.util.ArrayList getChildrenNamed(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.XMLAttribute findAttribute(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: net.n3.nanoxml.XMLAttribute findAttribute(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: int getAttributeCount()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getAttribute(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getAttribute(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getAttribute(java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: int getAttribute(java.lang.String,int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: int getAttribute(java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getAttributeType(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getAttributeNamespace(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getAttributeType(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void setAttribute(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void removeAttribute(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void removeAttribute(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.util.Iterator iterateAttributeNames()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: boolean hasAttribute(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: boolean hasAttribute(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.util.Properties getAttributes()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.util.Properties getAttributesInNamespace(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getSystemID()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: int getLineNr()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: java.lang.String getContent()>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: void setContent(java.lang.String)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: boolean equals(java.lang.Object)>;;0
net.n3.nanoxml.XMLElement;;<net.n3.nanoxml.XMLElement: boolean equalsXMLElement(net.n3.nanoxml.IXMLElement)>;;0
net.n3.nanoxml.XMLAttribute;;<net.n3.nanoxml.XMLAttribute: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLAttribute;;<net.n3.nanoxml.XMLAttribute: java.lang.String getFullName()>;;0
net.n3.nanoxml.XMLAttribute;;<net.n3.nanoxml.XMLAttribute: java.lang.String getName()>;;0
net.n3.nanoxml.XMLAttribute;;<net.n3.nanoxml.XMLAttribute: java.lang.String getNamespace()>;;0
net.n3.nanoxml.XMLAttribute;;<net.n3.nanoxml.XMLAttribute: java.lang.String getValue()>;;0
net.n3.nanoxml.XMLAttribute;;<net.n3.nanoxml.XMLAttribute: void setValue(java.lang.String)>;;0
net.n3.nanoxml.XMLAttribute;;<net.n3.nanoxml.XMLAttribute: java.lang.String getType()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void <init>()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void finalize()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void setBuilder(net.n3.nanoxml.IXMLBuilder)>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: net.n3.nanoxml.IXMLBuilder getBuilder()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void setValidator(net.n3.nanoxml.IXMLValidator)>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: net.n3.nanoxml.IXMLValidator getValidator()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void setResolver(net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: net.n3.nanoxml.IXMLEntityResolver getResolver()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void setReader(net.n3.nanoxml.IXMLReader)>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: net.n3.nanoxml.IXMLReader getReader()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: java.lang.Object parse()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void scanData()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void scanSomeTag(boolean,java.lang.String,java.util.Properties)>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void processPI()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void processSpecialTag(boolean)>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void processCDATA()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void processDocType()>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void processElement(java.lang.String,java.util.Properties)>;;0
net.n3.nanoxml.StdXMLParser;;<net.n3.nanoxml.StdXMLParser: void processAttribute(java.util.Vector,java.util.Vector,java.util.Vector)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: net.n3.nanoxml.IXMLReader stringReader(java.lang.String)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: net.n3.nanoxml.IXMLReader fileReader(java.lang.String)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void <init>(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void <init>(java.io.Reader)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void finalize()>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: java.lang.String getEncoding(java.lang.String)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: java.io.Reader stream2reader(java.io.InputStream,java.lang.StringBuffer)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void <init>(java.io.InputStream)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: char read()>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: boolean atEOFOfCurrentStream()>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: boolean atEOF()>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void unread(char)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: java.io.Reader openStream(java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void startNewStream(java.io.Reader)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void startNewStream(java.io.Reader,boolean)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: int getStreamLevel()>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: int getLineNr()>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void setSystemID(java.lang.String)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: void setPublicID(java.lang.String)>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: java.lang.String getSystemID()>;;0
net.n3.nanoxml.StdXMLReader;;<net.n3.nanoxml.StdXMLReader: java.lang.String getPublicID()>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void <init>()>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void finalize()>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: net.n3.nanoxml.IXMLValidator getDelegate()>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void setDelegate(net.n3.nanoxml.IXMLValidator)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void setParameterEntityResolver(net.n3.nanoxml.IXMLEntityResolver)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: net.n3.nanoxml.IXMLEntityResolver getParameterEntityResolver()>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void parseDTD(java.lang.String,net.n3.nanoxml.IXMLReader,net.n3.nanoxml.IXMLEntityResolver,boolean)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void elementStarted(java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void elementEnded(java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void elementAttributesProcessed(java.lang.String,java.util.Properties,java.lang.String,int)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void attributeAdded(java.lang.String,java.lang.String,java.lang.String,int)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void PCDataAdded(java.lang.String,int)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void missingElement(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void unexpectedElement(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void missingAttribute(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void unexpectedAttribute(java.lang.String,int,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void invalidAttributeValue(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void missingPCData(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void unexpectedPCData(java.lang.String,int,java.lang.String)>;;0
net.n3.nanoxml.ValidatorPlugin;;<net.n3.nanoxml.ValidatorPlugin: void validationError(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>;;0
net.n3.nanoxml.XMLParserFactory;;<net.n3.nanoxml.XMLParserFactory: void <init>()>;;0
net.n3.nanoxml.XMLParserFactory;;<net.n3.nanoxml.XMLParserFactory: net.n3.nanoxml.IXMLParser createDefaultXMLParser()>;;0
net.n3.nanoxml.XMLParserFactory;;<net.n3.nanoxml.XMLParserFactory: net.n3.nanoxml.IXMLParser createDefaultXMLParser(net.n3.nanoxml.IXMLBuilder)>;;0
net.n3.nanoxml.XMLParserFactory;;<net.n3.nanoxml.XMLParserFactory: net.n3.nanoxml.IXMLParser createXMLParser(java.lang.String,net.n3.nanoxml.IXMLBuilder)>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void <init>(java.io.Writer)>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void <init>(java.io.OutputStream)>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void finalize()>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void write(net.n3.nanoxml.IXMLElement)>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void write(net.n3.nanoxml.IXMLElement,boolean)>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void write(net.n3.nanoxml.IXMLElement,boolean,int)>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void write(net.n3.nanoxml.IXMLElement,boolean,int,boolean)>;;0
net.n3.nanoxml.XMLWriter;;<net.n3.nanoxml.XMLWriter: void writeEncoded(java.lang.String)>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void <init>()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void init()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void start()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: org.jhotdraw.app.Project createProject()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void setModel(org.jhotdraw.app.ApplicationModel)>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: org.jhotdraw.app.ApplicationModel getModel()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: org.jhotdraw.app.Project basicCreateProject()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: java.lang.String getName()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: java.lang.String getVersion()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: java.lang.String getCopyright()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void stop()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void remove(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void add(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void dispose(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: java.util.Collection projects()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: boolean isEnabled()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void setEnabled(boolean)>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: java.awt.Container createContainer()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void launch(java.lang.String[])>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void initLabels()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void configure(java.lang.String[])>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: java.util.List recentFiles()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void clearRecentFiles()>;;0
org.jhotdraw.app.AbstractApplication;;<org.jhotdraw.app.AbstractApplication: void addRecentFile(java.io.File)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void <init>()>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void addPropertyChangeListener(java.beans.PropertyChangeListener)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void removePropertyChangeListener(java.beans.PropertyChangeListener)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void firePropertyChange(java.lang.String,boolean,boolean)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void firePropertyChange(java.lang.String,int,int)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: org.jhotdraw.beans.AbstractBean clone()>;;0
org.jhotdraw.beans.AbstractBean;;<org.jhotdraw.beans.AbstractBean: java.lang.Object clone()>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void <init>(java.util.ResourceBundle)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: java.util.ResourceBundle getBundle()>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: java.lang.String getString(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: java.lang.Integer getInteger(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: javax.swing.ImageIcon getImageIcon(java.lang.String,java.lang.Class)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: char getMnemonic(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: char getMnem(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: java.lang.String getTip(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: javax.swing.KeyStroke getKeyStroke(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: javax.swing.KeyStroke getAcc(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: java.lang.String getFormatted(java.lang.String,java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: java.lang.String getFormatted(java.lang.String,java.lang.Object[])>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: org.jhotdraw.util.ResourceBundleUtil getLAFBundle(java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void setBaseClass(java.lang.Class)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: java.lang.Class getBaseClass()>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void configureAction(javax.swing.Action,java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void configureAction(javax.swing.Action,java.lang.String,java.lang.Class)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void configureButton(javax.swing.AbstractButton,java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void configureButton(javax.swing.AbstractButton,java.lang.String,java.lang.Class)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void configureToolBarButton(javax.swing.AbstractButton,java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void configureToolBarButton(javax.swing.AbstractButton,java.lang.String,java.lang.Class)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: void configureMenu(javax.swing.JMenuItem,java.lang.String)>;;0
org.jhotdraw.util.ResourceBundleUtil;;<org.jhotdraw.util.ResourceBundleUtil: org.jhotdraw.util.ResourceBundleUtil getLAFBundle(java.lang.String,java.util.Locale)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void <init>()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void init()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void initComponents()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void setApplication(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: org.jhotdraw.app.Application getApplication()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: javax.swing.JComponent getComponent()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: java.io.File getFile()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void setFile(java.io.File)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: javax.swing.JFileChooser getOpenChooser()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: javax.swing.JFileChooser createOpenChooser()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: javax.swing.JFileChooser getSaveChooser()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: javax.swing.JFileChooser createSaveChooser()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: boolean hasUnsavedChanges()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void setHasUnsavedChanges(boolean)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void dispose()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: javax.swing.Action getAction(java.lang.String)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void putAction(java.lang.String,javax.swing.Action)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void execute(java.lang.Runnable)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void setMultipleOpenId(int)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: int getMultipleOpenId()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void setShowing(boolean)>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: boolean isShowing()>;;0
org.jhotdraw.app.AbstractProject;;<org.jhotdraw.app.AbstractProject: void markChangesAsSaved()>;;0
org.jhotdraw.app.DefaultAppletApplication;;<org.jhotdraw.app.DefaultAppletApplication: void <init>(javax.swing.JApplet)>;;0
org.jhotdraw.app.DefaultAppletApplication;;<org.jhotdraw.app.DefaultAppletApplication: void show(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultAppletApplication;;<org.jhotdraw.app.DefaultAppletApplication: void hide(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultAppletApplication;;<org.jhotdraw.app.DefaultAppletApplication: org.jhotdraw.app.Project getCurrentProject()>;;0
org.jhotdraw.app.DefaultAppletApplication;;<org.jhotdraw.app.DefaultAppletApplication: boolean isSharingToolsAmongProjects()>;;0
org.jhotdraw.app.DefaultAppletApplication;;<org.jhotdraw.app.DefaultAppletApplication: java.awt.Component getComponent()>;;0
org.jhotdraw.app.DefaultAppletApplication;;<org.jhotdraw.app.DefaultAppletApplication: void initProjectActions(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void <init>()>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void setName(java.lang.String)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: java.lang.String getName()>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void setVersion(java.lang.String)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: java.lang.String getVersion()>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void setCopyright(java.lang.String)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: java.lang.String getCopyright()>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void setProjectClassName(java.lang.String)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void setProjectClass(java.lang.Class)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: java.lang.Class getProjectClass()>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: org.jhotdraw.app.Project createProject()>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: java.util.List createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: java.util.List createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void initApplication(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: javax.swing.Action getAction(java.lang.String)>;;0
org.jhotdraw.app.DefaultApplicationModel;;<org.jhotdraw.app.DefaultApplicationModel: void putAction(java.lang.String,javax.swing.Action)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void <init>()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void initApplicationActions()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void initProjectActions(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void launch(java.lang.String[])>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void init()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void initLookAndFeel()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void show(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void hide(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: org.jhotdraw.app.Project getCurrentProject()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void setCurrentProject(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: boolean isSharingToolsAmongProjects()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: java.awt.Component getComponent()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: java.awt.Component wrapDesktopPane(java.awt.Component,java.util.LinkedList)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void addStandardActionsTo(javax.swing.JToolBar)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: javax.swing.JMenuBar createMenuBar()>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void updateOpenRecentMenu(javax.swing.JMenu)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: javax.swing.JFrame access$0(org.jhotdraw.app.DefaultMDIApplication)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: java.util.LinkedList access$1(org.jhotdraw.app.DefaultMDIApplication)>;;0
org.jhotdraw.app.DefaultMDIApplication;;<org.jhotdraw.app.DefaultMDIApplication: void access$2(org.jhotdraw.app.DefaultMDIApplication,javax.swing.JMenu)>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void <clinit>()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void <init>()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void setArrangement(org.jhotdraw.app.action.Arrangeable$Arrangement)>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: org.jhotdraw.app.action.Arrangeable$Arrangement getArrangement()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void arrangeFramesCascading()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void tileFramesHorizontally()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void tileFramesVertically()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void arrangeFramesVertically()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void arrangeFramesHorizontally()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void setAllSize(java.awt.Dimension)>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void setAllSize(int,int)>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: void checkDesktopSize()>;;0
org.jhotdraw.gui.MDIDesktopPane;;<org.jhotdraw.gui.MDIDesktopPane: int[] $SWITCH_TABLE$org$jhotdraw$app$action$Arrangeable$Arrangement()>;;0
org.jhotdraw.app.action.DuplicateAction;;<org.jhotdraw.app.action.DuplicateAction: void <init>()>;;0
org.jhotdraw.app.action.DuplicateAction;;<org.jhotdraw.app.action.DuplicateAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.OpenRecentAction;;<org.jhotdraw.app.action.OpenRecentAction: void <init>(org.jhotdraw.app.Application,java.io.File)>;;0
org.jhotdraw.app.action.OpenRecentAction;;<org.jhotdraw.app.action.OpenRecentAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.OpenRecentAction;;<org.jhotdraw.app.action.OpenRecentAction: void openFile(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.OpenRecentAction;;<org.jhotdraw.app.action.OpenRecentAction: void fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.OpenRecentAction;;<org.jhotdraw.app.action.OpenRecentAction: java.io.File access$0(org.jhotdraw.app.action.OpenRecentAction)>;;0
org.jhotdraw.app.action.ClearRecentFilesAction;;<org.jhotdraw.app.action.ClearRecentFilesAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.ClearRecentFilesAction;;<org.jhotdraw.app.action.ClearRecentFilesAction: void installApplicationListeners(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.ClearRecentFilesAction;;<org.jhotdraw.app.action.ClearRecentFilesAction: java.beans.PropertyChangeListener createApplicationListener()>;;0
org.jhotdraw.app.action.ClearRecentFilesAction;;<org.jhotdraw.app.action.ClearRecentFilesAction: void uninstallApplicationListeners(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.ClearRecentFilesAction;;<org.jhotdraw.app.action.ClearRecentFilesAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ClearRecentFilesAction;;<org.jhotdraw.app.action.ClearRecentFilesAction: void updateEnabled()>;;0
org.jhotdraw.app.action.ClearRecentFilesAction;;<org.jhotdraw.app.action.ClearRecentFilesAction: void access$0(org.jhotdraw.app.action.ClearRecentFilesAction)>;;0
org.jhotdraw.app.action.Actions;;<org.jhotdraw.app.action.Actions: void <init>()>;;0
org.jhotdraw.app.action.Actions;;<org.jhotdraw.app.action.Actions: void configureJCheckBoxMenuItem(javax.swing.JCheckBoxMenuItem,javax.swing.Action)>;;0
org.jhotdraw.app.action.Actions;;<org.jhotdraw.app.action.Actions: void unconfigureJCheckBoxMenuItem(javax.swing.JCheckBoxMenuItem,javax.swing.Action)>;;0
org.jhotdraw.app.action.ToggleToolBarAction;;<org.jhotdraw.app.action.ToggleToolBarAction: void <init>(javax.swing.JToolBar,java.lang.String)>;;0
org.jhotdraw.app.action.ToggleToolBarAction;;<org.jhotdraw.app.action.ToggleToolBarAction: void putValue(java.lang.String,java.lang.Object)>;;0
org.jhotdraw.app.action.ToggleToolBarAction;;<org.jhotdraw.app.action.ToggleToolBarAction: void setToolBar(javax.swing.JToolBar)>;;0
org.jhotdraw.app.action.ToggleToolBarAction;;<org.jhotdraw.app.action.ToggleToolBarAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.RedoAction;;<org.jhotdraw.app.action.RedoAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.RedoAction;;<org.jhotdraw.app.action.RedoAction: void updateEnabledState()>;;0
org.jhotdraw.app.action.RedoAction;;<org.jhotdraw.app.action.RedoAction: void updateProject(org.jhotdraw.app.Project,org.jhotdraw.app.Project)>;;1
org.jhotdraw.app.action.RedoAction;;<org.jhotdraw.app.action.RedoAction: void installProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.RedoAction;;<org.jhotdraw.app.action.RedoAction: void uninstallProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.RedoAction;;<org.jhotdraw.app.action.RedoAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.RedoAction;;<org.jhotdraw.app.action.RedoAction: javax.swing.Action getRealRedoAction()>;;0
org.jhotdraw.app.action.NewAction;;<org.jhotdraw.app.action.NewAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.NewAction;;<org.jhotdraw.app.action.NewAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.OpenAction;;<org.jhotdraw.app.action.OpenAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.OpenAction;;<org.jhotdraw.app.action.OpenAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.OpenAction;;<org.jhotdraw.app.action.OpenAction: void openFile(javax.swing.JFileChooser,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.OpenAction;;<org.jhotdraw.app.action.OpenAction: void fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.CloseAction;;<org.jhotdraw.app.action.CloseAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.CloseAction;;<org.jhotdraw.app.action.CloseAction: void doIt(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.PasteAction;;<org.jhotdraw.app.action.PasteAction: void <init>()>;;0
org.jhotdraw.app.action.PasteAction;;<org.jhotdraw.app.action.PasteAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.UndoAction;;<org.jhotdraw.app.action.UndoAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.UndoAction;;<org.jhotdraw.app.action.UndoAction: void updateEnabledState()>;;0
org.jhotdraw.app.action.UndoAction;;<org.jhotdraw.app.action.UndoAction: void updateProject(org.jhotdraw.app.Project,org.jhotdraw.app.Project)>;;1
org.jhotdraw.app.action.UndoAction;;<org.jhotdraw.app.action.UndoAction: void installProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.UndoAction;;<org.jhotdraw.app.action.UndoAction: void uninstallProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.UndoAction;;<org.jhotdraw.app.action.UndoAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.UndoAction;;<org.jhotdraw.app.action.UndoAction: javax.swing.Action getRealRedoAction()>;;0
org.jhotdraw.app.action.SaveAction;;<org.jhotdraw.app.action.SaveAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.SaveAction;;<org.jhotdraw.app.action.SaveAction: void <init>(org.jhotdraw.app.Application,boolean)>;;0
org.jhotdraw.app.action.SaveAction;;<org.jhotdraw.app.action.SaveAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.SaveAction;;<org.jhotdraw.app.action.SaveAction: void saveToFile(org.jhotdraw.app.Project,java.io.File)>;;0
org.jhotdraw.app.action.SaveAction;;<org.jhotdraw.app.action.SaveAction: void fileSaved(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.SaveAction;;<org.jhotdraw.app.action.SaveAction: java.awt.Component access$0(org.jhotdraw.app.action.SaveAction)>;;0
org.jhotdraw.util.ReversedList;;<org.jhotdraw.util.ReversedList: void <init>(java.util.List)>;;0
org.jhotdraw.util.ReversedList;;<org.jhotdraw.util.ReversedList: java.lang.Object get(int)>;;0
org.jhotdraw.util.ReversedList;;<org.jhotdraw.util.ReversedList: int size()>;;0
org.jhotdraw.app.action.AboutAction;;<org.jhotdraw.app.action.AboutAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.AboutAction;;<org.jhotdraw.app.action.AboutAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void saveChanges()>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void reviewChanges()>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void saveChangesAndReviewNext()>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void reviewNext()>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void saveToFile(java.io.File)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void saveToFileAndReviewNext(java.io.File)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void fileSaved(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void fileSavedAndReviewNext(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: void doExit()>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: org.jhotdraw.app.Project access$0(org.jhotdraw.app.action.ExitAction)>;;0
org.jhotdraw.app.action.ExitAction;;<org.jhotdraw.app.action.ExitAction: java.awt.Component access$1(org.jhotdraw.app.action.ExitAction)>;;0
org.jhotdraw.app.action.CutAction;;<org.jhotdraw.app.action.CutAction: void <init>()>;;0
org.jhotdraw.app.action.CutAction;;<org.jhotdraw.app.action.CutAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.CopyAction;;<org.jhotdraw.app.action.CopyAction: void <init>()>;;0
org.jhotdraw.app.action.CopyAction;;<org.jhotdraw.app.action.CopyAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.FocusAction;;<org.jhotdraw.app.action.FocusAction: void <init>(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.FocusAction;;<org.jhotdraw.app.action.FocusAction: java.lang.Object getValue(java.lang.String)>;;0
org.jhotdraw.app.action.FocusAction;;<org.jhotdraw.app.action.FocusAction: java.lang.String getTitle()>;;0
org.jhotdraw.app.action.FocusAction;;<org.jhotdraw.app.action.FocusAction: javax.swing.JFrame getFrame()>;;0
org.jhotdraw.app.action.FocusAction;;<org.jhotdraw.app.action.FocusAction: java.awt.Component getRootPaneContainer()>;;0
org.jhotdraw.app.action.FocusAction;;<org.jhotdraw.app.action.FocusAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.SaveAsAction;;<org.jhotdraw.app.action.SaveAsAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.SelectAllAction;;<org.jhotdraw.app.action.SelectAllAction: void <init>()>;;0
org.jhotdraw.app.action.SelectAllAction;;<org.jhotdraw.app.action.SelectAllAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.OSXDropOnDockAction;;<org.jhotdraw.app.action.OSXDropOnDockAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.OSXDropOnDockAction;;<org.jhotdraw.app.action.OSXDropOnDockAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.util.prefs.PreferencesUtil;;<org.jhotdraw.util.prefs.PreferencesUtil: void <init>()>;;0
org.jhotdraw.util.prefs.PreferencesUtil;;<org.jhotdraw.util.prefs.PreferencesUtil: void installFramePrefsHandler(java.util.prefs.Preferences,java.lang.String,java.awt.Window)>;;0
org.jhotdraw.util.prefs.PreferencesUtil;;<org.jhotdraw.util.prefs.PreferencesUtil: void installPalettePrefsHandler(java.util.prefs.Preferences,java.lang.String,java.awt.Window)>;;0
org.jhotdraw.util.prefs.PreferencesUtil;;<org.jhotdraw.util.prefs.PreferencesUtil: void installPalettePrefsHandler(java.util.prefs.Preferences,java.lang.String,java.awt.Window,int)>;;0
org.jhotdraw.util.prefs.PreferencesUtil;;<org.jhotdraw.util.prefs.PreferencesUtil: void installInternalFramePrefsHandler(java.util.prefs.Preferences,java.lang.String,javax.swing.JInternalFrame,javax.swing.JDesktopPane)>;;0
org.jhotdraw.util.prefs.PreferencesUtil;;<org.jhotdraw.util.prefs.PreferencesUtil: void installToolBarPrefsHandler(java.util.prefs.Preferences,java.lang.String,javax.swing.JToolBar)>;;0
org.jhotdraw.app.action.DeleteAction;;<org.jhotdraw.app.action.DeleteAction: void <init>()>;;0
org.jhotdraw.app.action.DeleteAction;;<org.jhotdraw.app.action.DeleteAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.DeleteAction;;<org.jhotdraw.app.action.DeleteAction: void deleteNextChar(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ArrangeAction;;<org.jhotdraw.app.action.ArrangeAction: void <init>(org.jhotdraw.app.action.Arrangeable,org.jhotdraw.app.action.Arrangeable$Arrangement)>;;0
org.jhotdraw.app.action.ArrangeAction;;<org.jhotdraw.app.action.ArrangeAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ArrangeAction;;<org.jhotdraw.app.action.ArrangeAction: int[] $SWITCH_TABLE$org$jhotdraw$app$action$Arrangeable$Arrangement()>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: void installApplicationListeners(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: void uninstallApplicationListeners(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: java.beans.PropertyChangeListener createApplicationListener()>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: org.jhotdraw.app.Application getApplication()>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: void updateApplicationEnabled()>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: boolean isEnabled()>;;0
org.jhotdraw.app.action.AbstractApplicationAction;;<org.jhotdraw.app.action.AbstractApplicationAction: void setEnabled(boolean)>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: void <init>(org.jhotdraw.app.Application)>;;1
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: void updateProject(org.jhotdraw.app.Project,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: void installProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: void uninstallProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: void updateEnabled(boolean,boolean)>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: org.jhotdraw.app.Application getApplication()>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: org.jhotdraw.app.Project getCurrentProject()>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: boolean isEnabled()>;;0
org.jhotdraw.app.action.AbstractProjectAction;;<org.jhotdraw.app.action.AbstractProjectAction: void setEnabled(boolean)>;;0
org.jhotdraw.app.action.SaveBeforeAction;;<org.jhotdraw.app.action.SaveBeforeAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.SaveBeforeAction;;<org.jhotdraw.app.action.SaveBeforeAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.SaveBeforeAction;;<org.jhotdraw.app.action.SaveBeforeAction: void saveChanges(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.SaveBeforeAction;;<org.jhotdraw.app.action.SaveBeforeAction: void saveToFile(org.jhotdraw.app.Project,java.io.File)>;;0
org.jhotdraw.app.action.SaveBeforeAction;;<org.jhotdraw.app.action.SaveBeforeAction: void fileSaved(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.SaveBeforeAction;;<org.jhotdraw.app.action.SaveBeforeAction: java.awt.Component access$0(org.jhotdraw.app.action.SaveBeforeAction)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void <init>()>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void init()>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void launch(java.lang.String[])>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void initLookAndFeel()>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void initApplicationActions()>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void initProjectActions(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void addPalette(java.awt.Window)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void removePalette(java.awt.Window)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void show(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void hide(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: javax.swing.JMenuBar createMenuBar(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void updateOpenRecentMenu(javax.swing.JMenu)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: org.jhotdraw.app.Project getCurrentProject()>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void setCurrentProject(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void initScreenMenuBar()>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void initPalettes(java.util.LinkedList)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: void addStandardActionsTo(javax.swing.JToolBar)>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: boolean isSharingToolsAmongProjects()>;;0
org.jhotdraw.app.DefaultOSXApplication;;<org.jhotdraw.app.DefaultOSXApplication: java.awt.Component getComponent()>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void <init>(org.jhotdraw.app.DefaultOSXApplication)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void add(java.awt.Window,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void remove(java.awt.Window,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void addPalette(java.awt.Window)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void removePalette(java.awt.Window)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: java.util.Set getPalettes()>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void showPalettes()>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: boolean isFocused(java.awt.Window)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void maybeHidePalettes()>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: javax.swing.Timer access$0(org.jhotdraw.app.OSXPaletteHandler)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: java.util.HashMap access$1(org.jhotdraw.app.OSXPaletteHandler)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: org.jhotdraw.app.DefaultOSXApplication access$2(org.jhotdraw.app.OSXPaletteHandler)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void access$3(org.jhotdraw.app.OSXPaletteHandler)>;;0
org.jhotdraw.app.OSXPaletteHandler;;<org.jhotdraw.app.OSXPaletteHandler: void access$4(org.jhotdraw.app.OSXPaletteHandler)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void <init>()>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void launch(java.lang.String[])>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void init()>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void remove(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void initLookAndFeel()>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void initApplicationActions()>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void initProjectActions(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void show(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: java.awt.Component wrapProjectComponent(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void addStandardActionsTo(javax.swing.JToolBar,org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void hide(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void dispose(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: org.jhotdraw.app.Project getCurrentProject()>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void setCurrentProject(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: javax.swing.JMenuBar createMenuBar(org.jhotdraw.app.Project,java.util.List)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void updateOpenRecentMenu(javax.swing.JMenu)>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: boolean isSharingToolsAmongProjects()>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: java.awt.Component getComponent()>;;0
org.jhotdraw.app.DefaultSDIApplication;;<org.jhotdraw.app.DefaultSDIApplication: void access$0(org.jhotdraw.app.DefaultSDIApplication,javax.swing.JMenu)>;;0
org.jhotdraw.app.action.LoadAction;;<org.jhotdraw.app.action.LoadAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.LoadAction;;<org.jhotdraw.app.action.LoadAction: void doIt(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.LoadAction;;<org.jhotdraw.app.action.LoadAction: void openFile(org.jhotdraw.app.Project,javax.swing.JFileChooser)>;;0
org.jhotdraw.app.action.LoadAction;;<org.jhotdraw.app.action.LoadAction: void fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.ClearAction;;<org.jhotdraw.app.action.ClearAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.ClearAction;;<org.jhotdraw.app.action.ClearAction: void doIt(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.ToggleVisibleAction;;<org.jhotdraw.app.action.ToggleVisibleAction: void <init>(java.awt.Component,java.lang.String)>;;0
org.jhotdraw.app.action.ToggleVisibleAction;;<org.jhotdraw.app.action.ToggleVisibleAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ToggleVisibleAction;;<org.jhotdraw.app.action.ToggleVisibleAction: java.awt.Component access$0(org.jhotdraw.app.action.ToggleVisibleAction)>;;0
org.jhotdraw.app.action.LoadRecentAction;;<org.jhotdraw.app.action.LoadRecentAction: void <init>(org.jhotdraw.app.Application,java.io.File)>;;0
org.jhotdraw.app.action.LoadRecentAction;;<org.jhotdraw.app.action.LoadRecentAction: void doIt(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.LoadRecentAction;;<org.jhotdraw.app.action.LoadRecentAction: void fileOpened(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.LoadRecentAction;;<org.jhotdraw.app.action.LoadRecentAction: java.io.File access$0(org.jhotdraw.app.action.LoadRecentAction)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void <init>(java.awt.Frame)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void <init>(java.awt.Dialog)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void init()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: boolean isShowAsSheet()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void installSheet()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void uninstallSheet()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void addNotify()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void setAnimated(boolean)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: boolean isAnimated()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void dispose()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void hide0()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void show0()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void hide()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void show()>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void addSheetListener(org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void removeSheetListener(org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void fireOptionSelected(javax.swing.JOptionPane)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void fireOptionSelected(javax.swing.JOptionPane,int,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void fireOptionSelected(javax.swing.JFileChooser,int)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showSheet(javax.swing.JOptionPane,java.awt.Component,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showConfirmSheet(java.awt.Component,java.lang.Object,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showConfirmSheet(java.awt.Component,java.lang.Object,int,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showConfirmSheet(java.awt.Component,java.lang.Object,int,int,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showConfirmSheet(java.awt.Component,java.lang.Object,int,int,javax.swing.Icon,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showInputSheet(java.awt.Component,java.lang.Object,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showInputSheet(java.awt.Component,java.lang.Object,java.lang.Object,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showInputSheet(java.awt.Component,java.lang.Object,int,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showInputSheet(java.awt.Component,java.lang.Object,int,javax.swing.Icon,java.lang.Object[],java.lang.Object,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showMessageSheet(java.awt.Component,java.lang.Object)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showMessageSheet(java.awt.Component,java.lang.Object,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showMessageSheet(java.awt.Component,java.lang.Object,int)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showMessageSheet(java.awt.Component,java.lang.Object,int,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showMessageSheet(java.awt.Component,java.lang.Object,int,javax.swing.Icon,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showOptionSheet(java.awt.Component,java.lang.Object,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: int styleFromMessageType(int)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: org.jhotdraw.gui.JSheet createSheet(javax.swing.JOptionPane,java.awt.Component,int)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: java.awt.Window getWindowForComponent(java.awt.Component)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showSaveSheet(javax.swing.JFileChooser,java.awt.Component,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showOpenSheet(javax.swing.JFileChooser,java.awt.Component,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void showSheet(javax.swing.JFileChooser,java.awt.Component,java.lang.String,org.jhotdraw.gui.event.SheetListener)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: java.awt.Point access$0(org.jhotdraw.gui.JSheet)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void access$1(org.jhotdraw.gui.JSheet,java.awt.Point)>;;0
org.jhotdraw.gui.JSheet;;<org.jhotdraw.gui.JSheet: void access$2(org.jhotdraw.gui.JSheet,java.awt.Point)>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: void <init>(org.jhotdraw.gui.JSheet)>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: void <init>(org.jhotdraw.gui.JSheet,javax.swing.JFileChooser,int,java.lang.Object)>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: void <init>(org.jhotdraw.gui.JSheet,javax.swing.JOptionPane,int,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: javax.swing.JComponent getPane()>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: javax.swing.JFileChooser getFileChooser()>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: javax.swing.JOptionPane getOptionPane()>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: int getOption()>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: java.lang.Object getValue()>;;0
org.jhotdraw.gui.event.SheetEvent;;<org.jhotdraw.gui.event.SheetEvent: java.lang.Object getInputValue()>;;0
org.jhotdraw.util.Worker;;<org.jhotdraw.util.Worker: void <init>()>;;0
org.jhotdraw.util.Worker;;<org.jhotdraw.util.Worker: void run()>;;0
org.jhotdraw.util.Worker;;<org.jhotdraw.util.Worker: java.lang.Object getValue()>;;0
org.jhotdraw.util.Worker;;<org.jhotdraw.util.Worker: void setValue(java.lang.Object)>;;0
org.jhotdraw.util.Worker;;<org.jhotdraw.util.Worker: void start()>;;0
org.jhotdraw.app.action.ExportAction;;<org.jhotdraw.app.action.ExportAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.ExportAction;;<org.jhotdraw.app.action.ExportAction: javax.swing.JFileChooser getExportChooser(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.ExportAction;;<org.jhotdraw.app.action.ExportAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ExportAction;;<org.jhotdraw.app.action.ExportAction: void exportToFile(org.jhotdraw.app.Project,java.io.File,javax.swing.filechooser.FileFilter,java.awt.Component)>;;0
org.jhotdraw.app.action.ExportAction;;<org.jhotdraw.app.action.ExportAction: void fileExported(org.jhotdraw.app.Project,java.io.File,java.lang.Object)>;;0
org.jhotdraw.app.action.ExportAction;;<org.jhotdraw.app.action.ExportAction: java.awt.Component access$0(org.jhotdraw.app.action.ExportAction)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: void <init>()>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invoke(java.lang.Object,java.lang.String)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.String)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invokeStatic(java.lang.Class,java.lang.String)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invokeStatic(java.lang.String,java.lang.String)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invokeStatic(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Object[])>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invokeStatic(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[])>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invokeStatic(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.Object)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: int invokeGetter(java.lang.Object,java.lang.String,int)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: long invokeGetter(java.lang.Object,java.lang.String,long)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: boolean invokeGetter(java.lang.Object,java.lang.String,boolean)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invokeGetter(java.lang.Object,java.lang.String,java.lang.Object)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: boolean invokeStaticGetter(java.lang.Class,java.lang.String,boolean)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invoke(java.lang.Object,java.lang.String,boolean)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invoke(java.lang.Object,java.lang.String,int)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invoke(java.lang.Object,java.lang.String,float)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: java.lang.Object invoke(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: void invokeIfExists(java.lang.Object,java.lang.String)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: void invokeIfExists(java.lang.Object,java.lang.String,float)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: void invokeIfExists(java.lang.Object,java.lang.String,boolean)>;;0
org.jhotdraw.util.Methods;;<org.jhotdraw.util.Methods: void invokeIfExists(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object)>;;0
org.jhotdraw.app.action.MaximizeAction;;<org.jhotdraw.app.action.MaximizeAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.MaximizeAction;;<org.jhotdraw.app.action.MaximizeAction: javax.swing.JFrame getFrame()>;;0
org.jhotdraw.app.action.MaximizeAction;;<org.jhotdraw.app.action.MaximizeAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.MinimizeAction;;<org.jhotdraw.app.action.MinimizeAction: void <init>(org.jhotdraw.app.Application)>;;0
org.jhotdraw.app.action.MinimizeAction;;<org.jhotdraw.app.action.MinimizeAction: javax.swing.JFrame getFrame()>;;0
org.jhotdraw.app.action.MinimizeAction;;<org.jhotdraw.app.action.MinimizeAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.OSXTogglePaletteAction;;<org.jhotdraw.app.action.OSXTogglePaletteAction: void <init>(org.jhotdraw.app.DefaultOSXApplication,java.awt.Window,java.lang.String)>;;0
org.jhotdraw.app.action.OSXTogglePaletteAction;;<org.jhotdraw.app.action.OSXTogglePaletteAction: void putValue(java.lang.String,java.lang.Object)>;;0
org.jhotdraw.app.action.OSXTogglePaletteAction;;<org.jhotdraw.app.action.OSXTogglePaletteAction: void setPalette(java.awt.Window)>;;0
org.jhotdraw.app.action.OSXTogglePaletteAction;;<org.jhotdraw.app.action.OSXTogglePaletteAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: void <init>(org.jhotdraw.app.Application,java.lang.String,java.lang.Object)>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: void <init>(org.jhotdraw.app.Application,java.lang.String,java.lang.Class,java.lang.Object)>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: void installProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: void uninstallProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: void updateSelectedState()>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: java.lang.String access$0(org.jhotdraw.app.action.ProjectPropertyAction)>;;0
org.jhotdraw.app.action.ProjectPropertyAction;;<org.jhotdraw.app.action.ProjectPropertyAction: void access$1(org.jhotdraw.app.action.ProjectPropertyAction)>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: void <init>(org.jhotdraw.app.Application,java.lang.String)>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: void <init>(org.jhotdraw.app.Application,java.lang.String,java.lang.Class,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: java.lang.Object getCurrentValue()>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: void installProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: void uninstallProjectListeners(org.jhotdraw.app.Project)>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: void updateSelectedState()>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: java.lang.String access$0(org.jhotdraw.app.action.ToggleProjectPropertyAction)>;;0
org.jhotdraw.app.action.ToggleProjectPropertyAction;;<org.jhotdraw.app.action.ToggleProjectPropertyAction: void access$1(org.jhotdraw.app.action.ToggleProjectPropertyAction)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void <init>()>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;1
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void setAttributeEnabled(org.jhotdraw.draw.AttributeKey,boolean)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: boolean isAttributeEnabled(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void setAttributes(java.util.HashMap)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: java.util.Map getAttributes()>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void basicSetAttributeOnChildren(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: java.lang.Object getAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void drawFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void drawChildren(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void drawConnectors(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: java.awt.Stroke getStroke()>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: double getStrokeMiterLimitFactor()>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void drawText(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: org.jhotdraw.draw.AbstractAttributedCompositeFigure clone()>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: org.jhotdraw.draw.AttributeKey getAttributeKey(java.lang.String)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void applyAttributesTo(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: void removeAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: boolean hasAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.AbstractAttributedCompositeFigure;;<org.jhotdraw.draw.AbstractAttributedCompositeFigure: org.jhotdraw.draw.AbstractCompositeFigure clone()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void <init>()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void add(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void add(int,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void addAll(java.util.Collection)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void basicAdd(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void basicAdd(int,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void basicAddAll(java.util.Collection)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void addNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void removeNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: boolean remove(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.Figure removeChild(int)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: boolean basicRemove(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.Figure basicRemoveChild(int)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void removeAllChildren()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void basicRemoveAllChildren()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void sendToBack(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void sendToFront(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void undoableEditHappened(javax.swing.event.UndoableEditEvent)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.util.List getChildren()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: int getChildCount()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.Figure getChild(int)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.util.List getChildrenFrontToBack()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.lang.Object getAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.Figure findFigureInside(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.Figure findChild(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: int findChildIndex(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.Layouter getLayouter()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void layout()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void setLayouter(org.jhotdraw.draw.Layouter)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.geom.Dimension2DDouble getPreferredSize()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void drawFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void drawConnectors(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.AbstractCompositeFigure clone()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void invalidateBounds()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.util.Collection getDecomposition()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.util.Map getAttributes()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void willChange()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void changed()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void invalidate()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void validate()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: void removeAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: boolean hasAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.AbstractCompositeFigure;;<org.jhotdraw.draw.AbstractCompositeFigure: org.jhotdraw.draw.AbstractFigure clone()>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: void <init>(java.lang.String)>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: void <init>(java.lang.String,java.lang.Object)>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: void <init>(java.lang.String,java.lang.Object,boolean)>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: java.lang.String getKey()>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: java.lang.Object getDefaultValue()>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: java.lang.Object get(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: void set(org.jhotdraw.draw.Figure,java.lang.Object)>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: void basicSet(org.jhotdraw.draw.Figure,java.lang.Object)>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: boolean equals(java.lang.Object)>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: int hashCode()>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: java.lang.String toString()>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: boolean isNullValueAllowed()>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: void main(java.lang.String[])>;;0
org.jhotdraw.draw.AttributeKey;;<org.jhotdraw.draw.AttributeKey: boolean isAssignable(java.lang.Object)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void <init>()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void addFigureListener(org.jhotdraw.draw.FigureListener)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void removeFigureListener(org.jhotdraw.draw.FigureListener)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void addNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void removeNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.lang.Object getLock()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void setDrawDecoratorFirst(boolean)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean isDrawDecoratorFirst()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireAreaInvalidated()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireAreaInvalidated(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireFigureRequestRemove()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireFigureAdded()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireFigureRemoved()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireFigureChanged()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireFigureChanged(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireFigureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireAttributeChanged(org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void fireUndoableEditHappened(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.AbstractFigure clone()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.AbstractFigure basicClone(java.util.HashMap)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void remap(java.util.HashMap)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.awt.Cursor getCursor(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void setBounds(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void setBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean canConnect()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void invalidate()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean isChanging()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: int getChangingDepth()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void willChange()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void validate()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void changed()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void transform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean includes(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.Figure findFigureInside(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.Connector findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.util.Collection getActions(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.Tool getTool(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean handleMouseClick(java.awt.geom.Point2D$Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean handleDrop(java.awt.geom.Point2D$Double,java.util.Collection,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.awt.geom.Point2D$Double getEndPoint()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.awt.geom.Point2D$Double getStartPoint()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.geom.Dimension2DDouble getPreferredSize()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void remap(java.util.Map)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean isInteractive()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void setInteractive(boolean)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean isVisible()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void setVisible(boolean)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void setConnectorsVisible(boolean,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: boolean isConnectorsVisible()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.ConnectionFigure getCourtingConnection()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.util.Collection getDecomposition()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.awt.font.FontRenderContext getFontRenderContext()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void requestRemove()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: int getLayer()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.lang.String getTooltip(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void setDecorator(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: org.jhotdraw.draw.Figure getDecorator()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void drawDecorator(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: void updateDecoratorBounds()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.awt.geom.Rectangle2D$Double getDrawBounds()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.lang.String toString()>;;0
org.jhotdraw.draw.AbstractFigure;;<org.jhotdraw.draw.AbstractFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.CompositeFigure;;<org.jhotdraw.draw.CompositeFigure: void <clinit>()>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: void <init>()>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: void <init>(org.jhotdraw.geom.Dimension2DDouble)>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: void <init>(double,double)>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: double getWidth()>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: double getHeight()>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: void setSize(double,double)>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: org.jhotdraw.geom.Dimension2DDouble getSize()>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: void setSize(org.jhotdraw.geom.Dimension2DDouble)>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: boolean equals(java.lang.Object)>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: int hashCode()>;;0
org.jhotdraw.geom.Dimension2DDouble;;<org.jhotdraw.geom.Dimension2DDouble: java.lang.String toString()>;;0
org.jhotdraw.draw.FigureEvent;;<org.jhotdraw.draw.FigureEvent: void <init>(org.jhotdraw.draw.Figure,java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.FigureEvent;;<org.jhotdraw.draw.FigureEvent: void <init>(org.jhotdraw.draw.Figure,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.draw.FigureEvent;;<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.Figure getFigure()>;;0
org.jhotdraw.draw.FigureEvent;;<org.jhotdraw.draw.FigureEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>;;0
org.jhotdraw.draw.FigureEvent;;<org.jhotdraw.draw.FigureEvent: org.jhotdraw.draw.AttributeKey getAttribute()>;;0
org.jhotdraw.draw.FigureEvent;;<org.jhotdraw.draw.FigureEvent: java.lang.Object getOldValue()>;;0
org.jhotdraw.draw.FigureEvent;;<org.jhotdraw.draw.FigureEvent: java.lang.Object getNewValue()>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: void <clinit>()>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: void <init>()>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: double getStrokeTotalWidth(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: java.awt.Stroke getStroke(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: java.awt.Font getFont(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: int getFontStyle(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: double getPerpendicularFillGrowth(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: double getPerpendicularDrawGrowth(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: double getPerpendicularHitGrowth(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokeType()>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokePlacement()>;;0
org.jhotdraw.draw.AttributeKeys;;<org.jhotdraw.draw.AttributeKeys: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$Underfill()>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: void <init>()>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: boolean lineContainsPoint(int,int,int,int,int,int)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: boolean lineContainsPoint(int,int,int,int,int,int,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: boolean lineContainsPoint(double,double,double,double,double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: int direction(int,int,int,int)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: int direction(double,double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: int outcode(java.awt.Rectangle,java.awt.Rectangle)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: int outcode(java.awt.geom.Rectangle2D$Double,java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point south(java.awt.Rectangle)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double south(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point center(java.awt.Rectangle)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double center(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double chop(java.awt.Shape,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point west(java.awt.Rectangle)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double west(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point east(java.awt.Rectangle)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double east(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point north(java.awt.Rectangle)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double north(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: int range(int,int,int)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double range(double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: long length2(int,int,int,int)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: long length(int,int,int,int)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double length2(double,double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double length(double,double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double length(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double cap(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double pointToAngle(java.awt.Rectangle,java.awt.Point)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double pointToAngle(java.awt.geom.Rectangle2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double angle(double,double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point angleToPoint(java.awt.Rectangle,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double angleToPoint(java.awt.geom.Rectangle2D$Double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point polarToPoint(double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double polarToPoint2D(double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point ovalAngleToPoint(java.awt.Rectangle,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double ovalAngleToPoint(java.awt.geom.Rectangle2D$Double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.Point intersect(int,int,int,int,int,int,int,int)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double intersect(double,double,double,double,double,double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: java.awt.geom.Point2D$Double intersect(double,double,double,double,double,double,double,double,double)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: double distanceFromLine(int,int,int,int,int,int)>;;0
org.jhotdraw.geom.Geom;;<org.jhotdraw.geom.Geom: void grow(java.awt.geom.Rectangle2D$Double,double,double)>;;0
org.jhotdraw.draw.AttributeChangeEdit;;<org.jhotdraw.draw.AttributeChangeEdit: void <init>(org.jhotdraw.draw.Figure,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.draw.AttributeChangeEdit;;<org.jhotdraw.draw.AttributeChangeEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.draw.AttributeChangeEdit;;<org.jhotdraw.draw.AttributeChangeEdit: void redo()>;;0
org.jhotdraw.draw.AttributeChangeEdit;;<org.jhotdraw.draw.AttributeChangeEdit: void undo()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void <init>()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void setConnectToDecorator(boolean)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: boolean isConnectToDecorator()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void setVisible(boolean)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: boolean isVisible()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: org.jhotdraw.draw.Figure getConnectorTarget(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: java.awt.geom.Point2D$Double findStart(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: java.awt.geom.Point2D$Double findEnd(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: java.awt.geom.Point2D$Double findPoint(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: org.jhotdraw.draw.Figure getOwner()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void setOwner(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: java.lang.Object clone()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void updateStartLocation(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void updateEndLocation(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: java.awt.geom.Point2D$Double getAnchor()>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void updateAnchor(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.AbstractConnector;;<org.jhotdraw.draw.AbstractConnector: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void <clinit>()>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void <init>()>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void addDrawingListener(org.jhotdraw.draw.DrawingListener)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void removeDrawingListener(org.jhotdraw.draw.DrawingListener)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void addAll(java.util.Collection)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void clear()>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: int getFigureCount()>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void removeAll(java.util.Collection)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void basicAddAll(java.util.Collection)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void basicRemoveAll(java.util.Collection)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void add(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void basicAdd(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void remove(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void fireAreaInvalidated(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void fireUndoableEditHappened(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void fireFigureAdded(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void fireFigureRemoved(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: java.awt.font.FontRenderContext getFontRenderContext()>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void setFontRenderContext(java.awt.font.FontRenderContext)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AbstractDrawing;;<org.jhotdraw.draw.AbstractDrawing: java.lang.Object getLock()>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: void setVerbose(boolean)>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: void <init>()>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: void <init>(boolean)>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: void <init>(java.lang.String)>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: void <init>(java.lang.String,boolean)>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: java.lang.String getUndoPresentationName()>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: java.lang.String getRedoPresentationName()>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: boolean isSignificant()>;;0
org.jhotdraw.undo.CompositeEdit;;<org.jhotdraw.undo.CompositeEdit: void setSignificant(boolean)>;;0
org.jhotdraw.draw.DrawingEvent;;<org.jhotdraw.draw.DrawingEvent: void <init>(org.jhotdraw.draw.Drawing,org.jhotdraw.draw.Figure,java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.DrawingEvent;;<org.jhotdraw.draw.DrawingEvent: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.draw.DrawingEvent;;<org.jhotdraw.draw.DrawingEvent: org.jhotdraw.draw.Figure getFigure()>;;0
org.jhotdraw.draw.DrawingEvent;;<org.jhotdraw.draw.DrawingEvent: java.awt.geom.Rectangle2D$Double getInvalidatedArea()>;;0
org.jhotdraw.draw.SetBoundsEdit;;<org.jhotdraw.draw.SetBoundsEdit: void <init>(org.jhotdraw.draw.AbstractFigure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.SetBoundsEdit;;<org.jhotdraw.draw.SetBoundsEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.draw.SetBoundsEdit;;<org.jhotdraw.draw.SetBoundsEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.SetBoundsEdit;;<org.jhotdraw.draw.SetBoundsEdit: boolean replaceEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.SetBoundsEdit;;<org.jhotdraw.draw.SetBoundsEdit: void redo()>;;0
org.jhotdraw.draw.SetBoundsEdit;;<org.jhotdraw.draw.SetBoundsEdit: void undo()>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: void <init>()>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: void addLeadHandles(org.jhotdraw.draw.Figure,java.util.Collection)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: void addEdgeHandles(org.jhotdraw.draw.Figure,java.util.Collection)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: void addBoxHandles(org.jhotdraw.draw.Figure,java.util.Collection)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle south(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle southEast(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle southWest(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle north(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle northEast(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle northWest(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle east(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BoxHandleKit;;<org.jhotdraw.draw.BoxHandleKit: org.jhotdraw.draw.Handle west(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: void <init>(org.jhotdraw.draw.Figure,java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: void <init>(java.util.Collection,java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: boolean replaceEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: void redo()>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: void undo()>;;0
org.jhotdraw.draw.TransformEdit;;<org.jhotdraw.draw.TransformEdit: java.lang.String toString()>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: void <init>()>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: void <init>(double,double,double,double)>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: boolean equals(java.lang.Object)>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: int hashCode()>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: java.lang.String toString()>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: java.lang.Object clone()>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.geom.Insets2DDouble;;<org.jhotdraw.geom.Insets2DDouble: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.Options;;<org.jhotdraw.draw.Options: void <init>()>;;0
org.jhotdraw.draw.Options;;<org.jhotdraw.draw.Options: boolean isFractionalMetrics()>;;0
org.jhotdraw.draw.Options;;<org.jhotdraw.draw.Options: boolean isTextAntialiased()>;;0
org.jhotdraw.draw.ChopBoxConnector;;<org.jhotdraw.draw.ChopBoxConnector: void <init>()>;;0
org.jhotdraw.draw.ChopBoxConnector;;<org.jhotdraw.draw.ChopBoxConnector: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChopBoxConnector;;<org.jhotdraw.draw.ChopBoxConnector: java.awt.geom.Point2D$Double findStart(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ChopBoxConnector;;<org.jhotdraw.draw.ChopBoxConnector: java.awt.geom.Point2D$Double findEnd(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ChopBoxConnector;;<org.jhotdraw.draw.ChopBoxConnector: java.awt.geom.Point2D$Double chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.ChopBoxConnector;;<org.jhotdraw.draw.ChopBoxConnector: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokePlacement()>;;0
org.jhotdraw.draw.AbstractFigureListener;;<org.jhotdraw.draw.AbstractFigureListener: void <init>()>;;0
org.jhotdraw.draw.AbstractFigureListener;;<org.jhotdraw.draw.AbstractFigureListener: void figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractFigureListener;;<org.jhotdraw.draw.AbstractFigureListener: void figureAttributeChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractFigureListener;;<org.jhotdraw.draw.AbstractFigureListener: void figureAdded(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractFigureListener;;<org.jhotdraw.draw.AbstractFigureListener: void figureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractFigureListener;;<org.jhotdraw.draw.AbstractFigureListener: void figureRemoved(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractFigureListener;;<org.jhotdraw.draw.AbstractFigureListener: void figureRequestRemove(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: int getHandlesize()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void addHandleListener(org.jhotdraw.draw.HandleListener)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void removeHandleListener(org.jhotdraw.draw.HandleListener)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: org.jhotdraw.draw.Figure getOwner()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void setView(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void fireAreaInvalidated(java.awt.Rectangle)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void fireUndoableEditHappened(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void fireHandleRequestRemove(java.awt.Rectangle)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void fireHandleRequestSecondaryHandles()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void drawCircle(java.awt.Graphics2D,java.awt.Color,java.awt.Color)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void drawRectangle(java.awt.Graphics2D,java.awt.Color,java.awt.Color)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void drawDiamond(java.awt.Graphics2D,java.awt.Color,java.awt.Color)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: boolean contains(java.awt.Point)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void invalidate()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void dispose()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void figureAdded(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void figureRemoved(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void figureRequestRemove(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void figureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: java.awt.Cursor getCursor()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: boolean isCombinableWith(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void keyTyped(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void keyReleased(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void keyPressed(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: java.awt.Rectangle getBounds()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: java.awt.Rectangle getDrawBounds()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void updateBounds()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void trackDoubleClick(java.awt.Point,int)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void figureAttributeChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: void viewTransformChanged()>;;0
org.jhotdraw.draw.AbstractHandle;;<org.jhotdraw.draw.AbstractHandle: java.util.Collection createSecondaryHandles()>;;0
org.jhotdraw.draw.HandleEvent;;<org.jhotdraw.draw.HandleEvent: void <init>(org.jhotdraw.draw.Handle,java.awt.Rectangle)>;;0
org.jhotdraw.draw.HandleEvent;;<org.jhotdraw.draw.HandleEvent: org.jhotdraw.draw.Handle getHandle()>;;0
org.jhotdraw.draw.HandleEvent;;<org.jhotdraw.draw.HandleEvent: java.awt.Rectangle getInvalidatedArea()>;;0
org.jhotdraw.draw.AbstractLayouter;;<org.jhotdraw.draw.AbstractLayouter: void <init>()>;;0
org.jhotdraw.draw.AbstractLayouter;;<org.jhotdraw.draw.AbstractLayouter: org.jhotdraw.geom.Insets2DDouble getInsets(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: void <init>(boolean,boolean,boolean)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: boolean isFilled()>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: boolean isStroked()>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: boolean isSolid()>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: void draw(java.awt.Graphics2D,org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: java.awt.geom.Rectangle2D$Double getDrawBounds(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: double getDecorationRadius(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: java.awt.geom.GeneralPath getTransformedDecoratorPath(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: void setFilled(boolean)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: void setStroked(boolean)>;;0
org.jhotdraw.draw.AbstractLineDecoration;;<org.jhotdraw.draw.AbstractLineDecoration: void setSolid(boolean)>;;0
org.jhotdraw.draw.AbstractLocator;;<org.jhotdraw.draw.AbstractLocator: void <init>()>;;0
org.jhotdraw.draw.AbstractLocator;;<org.jhotdraw.draw.AbstractLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void <init>()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void removeUndoableEditListener(javax.swing.event.UndoableEditListener)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void activate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: boolean isActive()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: java.awt.geom.Point2D$Double viewToDrawing(java.awt.Point)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: java.awt.geom.Point2D$Double constrainPoint(java.awt.Point)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: java.awt.geom.Point2D$Double constrainPoint(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void editDelete()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void editCut()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void editCopy()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void editDuplicate()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void editPaste()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void keyReleased(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void keyTyped(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void keyPressed(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void mouseClicked(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void mouseEntered(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void mouseExited(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void addToolListener(org.jhotdraw.draw.ToolListener)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void removeToolListener(org.jhotdraw.draw.ToolListener)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void fireToolStarted(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void fireToolDone()>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void fireAreaInvalidated(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void fireAreaInvalidated(java.awt.Rectangle)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AbstractTool;;<org.jhotdraw.draw.AbstractTool: void updateCursor(org.jhotdraw.draw.DrawingView,java.awt.Point)>;;0
org.jhotdraw.draw.ToolEvent;;<org.jhotdraw.draw.ToolEvent: void <init>(org.jhotdraw.draw.Tool,org.jhotdraw.draw.DrawingView,java.awt.Rectangle)>;;0
org.jhotdraw.draw.ToolEvent;;<org.jhotdraw.draw.ToolEvent: org.jhotdraw.draw.Tool getTool()>;;0
org.jhotdraw.draw.ToolEvent;;<org.jhotdraw.draw.ToolEvent: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.draw.ToolEvent;;<org.jhotdraw.draw.ToolEvent: java.awt.Rectangle getInvalidatedArea()>;;0
org.jhotdraw.draw.ArrowTip;;<org.jhotdraw.draw.ArrowTip: void <init>()>;;0
org.jhotdraw.draw.ArrowTip;;<org.jhotdraw.draw.ArrowTip: void <init>(double,double,double)>;;0
org.jhotdraw.draw.ArrowTip;;<org.jhotdraw.draw.ArrowTip: void <init>(double,double,double,boolean,boolean,boolean)>;;0
org.jhotdraw.draw.ArrowTip;;<org.jhotdraw.draw.ArrowTip: java.awt.geom.GeneralPath getDecoratorPath(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ArrowTip;;<org.jhotdraw.draw.ArrowTip: double getDecoratorPathRadius(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ArrowTip;;<org.jhotdraw.draw.ArrowTip: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.ArrowTip;;<org.jhotdraw.draw.ArrowTip: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void <init>()>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;1
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void setAttributeEnabled(org.jhotdraw.draw.AttributeKey,boolean)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: boolean isAttributeEnabled(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void setAttributes(java.util.HashMap)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: java.util.Map getAttributes()>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: java.lang.Object getAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void drawFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void drawConnectors(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: java.awt.Stroke getStroke()>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: double getStrokeMiterLimitFactor()>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void drawText(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: org.jhotdraw.draw.AttributeKey getAttributeKey(java.lang.String)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void applyAttributesTo(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: void removeAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: boolean hasAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.AttributedFigure;;<org.jhotdraw.draw.AttributedFigure: org.jhotdraw.draw.AbstractFigure clone()>;;0
org.jhotdraw.geom.DoubleStroke;;<org.jhotdraw.geom.DoubleStroke: void <init>(float,float)>;;0
org.jhotdraw.geom.DoubleStroke;;<org.jhotdraw.geom.DoubleStroke: void <init>(float,float,int,int,float,float[],float)>;;0
org.jhotdraw.geom.DoubleStroke;;<org.jhotdraw.geom.DoubleStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>;;0
org.jhotdraw.geom.DoubleStroke;;<org.jhotdraw.geom.DoubleStroke: void traceStroke(org.jhotdraw.geom.BezierPath,java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)>;;0
org.jhotdraw.geom.DoubleStroke;;<org.jhotdraw.geom.DoubleStroke: double[] computeThickLine(double[],int,double[])>;;0
org.jhotdraw.geom.DoubleStroke;;<org.jhotdraw.geom.DoubleStroke: double[] computeThickLine(double,double,double,double,double,double[])>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void <init>()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void add(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void addPoint(double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void add(int,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void set(int,int,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.Point2D$Double get(int,int)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void invalidatePath()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void validatePath()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.GeneralPath toGeneralPath()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean contains(java.awt.geom.Point2D)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean outlineContains(java.awt.geom.Point2D$Double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean intersects(java.awt.geom.Rectangle2D)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean contains(java.awt.geom.Rectangle2D)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean intersects(double,double,double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.Rectangle2D getBounds2D()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.Rectangle2D$Double getBounds2DDouble()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.Rectangle getBounds()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean contains(double,double,double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean contains(double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void setClosed(boolean)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: boolean isClosed()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.lang.Object clone()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void transform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void setTo(org.jhotdraw.geom.BezierPath)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.Point2D$Double getCenter()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.Point2D$Double chop(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: int indexOfOutermostNode()>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.Point2D$Double getPointOnPath(double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: int findSegment(java.awt.geom.Point2D$Double,float)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: int joinSegments(java.awt.geom.Point2D$Double,float)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: int splitSegment(java.awt.geom.Point2D$Double,float)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void moveTo(double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void lineTo(double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void quadTo(double,double,double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: void curveTo(double,double,double,double,double,double)>;;0
org.jhotdraw.geom.BezierPath;;<org.jhotdraw.geom.BezierPath: java.awt.geom.Point2D$Double[] toPolygonArray()>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: void <init>(org.jhotdraw.draw.BezierFigure,int,int)>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: org.jhotdraw.draw.BezierFigure getBezierFigure()>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: java.awt.Point getLocation()>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: void fireAreaInvalidated(org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierControlPointHandle;;<org.jhotdraw.draw.BezierControlPointHandle: boolean isCombinableWith(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void <clinit>()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void <init>()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void <init>(boolean)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: org.jhotdraw.draw.Connector findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void drawCaps(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: boolean canConnect()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void validate()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: org.jhotdraw.geom.BezierPath getBezierPath()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPointOnPath(float,double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetBezierPath(org.jhotdraw.geom.BezierPath)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: boolean isClosed()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void setClosed(boolean)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void invalidate()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void invalidateCappedPath()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: org.jhotdraw.geom.BezierPath getCappedPath()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void layout()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void addNode(org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void addNode(int,org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicAddNode(org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicAddNode(int,org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void setNode(int,org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetNode(int,org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: org.jhotdraw.geom.BezierPath$Node getNode(int)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPoint(int)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getPoint(int,int)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void setPoint(int,int,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetPoint(int,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetPoint(int,int,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetStartPoint(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicSetEndPoint(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getStartPoint()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getEndPoint()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: int findNode(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void removeAllNodes()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void removeNode(int)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: int findSegment(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: boolean basicJoinSegments(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: int basicSplitSegment(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicRemoveNode(int)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void basicRemoveAllNodes()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: int getNodeCount()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: int getPointCount()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: org.jhotdraw.draw.BezierFigure clone()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double chop(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getCenter()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.awt.geom.Point2D$Double getOutermostPoint()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: int basicJoinSegments(java.awt.geom.Point2D$Double,float)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: int basicSplitSegment(java.awt.geom.Point2D$Double,float)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: boolean handleMouseClick(java.awt.geom.Point2D$Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void writePoints(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: void readPoints(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.BezierFigure;;<org.jhotdraw.draw.BezierFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.geom.GrowStroke;;<org.jhotdraw.geom.GrowStroke: void <init>(float,float)>;;0
org.jhotdraw.geom.GrowStroke;;<org.jhotdraw.geom.GrowStroke: java.awt.Shape createStrokedShape(java.awt.Shape)>;;0
org.jhotdraw.draw.ChopBezierConnector;;<org.jhotdraw.draw.ChopBezierConnector: void <init>()>;;0
org.jhotdraw.draw.ChopBezierConnector;;<org.jhotdraw.draw.ChopBezierConnector: void <init>(org.jhotdraw.draw.BezierFigure)>;;0
org.jhotdraw.draw.ChopBezierConnector;;<org.jhotdraw.draw.ChopBezierConnector: java.awt.geom.Point2D$Double chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: void <init>(org.jhotdraw.draw.BezierFigure,int)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: org.jhotdraw.draw.BezierFigure getBezierFigure()>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: java.awt.Point getLocation()>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: void fireAreaInvalidated(org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: boolean isCombinableWith(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: void trackDoubleClick(java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierNodeHandle;;<org.jhotdraw.draw.BezierNodeHandle: java.util.Collection createSecondaryHandles()>;;0
org.jhotdraw.draw.BezierNodeEdit;;<org.jhotdraw.draw.BezierNodeEdit: void <init>(org.jhotdraw.draw.BezierFigure,int,org.jhotdraw.geom.BezierPath$Node,org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.BezierNodeEdit;;<org.jhotdraw.draw.BezierNodeEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.draw.BezierNodeEdit;;<org.jhotdraw.draw.BezierNodeEdit: void redo()>;;0
org.jhotdraw.draw.BezierNodeEdit;;<org.jhotdraw.draw.BezierNodeEdit: void undo()>;;0
org.jhotdraw.draw.BezierNodeEdit;;<org.jhotdraw.draw.BezierNodeEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.BezierNodeEdit;;<org.jhotdraw.draw.BezierNodeEdit: boolean replaceEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: void <init>(org.jhotdraw.draw.BezierFigure)>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: boolean isCombinableWith(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: java.awt.Point getLocation()>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: org.jhotdraw.draw.BezierFigure getBezierFigure()>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: java.awt.geom.Point2D$Double getOrigin()>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierScaleHandle;;<org.jhotdraw.draw.BezierScaleHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: void <init>()>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: void <init>(double,double,double)>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: java.awt.geom.Point2D$Double getRelativePoint(org.jhotdraw.draw.BezierFigure)>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: java.awt.geom.Point2D$Double getRelativeLabelPoint(org.jhotdraw.draw.BezierFigure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.BezierLabelLocator;;<org.jhotdraw.draw.BezierLabelLocator: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.BezierPointLocator;;<org.jhotdraw.draw.BezierPointLocator: void <init>(int)>;;0
org.jhotdraw.draw.BezierPointLocator;;<org.jhotdraw.draw.BezierPointLocator: void <init>(int,int)>;;0
org.jhotdraw.draw.BezierPointLocator;;<org.jhotdraw.draw.BezierPointLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BezierPointLocator;;<org.jhotdraw.draw.BezierPointLocator: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.BezierPointLocator;;<org.jhotdraw.draw.BezierPointLocator: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.RestoreDataEdit;;<org.jhotdraw.draw.RestoreDataEdit: void <init>(org.jhotdraw.draw.Figure,java.lang.Object)>;;0
org.jhotdraw.draw.RestoreDataEdit;;<org.jhotdraw.draw.RestoreDataEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.draw.RestoreDataEdit;;<org.jhotdraw.draw.RestoreDataEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.RestoreDataEdit;;<org.jhotdraw.draw.RestoreDataEdit: boolean replaceEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.RestoreDataEdit;;<org.jhotdraw.draw.RestoreDataEdit: void redo()>;;0
org.jhotdraw.draw.RestoreDataEdit;;<org.jhotdraw.draw.RestoreDataEdit: void undo()>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void <init>(org.jhotdraw.draw.BezierFigure)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void <init>(org.jhotdraw.draw.BezierFigure,java.util.Map)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void activate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: org.jhotdraw.draw.BezierFigure createFigure()>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: org.jhotdraw.draw.Figure getCreatedFigure()>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: org.jhotdraw.draw.Figure getAddedFigure()>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void addPointToFigure(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void mouseClicked(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void finishCreation(org.jhotdraw.draw.BezierFigure)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BezierTool;;<org.jhotdraw.draw.BezierTool: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: void <init>()>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: void main(java.lang.String[])>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.GeneralPath fitCurve(java.awt.Polygon,double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.GeneralPath fitCurve(java.awt.geom.Point2D$Double[],double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: org.jhotdraw.geom.BezierPath fitBezierCurve(org.jhotdraw.geom.BezierPath,double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: void fitCubic(java.awt.geom.Point2D$Double[],int,int,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double,java.awt.geom.GeneralPath)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: void fitCubic(java.awt.geom.Point2D$Double[],int,int,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double,org.jhotdraw.geom.BezierPath)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double[] generateBezier(java.awt.geom.Point2D$Double[],int,int,double[],java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double[] reparameterize(java.awt.geom.Point2D$Double[],int,int,double[],java.awt.geom.Point2D$Double[])>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double newtonRaphsonRootFind(java.awt.geom.Point2D$Double[],java.awt.geom.Point2D$Double,double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double bezierII(int,java.awt.geom.Point2D$Double[],double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double b0(double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double b1(double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double b2(double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double b3(double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double computeLeftTangent(java.awt.geom.Point2D$Double[],int)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double computeRightTangent(java.awt.geom.Point2D$Double[],int)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double computeCenterTangent(java.awt.geom.Point2D$Double[],int)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double[] chordLengthParameterize(java.awt.geom.Point2D$Double[],int,int)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double computeMaxError(java.awt.geom.Point2D$Double[],int,int,java.awt.geom.Point2D$Double[],double[],int[])>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double v2AddII(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double v2ScaleIII(java.awt.geom.Point2D$Double,double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double v2SubII(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double v2DistanceBetween2Points(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double v2Scale(java.awt.geom.Point2D$Double,double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double v2Length(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double v2SquaredLength(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double v2Add(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double v2Negate(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: double v2Dot(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.Bezier;;<org.jhotdraw.geom.Bezier: java.awt.geom.Point2D$Double v2Normalize(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void <init>(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void <init>(org.jhotdraw.draw.ConnectionFigure,java.util.Map)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void activate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.ConnectionFigure createFigure()>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Figure findSource(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Figure findTarget(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.ConnectionFigure findConnection(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void setConnection(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.ConnectionFigure getConnection()>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void trackConnectors(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Figure,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Figure findConnectionStart(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Figure findConnectableFigure(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void setStartConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Connector getStartConnector()>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void setEndConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Connector getEndConnector()>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void setTargetConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Connector getTargetConnector()>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void setTargetFigure(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Figure getTargetFigure()>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: org.jhotdraw.draw.Figure getCreatedFigure()>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void setCreatedFigure(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void figureAdded(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void figureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void figureRemoved(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void figureRequestRemove(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.BidirectionalConnectionTool;;<org.jhotdraw.draw.BidirectionalConnectionTool: void figureAttributeChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.BorderRectangleFigure;;<org.jhotdraw.draw.BorderRectangleFigure: void <clinit>()>;;0
org.jhotdraw.draw.BorderRectangleFigure;;<org.jhotdraw.draw.BorderRectangleFigure: void <init>(javax.swing.border.Border)>;;0
org.jhotdraw.draw.BorderRectangleFigure;;<org.jhotdraw.draw.BorderRectangleFigure: void drawFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: void <init>()>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: void <init>(double,double,double,double)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: org.jhotdraw.draw.RectangleFigure clone()>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.RectangleFigure;;<org.jhotdraw.draw.RectangleFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.LocatorHandle;;<org.jhotdraw.draw.LocatorHandle: void <init>(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)>;;0
org.jhotdraw.draw.LocatorHandle;;<org.jhotdraw.draw.LocatorHandle: java.awt.geom.Point2D$Double getLocationOnDrawing()>;;0
org.jhotdraw.draw.LocatorHandle;;<org.jhotdraw.draw.LocatorHandle: java.awt.Point getLocation()>;;0
org.jhotdraw.draw.LocatorHandle;;<org.jhotdraw.draw.LocatorHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.ChangeConnectionEndHandle;;<org.jhotdraw.draw.ChangeConnectionEndHandle: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChangeConnectionEndHandle;;<org.jhotdraw.draw.ChangeConnectionEndHandle: void connect(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.ChangeConnectionEndHandle;;<org.jhotdraw.draw.ChangeConnectionEndHandle: void disconnect()>;;0
org.jhotdraw.draw.ChangeConnectionEndHandle;;<org.jhotdraw.draw.ChangeConnectionEndHandle: org.jhotdraw.draw.Connector getTarget()>;;0
org.jhotdraw.draw.ChangeConnectionEndHandle;;<org.jhotdraw.draw.ChangeConnectionEndHandle: void setLocation(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.ChangeConnectionEndHandle;;<org.jhotdraw.draw.ChangeConnectionEndHandle: java.awt.geom.Point2D$Double getLocation()>;;0
org.jhotdraw.draw.ChangeConnectionEndHandle;;<org.jhotdraw.draw.ChangeConnectionEndHandle: boolean canConnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: boolean isCombinableWith(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: org.jhotdraw.draw.Connector getSource()>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: org.jhotdraw.draw.Connector findConnectionTarget(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Figure,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: org.jhotdraw.draw.Figure findConnectableFigure(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: void setConnection(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: org.jhotdraw.draw.ConnectionFigure getConnection()>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: void setTargetFigure(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: org.jhotdraw.draw.Figure getTargetFigure()>;;0
org.jhotdraw.draw.ChangeConnectionHandle;;<org.jhotdraw.draw.ChangeConnectionHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.ChangeConnectionStartHandle;;<org.jhotdraw.draw.ChangeConnectionStartHandle: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChangeConnectionStartHandle;;<org.jhotdraw.draw.ChangeConnectionStartHandle: void connect(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.ChangeConnectionStartHandle;;<org.jhotdraw.draw.ChangeConnectionStartHandle: void disconnect()>;;0
org.jhotdraw.draw.ChangeConnectionStartHandle;;<org.jhotdraw.draw.ChangeConnectionStartHandle: org.jhotdraw.draw.Connector getTarget()>;;0
org.jhotdraw.draw.ChangeConnectionStartHandle;;<org.jhotdraw.draw.ChangeConnectionStartHandle: void setLocation(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.ChangeConnectionStartHandle;;<org.jhotdraw.draw.ChangeConnectionStartHandle: java.awt.geom.Point2D$Double getLocation()>;;0
org.jhotdraw.draw.ChangeConnectionStartHandle;;<org.jhotdraw.draw.ChangeConnectionStartHandle: boolean canConnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChopDiamondConnector;;<org.jhotdraw.draw.ChopDiamondConnector: void <init>()>;;0
org.jhotdraw.draw.ChopDiamondConnector;;<org.jhotdraw.draw.ChopDiamondConnector: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChopDiamondConnector;;<org.jhotdraw.draw.ChopDiamondConnector: java.awt.geom.Point2D$Double chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.ChopDiamondConnector;;<org.jhotdraw.draw.ChopDiamondConnector: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokePlacement()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void <clinit>()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void <init>()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void <init>(double,double,double,double)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: boolean isQuadratic()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: void setQuadratic(boolean)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: org.jhotdraw.draw.Connector findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: org.jhotdraw.draw.DiamondFigure clone()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.DiamondFigure;;<org.jhotdraw.draw.DiamondFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.ChopEllipseConnector;;<org.jhotdraw.draw.ChopEllipseConnector: void <init>()>;;0
org.jhotdraw.draw.ChopEllipseConnector;;<org.jhotdraw.draw.ChopEllipseConnector: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChopEllipseConnector;;<org.jhotdraw.draw.ChopEllipseConnector: java.awt.Color getStrokeColor(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChopEllipseConnector;;<org.jhotdraw.draw.ChopEllipseConnector: float getStrokeWidth(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChopEllipseConnector;;<org.jhotdraw.draw.ChopEllipseConnector: java.awt.geom.Point2D$Double chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.ChopRoundRectConnector;;<org.jhotdraw.draw.ChopRoundRectConnector: void <init>()>;;0
org.jhotdraw.draw.ChopRoundRectConnector;;<org.jhotdraw.draw.ChopRoundRectConnector: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ChopRoundRectConnector;;<org.jhotdraw.draw.ChopRoundRectConnector: java.awt.geom.Point2D$Double chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.ChopRoundRectConnector;;<org.jhotdraw.draw.ChopRoundRectConnector: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokePlacement()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void <init>()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void <init>(double,double,double,double)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: double getArcWidth()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: double getArcHeight()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void setArc(double,double)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: org.jhotdraw.draw.Connector findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: org.jhotdraw.draw.RoundRectangleFigure clone()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: java.awt.geom.Point2D$Double chop(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: java.awt.geom.RoundRectangle2D$Double access$2(org.jhotdraw.draw.RoundRectangleFigure)>;;0
org.jhotdraw.draw.RoundRectangleFigure;;<org.jhotdraw.draw.RoundRectangleFigure: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokePlacement()>;;0
org.jhotdraw.draw.ChopTriangleConnector;;<org.jhotdraw.draw.ChopTriangleConnector: void <init>()>;;0
org.jhotdraw.draw.ChopTriangleConnector;;<org.jhotdraw.draw.ChopTriangleConnector: void <init>(org.jhotdraw.draw.TriangleFigure)>;;0
org.jhotdraw.draw.ChopTriangleConnector;;<org.jhotdraw.draw.ChopTriangleConnector: java.awt.geom.Point2D$Double chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void <init>()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void <init>(org.jhotdraw.draw.AttributeKeys$Orientation)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void <init>(double,double,double,double)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void <init>(double,double,double,double,org.jhotdraw.draw.AttributeKeys$Orientation)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: org.jhotdraw.draw.Connector findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: org.jhotdraw.geom.BezierPath getBezierPath()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: java.awt.geom.Point2D$Double chop(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: org.jhotdraw.draw.TriangleFigure clone()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$Orientation()>;;0
org.jhotdraw.draw.TriangleFigure;;<org.jhotdraw.draw.TriangleFigure: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokePlacement()>;;0
org.jhotdraw.draw.CloseHandle;;<org.jhotdraw.draw.CloseHandle: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.CloseHandle;;<org.jhotdraw.draw.CloseHandle: int getHandlesize()>;;0
org.jhotdraw.draw.CloseHandle;;<org.jhotdraw.draw.CloseHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.CloseHandle;;<org.jhotdraw.draw.CloseHandle: java.awt.Cursor getCursor()>;;0
org.jhotdraw.draw.CloseHandle;;<org.jhotdraw.draw.CloseHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.CloseHandle;;<org.jhotdraw.draw.CloseHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.CloseHandle;;<org.jhotdraw.draw.CloseHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: void <init>()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: void <init>(double,double)>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator east()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator north()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator west()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator northEast()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator northWest()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator south()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator southEast()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator southWest()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: org.jhotdraw.draw.Locator center()>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.RelativeLocator;;<org.jhotdraw.draw.RelativeLocator: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: void <init>(org.jhotdraw.draw.AbstractFigure,java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: boolean addEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: boolean replaceEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: void redo()>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: void undo()>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: boolean isInProgress()>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: void end()>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: boolean canUndo()>;;0
org.jhotdraw.draw.CompositeTransformEdit;;<org.jhotdraw.draw.CompositeTransformEdit: boolean canRedo()>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: void <init>(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: org.jhotdraw.draw.ConnectionFigure createConnection()>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: void setConnection(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: org.jhotdraw.draw.ConnectionFigure getConnection()>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: org.jhotdraw.draw.Figure getTargetFigure()>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: void setTargetFigure(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: org.jhotdraw.draw.Figure findConnectableFigure(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: org.jhotdraw.draw.Connector findConnectionTarget(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ConnectionHandle;;<org.jhotdraw.draw.ConnectionHandle: org.jhotdraw.draw.Connector getStartConnector()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void <init>(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void <init>(org.jhotdraw.draw.ConnectionFigure,java.util.Map)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void <init>(java.lang.String)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void <init>(java.lang.String,java.util.Map)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.ConnectionFigure getPrototype()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: boolean canConnect(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: boolean canConnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void activate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.ConnectionFigure createFigure()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Figure findSource(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Figure findTarget(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.ConnectionFigure findConnection(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void setConnection(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.ConnectionFigure getConnection()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void trackConnectors(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Figure,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Figure findConnectionStart(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Figure findConnectableFigure(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void setStartConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Connector getStartConnector()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void setEndConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Connector getEndConnector()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void setTargetConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Connector getTargetConnector()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void setTargetFigure(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Figure getTargetFigure()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: org.jhotdraw.draw.Figure getCreatedFigure()>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void setCreatedFigure(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void figureAdded(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void figureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void figureRemoved(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void figureRequestRemove(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.ConnectionTool;;<org.jhotdraw.draw.ConnectionTool: void figureAttributeChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void <init>(java.lang.String)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void <init>(java.lang.String,java.util.Map)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void <init>(java.lang.String,java.util.Map,java.lang.String)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void <init>(org.jhotdraw.draw.Figure,java.util.Map)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void <init>(org.jhotdraw.draw.Figure,java.util.Map,java.lang.String)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: org.jhotdraw.draw.Figure getPrototype()>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void activate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: org.jhotdraw.draw.Figure createFigure()>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: org.jhotdraw.draw.Figure getCreatedFigure()>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: org.jhotdraw.draw.Figure getAddedFigure()>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.CreationTool;;<org.jhotdraw.draw.CreationTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void <init>()>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: int indexOf(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void basicAdd(int,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void basicRemove(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void draw(java.awt.Graphics2D,java.util.Collection)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: java.util.Collection sort(java.util.Collection)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void figureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void figureAdded(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void figureRemoved(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void figureRequestRemove(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: org.jhotdraw.draw.Figure findFigure(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: org.jhotdraw.draw.Figure findFigureExcept(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: org.jhotdraw.draw.Figure findFigureExcept(java.awt.geom.Point2D$Double,java.util.Collection)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: java.util.Collection findFigures(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: java.util.Collection findFiguresWithin(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: java.util.Collection getFigures()>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: org.jhotdraw.draw.Figure findFigureInside(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: java.util.List getFiguresFrontToBack()>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void bringToFront(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void sendToBack(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void undoableEditHappened(javax.swing.event.UndoableEditEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void figureAttributeChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: boolean contains(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void invalidateSortOrder()>;;0
org.jhotdraw.draw.DefaultDrawing;;<org.jhotdraw.draw.DefaultDrawing: void ensureSorted()>;;0
org.jhotdraw.draw.FigureLayerComparator;;<org.jhotdraw.draw.FigureLayerComparator: void <clinit>()>;;0
org.jhotdraw.draw.FigureLayerComparator;;<org.jhotdraw.draw.FigureLayerComparator: void <init>()>;;0
org.jhotdraw.draw.FigureLayerComparator;;<org.jhotdraw.draw.FigureLayerComparator: int compare(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.FigureLayerComparator;;<org.jhotdraw.draw.FigureLayerComparator: int compare(java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void <init>()>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void setTool(org.jhotdraw.draw.Tool)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void areaInvalidated(org.jhotdraw.draw.ToolEvent)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void toolStarted(org.jhotdraw.draw.ToolEvent)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void setView(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void toolDone(org.jhotdraw.draw.ToolEvent)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: org.jhotdraw.draw.Tool getTool()>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void updateFocusedView()>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void setFocusedView(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: org.jhotdraw.draw.DrawingView getFocusedView()>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void applyDefaultAttributesTo(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: java.lang.Object getDefaultAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void setDefaultAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void remove(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void add(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void setCursor(java.awt.Cursor)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: java.util.Collection getDrawingViews()>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: org.jhotdraw.draw.DrawingView findView(java.awt.Container)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void setEnabled(boolean)>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: boolean isEnabled()>;;0
org.jhotdraw.draw.DefaultDrawingEditor;;<org.jhotdraw.draw.DefaultDrawingEditor: void access$0(org.jhotdraw.draw.DefaultDrawingEditor,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void <init>()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void initComponents()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.util.Set getTools()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void setEmptyDrawingMessage(java.lang.String)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.lang.String getEmptyDrawingMessage()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void paintComponent(java.awt.Graphics)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void drawBackground(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void drawGrid(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void drawDrawing(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void drawHandles(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void drawTool(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void repaint(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void areaInvalidated(org.jhotdraw.draw.DrawingEvent)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void areaInvalidated(org.jhotdraw.draw.HandleEvent)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void figureAdded(org.jhotdraw.draw.DrawingEvent)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void figureRemoved(org.jhotdraw.draw.DrawingEvent)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void invalidate()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void addToSelection(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void addToSelection(java.util.Collection)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void removeFromSelection(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void toggleSelection(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void selectAll()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void clearSelection()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: boolean isFigureSelected(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.util.Collection getSelectedFigures()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: int getSelectionCount()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.util.List getSelectionHandles()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.util.List getSecondaryHandles()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void invalidateHandles()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void validateHandles()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: org.jhotdraw.draw.Handle findHandle(java.awt.Point)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.util.Collection getCompatibleHandles(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: org.jhotdraw.draw.Figure findFigure(java.awt.Point)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.util.Collection findFigures(java.awt.Rectangle)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.util.Collection findFiguresWithin(java.awt.Rectangle)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void addFigureSelectionListener(org.jhotdraw.draw.FigureSelectionListener)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void removeFigureSelectionListener(org.jhotdraw.draw.FigureSelectionListener)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void fireSelectionChanged()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void handleRequestRemove(org.jhotdraw.draw.HandleEvent)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void invalidateDimension()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: org.jhotdraw.draw.Constrainer getConstrainer()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void setConstrainer(org.jhotdraw.draw.Constrainer)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.awt.Dimension getPreferredSize()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.awt.Point drawingToView(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.awt.geom.Point2D$Double viewToDrawing(java.awt.Point)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.awt.Rectangle drawingToView(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.awt.geom.Rectangle2D$Double viewToDrawing(java.awt.Rectangle)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.awt.Container getContainer()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: double getScaleFactor()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void setScaleFactor(double)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void fireViewTransformChanged()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void setHandleDetailLevel(int)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: int getHandleDetailLevel()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void handleRequestSecondaryHandles(org.jhotdraw.draw.HandleEvent)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: java.awt.geom.AffineTransform getDrawingToViewTransform()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void setDOMFactory(org.jhotdraw.xml.DOMFactory)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: org.jhotdraw.xml.DOMFactory getDOMFactory()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void copy()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void cut()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void delete()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void paste()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void duplicate()>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void removeNotify(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.DefaultDrawingView;;<org.jhotdraw.draw.DefaultDrawingView: void addNotify(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.xml.XMLTransferable;;<org.jhotdraw.xml.XMLTransferable: void <init>(byte[],java.lang.String,java.lang.String)>;;0
org.jhotdraw.xml.XMLTransferable;;<org.jhotdraw.xml.XMLTransferable: void lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable)>;;0
org.jhotdraw.xml.XMLTransferable;;<org.jhotdraw.xml.XMLTransferable: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)>;;0
org.jhotdraw.xml.XMLTransferable;;<org.jhotdraw.xml.XMLTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>;;0
org.jhotdraw.xml.XMLTransferable;;<org.jhotdraw.xml.XMLTransferable: boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: void <clinit>()>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: void <init>(double,double)>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: double getWidth()>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: double getHeight()>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: java.awt.geom.Point2D$Double constrainPoint(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: java.lang.String toString()>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: boolean isVisible()>;;0
org.jhotdraw.draw.GridConstrainer;;<org.jhotdraw.draw.GridConstrainer: void draw(java.awt.Graphics2D,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.FigureSelectionEvent;;<org.jhotdraw.draw.FigureSelectionEvent: void <init>(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.FigureSelectionEvent;;<org.jhotdraw.draw.FigureSelectionEvent: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void <init>(org.jhotdraw.xml.DOMFactory)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void save(java.io.OutputStream)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void save(java.io.Writer)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void print(java.io.PrintWriter)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void openElement(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void closeElement()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addComment(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addText(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,java.lang.String)>;;1
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,int)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,boolean)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,float)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,double)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void writeObject(java.lang.Object)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: nanoxml.XMLElement writeStorable(org.jhotdraw.xml.DOMStorable)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,float,float)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,int,int)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,double,double)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,boolean,boolean)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void addAttribute(java.lang.String,java.lang.String,java.lang.String)>;;1
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: java.lang.Object getPrototype()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMOutput;;<org.jhotdraw.xml.NanoXMLLiteDOMOutput: void setDoctype(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: void <init>(org.jhotdraw.xml.DOMFactory,java.io.InputStream)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: void <init>(org.jhotdraw.xml.DOMFactory,java.io.Reader)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: java.lang.String getTagName()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: java.lang.String getText()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: java.lang.String getText(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: java.util.List getInheritedAttribute(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: int getAttribute(java.lang.String,int)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: double getAttribute(java.lang.String,double)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: boolean getAttribute(java.lang.String,boolean)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: int getElementCount()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: int getElementCount(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: void openElement(int)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: void openElement(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: void openElement(java.lang.String,int)>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: void closeElement()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: java.lang.Object readObject()>;;0
org.jhotdraw.xml.NanoXMLLiteDOMInput;;<org.jhotdraw.xml.NanoXMLLiteDOMInput: java.lang.Object readObject(int)>;;0
org.jhotdraw.gui.datatransfer.CompositeTransferable;;<org.jhotdraw.gui.datatransfer.CompositeTransferable: void <init>()>;;0
org.jhotdraw.gui.datatransfer.CompositeTransferable;;<org.jhotdraw.gui.datatransfer.CompositeTransferable: void add(java.awt.datatransfer.Transferable)>;;0
org.jhotdraw.gui.datatransfer.CompositeTransferable;;<org.jhotdraw.gui.datatransfer.CompositeTransferable: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)>;;0
org.jhotdraw.gui.datatransfer.CompositeTransferable;;<org.jhotdraw.gui.datatransfer.CompositeTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>;;0
org.jhotdraw.gui.datatransfer.CompositeTransferable;;<org.jhotdraw.gui.datatransfer.CompositeTransferable: boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)>;;0
org.jhotdraw.gui.datatransfer.CompositeTransferable;;<org.jhotdraw.gui.datatransfer.CompositeTransferable: void lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable)>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: void <clinit>()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: void <init>()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.BeanDescriptor getBdescriptor()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.PropertyDescriptor[] getPdescriptor()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.EventSetDescriptor[] getEdescriptor()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.MethodDescriptor[] getMdescriptor()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.BeanDescriptor getBeanDescriptor()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.EventSetDescriptor[] getEventSetDescriptors()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.beans.MethodDescriptor[] getMethodDescriptors()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: int getDefaultPropertyIndex()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: int getDefaultEventIndex()>;;0
org.jhotdraw.draw.DefaultDrawingViewBeanInfo;;<org.jhotdraw.draw.DefaultDrawingViewBeanInfo: java.awt.Image getIcon(int)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void <init>()>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void <init>(java.util.Collection,java.util.Collection)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void setDrawingActions(java.util.Collection)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void setFigureActions(java.util.Collection)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void mouseClicked(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void handlePopupMenu(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void showPopupMenu(org.jhotdraw.draw.Figure,java.awt.Point,java.awt.Component)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void handleDoubleClick(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DelegationSelectionTool;;<org.jhotdraw.draw.DelegationSelectionTool: void access$0(org.jhotdraw.draw.DelegationSelectionTool,javax.swing.Timer)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void <init>()>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void activate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void keyPressed(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void keyReleased(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void keyTyped(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void mouseClicked(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void mouseEntered(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void mouseExited(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void setTracker(org.jhotdraw.draw.Tool)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: org.jhotdraw.draw.Tool createHandleTracker(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: org.jhotdraw.draw.Tool createDragTracker(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: org.jhotdraw.draw.Tool createAreaTracker()>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void toolStarted(org.jhotdraw.draw.ToolEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void toolDone(org.jhotdraw.draw.ToolEvent)>;;0
org.jhotdraw.draw.SelectionTool;;<org.jhotdraw.draw.SelectionTool: void areaInvalidated(org.jhotdraw.draw.ToolEvent)>;;0
org.jhotdraw.draw.DragTracker;;<org.jhotdraw.draw.DragTracker: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.DragTracker;;<org.jhotdraw.draw.DragTracker: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DragTracker;;<org.jhotdraw.draw.DragTracker: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DragTracker;;<org.jhotdraw.draw.DragTracker: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.DragTracker;;<org.jhotdraw.draw.DragTracker: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.ElbowLiner;;<org.jhotdraw.draw.ElbowLiner: void <init>()>;;0
org.jhotdraw.draw.ElbowLiner;;<org.jhotdraw.draw.ElbowLiner: java.util.Collection createHandles(org.jhotdraw.geom.BezierPath)>;;0
org.jhotdraw.draw.ElbowLiner;;<org.jhotdraw.draw.ElbowLiner: void lineout(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.ElbowLiner;;<org.jhotdraw.draw.ElbowLiner: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.ElbowLiner;;<org.jhotdraw.draw.ElbowLiner: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.ElbowLiner;;<org.jhotdraw.draw.ElbowLiner: org.jhotdraw.draw.Liner clone()>;;0
org.jhotdraw.draw.ElbowLiner;;<org.jhotdraw.draw.ElbowLiner: java.lang.Object clone()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void <init>()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: boolean canConnect()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void updateConnection()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void validate()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: boolean canConnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: boolean connectsSame(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.draw.Connector getEndConnector()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.draw.Figure getEndFigure()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.draw.Connector getStartConnector()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.draw.Figure getStartFigure()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void setEndConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void basicSetEndConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void setStartConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void basicSetStartConnector(org.jhotdraw.draw.Connector)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void addNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void removeNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void handleDisconnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void handleConnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.draw.LineConnectionFigure clone()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void remap(java.util.Map)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: boolean canConnect(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: boolean handleMouseClick(java.awt.geom.Point2D$Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void readPoints(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void readLiner(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void writeLiner(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void writePoints(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void setLiner(org.jhotdraw.draw.Liner)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void basicSetNode(int,org.jhotdraw.geom.BezierPath$Node)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void lineout()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.geom.BezierPath getBezierPath()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.draw.Liner getLiner()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void setStartPoint(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void setPoint(int,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void setEndPoint(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: void reverseConnection()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.LineConnectionFigure;;<org.jhotdraw.draw.LineConnectionFigure: org.jhotdraw.draw.BezierFigure clone()>;;0
org.jhotdraw.draw.LineFigure;;<org.jhotdraw.draw.LineFigure: void <init>()>;;0
org.jhotdraw.draw.LineFigure;;<org.jhotdraw.draw.LineFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.LineFigure;;<org.jhotdraw.draw.LineFigure: boolean canConnect()>;;0
org.jhotdraw.draw.LineFigure;;<org.jhotdraw.draw.LineFigure: boolean handleMouseClick(java.awt.geom.Point2D$Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: void <init>()>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: void <init>(double,double,double,double)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: org.jhotdraw.draw.Connector findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: org.jhotdraw.draw.EllipseFigure clone()>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.EllipseFigure;;<org.jhotdraw.draw.EllipseFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: void <init>()>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: void createOverlay(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: void requestFocus()>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: void createOverlay(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: void setBounds(java.awt.geom.Rectangle2D$Double,java.lang.String)>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: java.lang.String getText()>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: java.awt.Dimension getPreferredSize(int)>;;0
org.jhotdraw.draw.FloatingTextArea;;<org.jhotdraw.draw.FloatingTextArea: void endOverlay()>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void <init>()>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void createOverlay(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void requestFocus()>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void createOverlay(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: java.awt.Insets getInsets()>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void addActionListener(java.awt.event.ActionListener)>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void removeActionListener(java.awt.event.ActionListener)>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void setBounds(java.awt.Rectangle,java.lang.String)>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: java.lang.String getText()>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: java.awt.Dimension getPreferredSize(int)>;;0
org.jhotdraw.draw.FloatingTextField;;<org.jhotdraw.draw.FloatingTextField: void endOverlay()>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: void <init>(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: void <init>(org.jhotdraw.draw.TextHolder,org.jhotdraw.draw.Locator)>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: java.awt.Cursor getCursor()>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.FontSizeHandle;;<org.jhotdraw.draw.FontSizeHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.FontSizeLocator;;<org.jhotdraw.draw.FontSizeLocator: void <init>()>;;0
org.jhotdraw.draw.FontSizeLocator;;<org.jhotdraw.draw.FontSizeLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.FontSizeLocator;;<org.jhotdraw.draw.FontSizeLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.GeneralPathTip;;<org.jhotdraw.draw.GeneralPathTip: void <init>(java.awt.geom.GeneralPath,double)>;;0
org.jhotdraw.draw.GeneralPathTip;;<org.jhotdraw.draw.GeneralPathTip: void <init>(java.awt.geom.GeneralPath,double,boolean,boolean,boolean)>;;0
org.jhotdraw.draw.GeneralPathTip;;<org.jhotdraw.draw.GeneralPathTip: java.awt.geom.GeneralPath getDecoratorPath(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.GeneralPathTip;;<org.jhotdraw.draw.GeneralPathTip: double getDecoratorPathRadius(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.GeometryEdit;;<org.jhotdraw.draw.GeometryEdit: void <init>(org.jhotdraw.draw.Figure,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.draw.GeometryEdit;;<org.jhotdraw.draw.GeometryEdit: java.lang.String getPresentationName()>;;0
org.jhotdraw.draw.GeometryEdit;;<org.jhotdraw.draw.GeometryEdit: void undo()>;;0
org.jhotdraw.draw.GeometryEdit;;<org.jhotdraw.draw.GeometryEdit: void redo()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void <init>()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void addNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void removeNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void superBasicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void basicSetPresentationFigureBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void drawFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void drawPresentationFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void setPresentationFigure(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: org.jhotdraw.draw.Figure getPresentationFigure()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: org.jhotdraw.draw.GraphicalCompositeFigure clone()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void remap(java.util.HashMap)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void basicSetAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void setAttributeEnabled(org.jhotdraw.draw.AttributeKey,boolean)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: java.lang.Object getAttribute(org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void applyAttributesTo(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: org.jhotdraw.draw.AttributeKey getAttributeKey(java.lang.String)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: java.util.Map getAttributes()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: java.awt.geom.Point2D$Double chop(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: org.jhotdraw.draw.AbstractCompositeFigure clone()>;;0
org.jhotdraw.draw.GraphicalCompositeFigure;;<org.jhotdraw.draw.GraphicalCompositeFigure: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$StrokePlacement()>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: void <init>(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: void addMoveHandles(org.jhotdraw.draw.Figure,java.util.Collection)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle south(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle southEast(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle southWest(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle north(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle northEast(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle northWest(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle east(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.MoveHandle;;<org.jhotdraw.draw.MoveHandle: org.jhotdraw.draw.Handle west(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.GroupFigure;;<org.jhotdraw.draw.GroupFigure: void <init>()>;;0
org.jhotdraw.draw.GroupFigure;;<org.jhotdraw.draw.GroupFigure: boolean canConnect()>;;0
org.jhotdraw.draw.GroupFigure;;<org.jhotdraw.draw.GroupFigure: java.awt.geom.Point2D$Double chop(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void <init>(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void <init>(java.util.Collection)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void keyPressed(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void keyReleased(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void keyTyped(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void trackEnd(java.awt.Point,java.awt.Point,int,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void trackStart(java.awt.Point,int,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void trackDoubleClick(java.awt.Point,int,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.HandleMulticaster;;<org.jhotdraw.draw.HandleMulticaster: void trackStep(java.awt.Point,java.awt.Point,int,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void <init>(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void <init>(org.jhotdraw.draw.Handle,java.util.Collection)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void activate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void keyPressed(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void keyReleased(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void keyTyped(java.awt.event.KeyEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void mouseClicked(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void mouseEntered(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void mouseExited(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.HandleTracker;;<org.jhotdraw.draw.HandleTracker: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.HorizontalLayouter;;<org.jhotdraw.draw.HorizontalLayouter: void <init>()>;;0
org.jhotdraw.draw.HorizontalLayouter;;<org.jhotdraw.draw.HorizontalLayouter: java.awt.geom.Rectangle2D$Double calculateLayout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.HorizontalLayouter;;<org.jhotdraw.draw.HorizontalLayouter: java.awt.geom.Rectangle2D$Double layout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void <init>()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void drawFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void invalidateBounds()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: org.jhotdraw.draw.Figure findFigureInside(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void updateConnection()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: java.util.List getChildren()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: int getChildCount()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: org.jhotdraw.draw.Figure getChild(int)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void set(int,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: java.util.List getChildrenFrontToBack()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void add(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void add(int,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void basicAdd(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void basicAdd(int,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: boolean remove(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: org.jhotdraw.draw.Figure removeChild(int)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: boolean basicRemove(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: org.jhotdraw.draw.Figure basicRemoveChild(int)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void removeAllChildren()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void basicRemoveAllChildren()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: org.jhotdraw.draw.Layouter getLayouter()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void setLayouter(org.jhotdraw.draw.Layouter)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void layout()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void invalidate()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void validate()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void addNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void removeNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: org.jhotdraw.draw.LabeledLineConnectionFigure clone()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: void remap(java.util.HashMap)>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.LabeledLineConnectionFigure;;<org.jhotdraw.draw.LabeledLineConnectionFigure: org.jhotdraw.draw.LineConnectionFigure clone()>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void <init>()>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void <init>(java.lang.String)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void setLabelFor(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: org.jhotdraw.draw.TextHolder getLabelFor()>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: org.jhotdraw.draw.Tool getTool(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void figureAttributeChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void figureAdded(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void figureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void figureRemoved(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void figureRequestRemove(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.LabelFigure;;<org.jhotdraw.draw.LabelFigure: void remap(java.util.HashMap)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void <init>()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void <init>(java.lang.String)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.lang.String getText()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void setText(java.lang.String)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void drawText(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void invalidate()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.awt.font.TextLayout getTextLayout()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: org.jhotdraw.geom.Dimension2DDouble getPreferredSize()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void validate()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: boolean isEditable()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void setEditable(boolean)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: int getTextColumns()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: org.jhotdraw.draw.Tool getTool(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: int getTabSize()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: org.jhotdraw.draw.TextHolder getLabelFor()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: org.jhotdraw.geom.Insets2DDouble getInsets()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: org.jhotdraw.draw.TextFigure clone()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.awt.Font getFont()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.awt.Color getTextColor()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.awt.Color getFillColor()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: void setFontSize(float)>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: float getFontSize()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.TextFigure;;<org.jhotdraw.draw.TextFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void <init>(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void <init>(org.jhotdraw.draw.Figure,java.util.Map)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void beginEdit(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: java.awt.Rectangle getFieldBounds(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void endEdit()>;;0
org.jhotdraw.draw.TextTool;;<org.jhotdraw.draw.TextTool: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.ListFigure;;<org.jhotdraw.draw.ListFigure: void <init>()>;;0
org.jhotdraw.draw.ListFigure;;<org.jhotdraw.draw.ListFigure: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.VerticalLayouter;;<org.jhotdraw.draw.VerticalLayouter: void <init>()>;;0
org.jhotdraw.draw.VerticalLayouter;;<org.jhotdraw.draw.VerticalLayouter: java.awt.geom.Rectangle2D$Double calculateLayout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.VerticalLayouter;;<org.jhotdraw.draw.VerticalLayouter: java.awt.geom.Rectangle2D$Double layout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LocatorConnector;;<org.jhotdraw.draw.LocatorConnector: void <init>()>;;0
org.jhotdraw.draw.LocatorConnector;;<org.jhotdraw.draw.LocatorConnector: void <init>(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)>;;0
org.jhotdraw.draw.LocatorConnector;;<org.jhotdraw.draw.LocatorConnector: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.LocatorConnector;;<org.jhotdraw.draw.LocatorConnector: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LocatorConnector;;<org.jhotdraw.draw.LocatorConnector: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.LocatorConnector;;<org.jhotdraw.draw.LocatorConnector: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.LocatorConnector;;<org.jhotdraw.draw.LocatorConnector: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.LocatorLayouter;;<org.jhotdraw.draw.LocatorLayouter: void <clinit>()>;;0
org.jhotdraw.draw.LocatorLayouter;;<org.jhotdraw.draw.LocatorLayouter: void <init>()>;;0
org.jhotdraw.draw.LocatorLayouter;;<org.jhotdraw.draw.LocatorLayouter: java.awt.geom.Rectangle2D$Double calculateLayout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LocatorLayouter;;<org.jhotdraw.draw.LocatorLayouter: java.awt.geom.Rectangle2D$Double layout(org.jhotdraw.draw.CompositeFigure,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.LocatorLayouter;;<org.jhotdraw.draw.LocatorLayouter: org.jhotdraw.draw.Locator getLocator(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.NullHandle;;<org.jhotdraw.draw.NullHandle: void <init>(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Locator)>;;0
org.jhotdraw.draw.NullHandle;;<org.jhotdraw.draw.NullHandle: java.awt.Cursor getCursor()>;;0
org.jhotdraw.draw.NullHandle;;<org.jhotdraw.draw.NullHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.NullHandle;;<org.jhotdraw.draw.NullHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.NullHandle;;<org.jhotdraw.draw.NullHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.NullHandle;;<org.jhotdraw.draw.NullHandle: void addLeadHandles(org.jhotdraw.draw.Figure,java.util.Collection)>;;0
org.jhotdraw.draw.NullHandle;;<org.jhotdraw.draw.NullHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void <init>()>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: int indexOf(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void basicAdd(int,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void basicRemove(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: java.util.Collection sort(java.util.Collection)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void draw(java.awt.Graphics2D,java.util.Collection)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void figureAreaInvalidated(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void figureChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void figureAdded(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void figureRemoved(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void figureRequestRemove(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: java.util.Collection getFigures(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: java.util.Collection getFigures()>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: org.jhotdraw.draw.Figure findFigureInside(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: java.util.List getFiguresFrontToBack()>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: org.jhotdraw.draw.Figure findFigure(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: org.jhotdraw.draw.Figure findFigureExcept(java.awt.geom.Point2D$Double,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: org.jhotdraw.draw.Figure findFigureExcept(java.awt.geom.Point2D$Double,java.util.Collection)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: java.util.Collection findFigures(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: java.util.Collection findFiguresWithin(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void bringToFront(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void sendToBack(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void undoableEditHappened(javax.swing.event.UndoableEditEvent)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void figureAttributeChanged(org.jhotdraw.draw.FigureEvent)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: boolean contains(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.QuadTreeDrawing;;<org.jhotdraw.draw.QuadTreeDrawing: void ensureSorted()>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: void <init>()>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: void <init>(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: void add(java.lang.Object,java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: void reorganize()>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: void remove(java.lang.Object)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: java.util.Collection findContains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: java.util.Collection findIntersects(java.awt.geom.Rectangle2D)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: java.util.Collection findIntersects(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: java.util.Collection findInside(java.awt.geom.Rectangle2D$Double)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: int access$0(org.jhotdraw.geom.QuadTree2DDouble)>;;0
org.jhotdraw.geom.QuadTree2DDouble;;<org.jhotdraw.geom.QuadTree2DDouble: int access$1(org.jhotdraw.geom.QuadTree2DDouble)>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: void <init>()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: void <init>(double,double)>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: void <init>(double,double,boolean)>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: java.awt.geom.Point2D$Double locate(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator east()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator north()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator west()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator northEast()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator northWest()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator south()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator southEast()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator southWest()>;;0
org.jhotdraw.draw.RelativeDecoratorLocator;;<org.jhotdraw.draw.RelativeDecoratorLocator: org.jhotdraw.draw.Locator center()>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: boolean isCombinableWith(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: java.awt.Point getLocation()>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: java.awt.geom.Point2D$Double getOrigin()>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.RotateHandle;;<org.jhotdraw.draw.RotateHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.RoundRectRadiusHandle;;<org.jhotdraw.draw.RoundRectRadiusHandle: void <init>(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.draw.RoundRectRadiusHandle;;<org.jhotdraw.draw.RoundRectRadiusHandle: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.RoundRectRadiusHandle;;<org.jhotdraw.draw.RoundRectRadiusHandle: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.RoundRectRadiusHandle;;<org.jhotdraw.draw.RoundRectRadiusHandle: java.awt.Point locate()>;;0
org.jhotdraw.draw.RoundRectRadiusHandle;;<org.jhotdraw.draw.RoundRectRadiusHandle: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.RoundRectRadiusHandle;;<org.jhotdraw.draw.RoundRectRadiusHandle: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.RoundRectRadiusHandle;;<org.jhotdraw.draw.RoundRectRadiusHandle: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void <init>()>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void mouseDragged(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void mouseMoved(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void clearRubberBand()>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.SelectAreaTracker;;<org.jhotdraw.draw.SelectAreaTracker: void selectGroup(boolean)>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: void <init>()>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: void <init>(double)>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: java.util.Collection createHandles(org.jhotdraw.geom.BezierPath)>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: void lineout(org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: org.jhotdraw.draw.Liner clone()>;;0
org.jhotdraw.draw.SlantedLiner;;<org.jhotdraw.draw.SlantedLiner: java.lang.Object clone()>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: void <init>()>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: void setAngle(float)>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: double getAngle()>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: void <init>(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: void updateAnchor(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: java.awt.geom.Point2D$Double getAnchor()>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: java.awt.geom.Point2D$Double chop(org.jhotdraw.draw.Figure,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: java.lang.String getParameters()>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.StickyChopConnector;;<org.jhotdraw.draw.StickyChopConnector: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void <clinit>()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void <init>()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void <init>(java.lang.String)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.lang.String getText()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void setText(java.lang.String)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: org.jhotdraw.geom.Insets2DDouble getInsets()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: int getTabSize()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void drawText(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: float drawParagraph(java.awt.Graphics2D,java.text.AttributedCharacterIterator,float,float,float,float[],int)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void validate()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: boolean isEditable()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void setEditable(boolean)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: int getTextColumns()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: org.jhotdraw.draw.Tool getTool(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void readBounds(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void writeBounds(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: org.jhotdraw.draw.TextAreaFigure clone()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: org.jhotdraw.draw.TextHolder getLabelFor()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.lang.Object getRestoreData()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.awt.Font getFont()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.awt.Color getTextColor()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.awt.Color getFillColor()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: void setFontSize(float)>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: float getFontSize()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: java.lang.Object clone()>;;0
org.jhotdraw.draw.TextAreaFigure;;<org.jhotdraw.draw.TextAreaFigure: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: void <init>(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: void deactivate(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: void mousePressed(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: void beginEdit(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: java.awt.geom.Rectangle2D$Double getFieldBounds(org.jhotdraw.draw.TextHolder)>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: void mouseReleased(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: void endEdit()>;;0
org.jhotdraw.draw.TextAreaTool;;<org.jhotdraw.draw.TextAreaTool: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: void <init>(org.jhotdraw.draw.TriangleFigure)>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: boolean isCombinableWith(org.jhotdraw.draw.Handle)>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: java.awt.geom.Point2D$Double getLocation()>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: java.awt.Rectangle basicGetBounds()>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: void trackStart(java.awt.Point,int)>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: void trackStep(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: void draw(java.awt.Graphics2D)>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: void trackEnd(java.awt.Point,java.awt.Point,int)>;;0
org.jhotdraw.draw.TriangleRotationHandler;;<org.jhotdraw.draw.TriangleRotationHandler: int[] $SWITCH_TABLE$org$jhotdraw$draw$AttributeKeys$Orientation()>;;0
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: void <clinit>()>;;0
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;1
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: void setEditor(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: void updateEnabledState()>;;0
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.draw.action.AbstractEditorAction;;<org.jhotdraw.draw.action.AbstractEditorAction: void fireUndoableEditHappened(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: void updateEnabledState()>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: void dispose()>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: void setEditor(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: void fireUndoableEditHappened(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.action.AbstractSelectedAction;;<org.jhotdraw.draw.action.AbstractSelectedAction: java.beans.PropertyChangeListener access$0(org.jhotdraw.draw.action.AbstractSelectedAction)>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: void <clinit>()>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: void <init>(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: void setEditor(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: void fireUndoableEditHappened(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: void viewChanged()>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: void updateEnabledState()>;;0
org.jhotdraw.draw.action.AbstractViewAction;;<org.jhotdraw.draw.action.AbstractViewAction: java.beans.PropertyChangeListener access$0(org.jhotdraw.draw.action.AbstractViewAction)>;;0
org.jhotdraw.draw.action.AlignAction;;<org.jhotdraw.draw.action.AlignAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.AlignAction;;<org.jhotdraw.draw.action.AlignAction: void updateEnabledState()>;;0
org.jhotdraw.draw.action.AlignAction;;<org.jhotdraw.draw.action.AlignAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.AlignAction;;<org.jhotdraw.draw.action.AlignAction: java.awt.geom.Rectangle2D$Double getSelectionBounds()>;;0
org.jhotdraw.draw.action.ApplyAttributesAction;;<org.jhotdraw.draw.action.ApplyAttributesAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ApplyAttributesAction;;<org.jhotdraw.draw.action.ApplyAttributesAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.ApplyAttributesAction;;<org.jhotdraw.draw.action.ApplyAttributesAction: void applyAttributes()>;;0
org.jhotdraw.draw.action.ApplyAttributesAction;;<org.jhotdraw.draw.action.ApplyAttributesAction: void selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.String)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.String,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.String,javax.swing.Icon,javax.swing.Action)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,java.util.Map,java.lang.String,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.AttributeAction;;<org.jhotdraw.draw.action.AttributeAction: void changeAttributes()>;;0
org.jhotdraw.draw.action.AttributeToggler;;<org.jhotdraw.draw.action.AttributeToggler: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.draw.action.AttributeToggler;;<org.jhotdraw.draw.action.AttributeToggler: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.Object,java.lang.Object,javax.swing.Action)>;;0
org.jhotdraw.draw.action.AttributeToggler;;<org.jhotdraw.draw.action.AttributeToggler: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.draw.action.AttributeToggler;;<org.jhotdraw.draw.action.AttributeToggler: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.draw.action.AttributeToggler;;<org.jhotdraw.draw.action.AttributeToggler: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.ColorAttributeIcon;;<org.jhotdraw.draw.action.ColorAttributeIcon: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.net.URL)>;;0
org.jhotdraw.draw.action.ColorAttributeIcon;;<org.jhotdraw.draw.action.ColorAttributeIcon: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.awt.Image)>;;0
org.jhotdraw.draw.action.ColorAttributeIcon;;<org.jhotdraw.draw.action.ColorAttributeIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>;;0
org.jhotdraw.draw.action.ColorChooserAction;;<org.jhotdraw.draw.action.ColorChooserAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.action.ColorChooserAction;;<org.jhotdraw.draw.action.ColorChooserAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.ColorChooserAction;;<org.jhotdraw.draw.action.ColorChooserAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.String)>;;0
org.jhotdraw.draw.action.ColorChooserAction;;<org.jhotdraw.draw.action.ColorChooserAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.String,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.ColorChooserAction;;<org.jhotdraw.draw.action.ColorChooserAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.ColorChooserAction;;<org.jhotdraw.draw.action.ColorChooserAction: void changeAttribute(java.awt.Color)>;;0
org.jhotdraw.draw.action.ColorChooserAction;;<org.jhotdraw.draw.action.ColorChooserAction: void selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)>;;0
org.jhotdraw.draw.action.ColorIcon;;<org.jhotdraw.draw.action.ColorIcon: void <init>(java.awt.Color)>;;0
org.jhotdraw.draw.action.ColorIcon;;<org.jhotdraw.draw.action.ColorIcon: int getIconHeight()>;;0
org.jhotdraw.draw.action.ColorIcon;;<org.jhotdraw.draw.action.ColorIcon: int getIconWidth()>;;0
org.jhotdraw.draw.action.ColorIcon;;<org.jhotdraw.draw.action.ColorIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>;;0
org.jhotdraw.draw.action.Colors;;<org.jhotdraw.draw.action.Colors: void <init>()>;;0
org.jhotdraw.draw.action.Colors;;<org.jhotdraw.draw.action.Colors: java.awt.Color shadow(java.awt.Color,int)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey[])>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.String)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.lang.String,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey[],java.lang.String,javax.swing.Icon)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void changeAttribute()>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: void selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)>;;0
org.jhotdraw.draw.action.DefaultAttributeAction;;<org.jhotdraw.draw.action.DefaultAttributeAction: org.jhotdraw.draw.AttributeKey[] access$0(org.jhotdraw.draw.action.DefaultAttributeAction)>;;0
org.jhotdraw.draw.action.GenericListener;;<org.jhotdraw.draw.action.GenericListener: java.lang.Object create(java.lang.Class,java.lang.String,java.lang.Object,java.lang.String)>;;0
org.jhotdraw.draw.action.GenericListener;;<org.jhotdraw.draw.action.GenericListener: java.lang.Object create(java.lang.reflect.Method,java.lang.Object,java.lang.reflect.Method)>;;0
org.jhotdraw.draw.action.GenericListener;;<org.jhotdraw.draw.action.GenericListener: java.lang.reflect.Method getListenerMethod(java.lang.Class,java.lang.String)>;;0
org.jhotdraw.draw.action.GenericListener;;<org.jhotdraw.draw.action.GenericListener: java.lang.reflect.Method getTargetMethod(java.lang.Object,java.lang.String,java.lang.Class[])>;;0
org.jhotdraw.draw.action.GenericListener;;<org.jhotdraw.draw.action.GenericListener: java.lang.reflect.Method raiseToPublicClass(java.lang.reflect.Method)>;;0
org.jhotdraw.draw.action.GenericListener;;<org.jhotdraw.draw.action.GenericListener: java.lang.reflect.Method raiseToPublicClass(java.lang.reflect.Method,java.lang.Class)>;;0
org.jhotdraw.draw.action.GenericListener;;<org.jhotdraw.draw.action.GenericListener: void <init>()>;;0
org.jhotdraw.draw.action.GroupAction;;<org.jhotdraw.draw.action.GroupAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.GroupAction;;<org.jhotdraw.draw.action.GroupAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.CompositeFigure)>;;0
org.jhotdraw.draw.action.GroupAction;;<org.jhotdraw.draw.action.GroupAction: void updateEnabledState()>;;0
org.jhotdraw.draw.action.GroupAction;;<org.jhotdraw.draw.action.GroupAction: boolean canGroup()>;;0
org.jhotdraw.draw.action.GroupAction;;<org.jhotdraw.draw.action.GroupAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.GroupAction;;<org.jhotdraw.draw.action.GroupAction: java.util.Collection ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)>;;0
org.jhotdraw.draw.action.GroupAction;;<org.jhotdraw.draw.action.GroupAction: void groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection)>;;0
org.jhotdraw.draw.action.ImageBevelBorder;;<org.jhotdraw.draw.action.ImageBevelBorder: void <init>(java.awt.Image,java.awt.Insets)>;;0
org.jhotdraw.draw.action.ImageBevelBorder;;<org.jhotdraw.draw.action.ImageBevelBorder: void <init>(java.awt.Image,java.awt.Insets,java.awt.Insets)>;;0
org.jhotdraw.draw.action.ImageBevelBorder;;<org.jhotdraw.draw.action.ImageBevelBorder: void <init>(java.awt.Image,java.awt.Insets,java.awt.Insets,boolean)>;;0
org.jhotdraw.draw.action.ImageBevelBorder;;<org.jhotdraw.draw.action.ImageBevelBorder: boolean isBorderOpaque()>;;0
org.jhotdraw.draw.action.ImageBevelBorder;;<org.jhotdraw.draw.action.ImageBevelBorder: java.awt.Insets getBorderInsets(java.awt.Component)>;;0
org.jhotdraw.draw.action.ImageBevelBorder;;<org.jhotdraw.draw.action.ImageBevelBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void <clinit>()>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void <init>()>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void setItemFont(java.awt.Font)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void setAction(javax.swing.Action,java.awt.Rectangle)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: int getColumnCount()>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void setColumnCount(int,boolean)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void add(javax.swing.Action)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void add(javax.swing.JMenu)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void updateFont(javax.swing.MenuElement)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void add(javax.swing.JMenuItem)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void addSeparator()>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void setPopupMenu(javax.swing.JPopupMenu)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: javax.swing.JPopupMenu getPopupMenu()>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void initComponents()>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void performAction(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void showPopup(java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void access$0(org.jhotdraw.draw.action.JPopupButton,java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.action.JPopupButton;;<org.jhotdraw.draw.action.JPopupButton: void access$1(org.jhotdraw.draw.action.JPopupButton,java.awt.event.MouseEvent)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void <init>()>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void <init>(int,int)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void <init>(int,int,boolean)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void <init>(int,int,int,int)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void <init>(int,int,int,int,boolean)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: int getRows()>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void setRows(int)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void setVertical(boolean)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: boolean isVertical()>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: int getColumns()>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void setColumns(int)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: int getHgap()>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void setHgap(int)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: int getVgap()>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void setVgap(int)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void addLayoutComponent(java.lang.String,java.awt.Component)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void removeLayoutComponent(java.awt.Component)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: void layoutContainer(java.awt.Container)>;;0
org.jhotdraw.draw.action.VerticalGridLayout;;<org.jhotdraw.draw.action.VerticalGridLayout: java.lang.String toString()>;;0
org.jhotdraw.draw.action.PaletteMenuItemUI;;<org.jhotdraw.draw.action.PaletteMenuItemUI: void <init>()>;;0
org.jhotdraw.draw.action.PaletteMenuItemUI;;<org.jhotdraw.draw.action.PaletteMenuItemUI: void installDefaults()>;;0
org.jhotdraw.draw.action.PaletteMenuItemUI;;<org.jhotdraw.draw.action.PaletteMenuItemUI: java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int)>;;0
org.jhotdraw.draw.action.PaletteMenuItemUI;;<org.jhotdraw.draw.action.PaletteMenuItemUI: void paint(java.awt.Graphics,javax.swing.JComponent)>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: void <clinit>()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: void <init>()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.BeanDescriptor getBdescriptor()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.PropertyDescriptor[] getPdescriptor()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.EventSetDescriptor[] getEdescriptor()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.MethodDescriptor[] getMdescriptor()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.BeanDescriptor getBeanDescriptor()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.EventSetDescriptor[] getEventSetDescriptors()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.beans.MethodDescriptor[] getMethodDescriptors()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: int getDefaultPropertyIndex()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: int getDefaultEventIndex()>;;0
org.jhotdraw.draw.action.JPopupButtonBeanInfo;;<org.jhotdraw.draw.action.JPopupButtonBeanInfo: java.awt.Image getIcon(int)>;;0
org.jhotdraw.draw.action.LineDecorationIcon;;<org.jhotdraw.draw.action.LineDecorationIcon: void <init>(org.jhotdraw.draw.LineDecoration,boolean)>;;0
org.jhotdraw.draw.action.LineDecorationIcon;;<org.jhotdraw.draw.action.LineDecorationIcon: int getIconHeight()>;;0
org.jhotdraw.draw.action.LineDecorationIcon;;<org.jhotdraw.draw.action.LineDecorationIcon: int getIconWidth()>;;0
org.jhotdraw.draw.action.LineDecorationIcon;;<org.jhotdraw.draw.action.LineDecorationIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>;;0
org.jhotdraw.draw.action.MoveAction;;<org.jhotdraw.draw.action.MoveAction: void <init>(org.jhotdraw.draw.DrawingEditor,int,int)>;;0
org.jhotdraw.draw.action.MoveAction;;<org.jhotdraw.draw.action.MoveAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.MoveToBackAction;;<org.jhotdraw.draw.action.MoveToBackAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.MoveToBackAction;;<org.jhotdraw.draw.action.MoveToBackAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.MoveToBackAction;;<org.jhotdraw.draw.action.MoveToBackAction: void sendToBack(org.jhotdraw.draw.DrawingView,java.util.Collection)>;;0
org.jhotdraw.draw.action.MoveToBackAction;;<org.jhotdraw.draw.action.MoveToBackAction: org.jhotdraw.util.ResourceBundleUtil access$0(org.jhotdraw.draw.action.MoveToBackAction)>;;0
org.jhotdraw.draw.action.MoveToFrontAction;;<org.jhotdraw.draw.action.MoveToFrontAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.MoveToFrontAction;;<org.jhotdraw.draw.action.MoveToFrontAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.MoveToFrontAction;;<org.jhotdraw.draw.action.MoveToFrontAction: void bringToFront(org.jhotdraw.draw.DrawingView,java.util.Collection)>;;0
org.jhotdraw.draw.action.MoveToFrontAction;;<org.jhotdraw.draw.action.MoveToFrontAction: org.jhotdraw.util.ResourceBundleUtil access$0(org.jhotdraw.draw.action.MoveToFrontAction)>;;0
org.jhotdraw.draw.action.PickAttributesAction;;<org.jhotdraw.draw.action.PickAttributesAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.PickAttributesAction;;<org.jhotdraw.draw.action.PickAttributesAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.PickAttributesAction;;<org.jhotdraw.draw.action.PickAttributesAction: void pickAttributes()>;;0
org.jhotdraw.draw.action.PickAttributesAction;;<org.jhotdraw.draw.action.PickAttributesAction: void selectionChanged(org.jhotdraw.draw.FigureSelectionEvent)>;;0
org.jhotdraw.draw.action.RunnableWorker;;<org.jhotdraw.draw.action.RunnableWorker: void <init>()>;;0
org.jhotdraw.draw.action.RunnableWorker;;<org.jhotdraw.draw.action.RunnableWorker: void run()>;;0
org.jhotdraw.draw.action.RunnableWorker;;<org.jhotdraw.draw.action.RunnableWorker: void finished(java.lang.Object)>;;0
org.jhotdraw.draw.action.RunnableWorker;;<org.jhotdraw.draw.action.RunnableWorker: java.lang.Object getValue()>;;0
org.jhotdraw.draw.action.RunnableWorker;;<org.jhotdraw.draw.action.RunnableWorker: void setValue(java.lang.Object)>;;0
org.jhotdraw.draw.action.SelectSameAction;;<org.jhotdraw.draw.action.SelectSameAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.SelectSameAction;;<org.jhotdraw.draw.action.SelectSameAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.SelectSameAction;;<org.jhotdraw.draw.action.SelectSameAction: void selectSame()>;;0
org.jhotdraw.draw.action.StrokeIcon;;<org.jhotdraw.draw.action.StrokeIcon: void <init>(java.awt.Stroke)>;;0
org.jhotdraw.draw.action.StrokeIcon;;<org.jhotdraw.draw.action.StrokeIcon: int getIconHeight()>;;0
org.jhotdraw.draw.action.StrokeIcon;;<org.jhotdraw.draw.action.StrokeIcon: int getIconWidth()>;;0
org.jhotdraw.draw.action.StrokeIcon;;<org.jhotdraw.draw.action.StrokeIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: void <init>()>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: void finished()>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: java.lang.Object get()>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: java.lang.Object getValue()>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: void interrupt()>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: void setValue(java.lang.Object)>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: void start()>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: org.jhotdraw.draw.action.SwingWorker$ThreadVar access$0(org.jhotdraw.draw.action.SwingWorker)>;;0
org.jhotdraw.draw.action.SwingWorker;;<org.jhotdraw.draw.action.SwingWorker: void access$1(org.jhotdraw.draw.action.SwingWorker,java.lang.Object)>;;0
org.jhotdraw.draw.action.ToggleGridAction;;<org.jhotdraw.draw.action.ToggleGridAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToggleGridAction;;<org.jhotdraw.draw.action.ToggleGridAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.Constrainer,org.jhotdraw.draw.Constrainer)>;;0
org.jhotdraw.draw.action.ToggleGridAction;;<org.jhotdraw.draw.action.ToggleGridAction: void <init>(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.Constrainer,org.jhotdraw.draw.Constrainer)>;;0
org.jhotdraw.draw.action.ToggleGridAction;;<org.jhotdraw.draw.action.ToggleGridAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void <clinit>()>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void <init>()>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: java.util.Collection createDrawingActions(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: java.util.Collection createSelectionActions(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addSelectionToolTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addSelectionToolTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,java.util.Collection,java.util.Collection)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addToolTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.Tool,java.lang.String,org.jhotdraw.util.ResourceBundleUtil)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addZoomButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: javax.swing.AbstractButton createZoomButton(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: javax.swing.AbstractButton createZoomButton(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addAttributesButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addColorButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addColorButtonTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.AttributeKey,java.util.Map,int,java.lang.String,org.jhotdraw.util.ResourceBundleUtil)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addStrokeButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addStrokeWidthButtonTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addStrokeDecorationButtonTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addStrokeDashesButtonTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addStrokeTypeButtonTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addStrokePlacementButtonTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addFontButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: void addAlignmentButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: javax.swing.AbstractButton createToggleGridButton(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.ToolBarButtonFactory;;<org.jhotdraw.draw.action.ToolBarButtonFactory: javax.swing.AbstractButton createToggleGridButton(org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.draw.action.UngroupAction;;<org.jhotdraw.draw.action.UngroupAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.draw.action.UngroupAction;;<org.jhotdraw.draw.action.UngroupAction: void <init>(org.jhotdraw.draw.DrawingEditor,org.jhotdraw.draw.CompositeFigure)>;;0
org.jhotdraw.draw.action.UngroupAction;;<org.jhotdraw.draw.action.UngroupAction: void updateEnabledState()>;;0
org.jhotdraw.draw.action.UngroupAction;;<org.jhotdraw.draw.action.UngroupAction: boolean canUngroup()>;;0
org.jhotdraw.draw.action.UngroupAction;;<org.jhotdraw.draw.action.UngroupAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.UngroupAction;;<org.jhotdraw.draw.action.UngroupAction: java.util.Collection ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)>;;0
org.jhotdraw.draw.action.UngroupAction;;<org.jhotdraw.draw.action.UngroupAction: void groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection)>;;0
org.jhotdraw.draw.action.ZoomAction;;<org.jhotdraw.draw.action.ZoomAction: void <init>(org.jhotdraw.draw.DrawingEditor,double,javax.swing.AbstractButton)>;;0
org.jhotdraw.draw.action.ZoomAction;;<org.jhotdraw.draw.action.ZoomAction: void <init>(org.jhotdraw.draw.DrawingView,double,javax.swing.AbstractButton)>;;0
org.jhotdraw.draw.action.ZoomAction;;<org.jhotdraw.draw.action.ZoomAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.draw.action.ZoomEditorAction;;<org.jhotdraw.draw.action.ZoomEditorAction: void <init>(org.jhotdraw.draw.DrawingEditor,double,javax.swing.AbstractButton)>;;0
org.jhotdraw.draw.action.ZoomEditorAction;;<org.jhotdraw.draw.action.ZoomEditorAction: void <init>(org.jhotdraw.draw.DrawingEditor,double,javax.swing.AbstractButton,boolean)>;;0
org.jhotdraw.draw.action.ZoomEditorAction;;<org.jhotdraw.draw.action.ZoomEditorAction: void actionPerformed(java.awt.event.ActionEvent)>;;0
org.jhotdraw.gui.PlacardScrollPaneLayout;;<org.jhotdraw.gui.PlacardScrollPaneLayout: void <init>()>;;0
org.jhotdraw.gui.PlacardScrollPaneLayout;;<org.jhotdraw.gui.PlacardScrollPaneLayout: void layoutContainer(java.awt.Container)>;;0
org.jhotdraw.io.ExtensionFileFilter;;<org.jhotdraw.io.ExtensionFileFilter: void <init>(java.lang.String,java.lang.String)>;;0
org.jhotdraw.io.ExtensionFileFilter;;<org.jhotdraw.io.ExtensionFileFilter: void <init>(java.lang.String,java.lang.String[])>;;0
org.jhotdraw.io.ExtensionFileFilter;;<org.jhotdraw.io.ExtensionFileFilter: java.util.Set getExtensions()>;;0
org.jhotdraw.io.ExtensionFileFilter;;<org.jhotdraw.io.ExtensionFileFilter: boolean accept(java.io.File)>;;0
org.jhotdraw.io.ExtensionFileFilter;;<org.jhotdraw.io.ExtensionFileFilter: java.io.File makeAcceptable(java.io.File)>;;0
org.jhotdraw.io.ExtensionFileFilter;;<org.jhotdraw.io.ExtensionFileFilter: java.lang.String getDescription()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: void <init>()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: java.lang.String getParameter(java.lang.String)>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: void init()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: void setData(java.lang.String)>;;1
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: java.lang.String getData()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: java.lang.String[][] getParameterInfo()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: java.lang.String getAppletInfo()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: void initComponents()>;;0
org.jhotdraw.samples.draw.DrawApplet;;<org.jhotdraw.samples.draw.DrawApplet: void main(java.lang.String[])>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: void <init>()>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: void initComponents()>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.draw.DrawingPanel;;<org.jhotdraw.samples.draw.DrawingPanel: void addDefaultCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,java.util.Collection,java.util.Collection)>;;0
org.jhotdraw.samples.draw.DrawFigureFactory;;<org.jhotdraw.samples.draw.DrawFigureFactory: void <clinit>()>;;0
org.jhotdraw.samples.draw.DrawFigureFactory;;<org.jhotdraw.samples.draw.DrawFigureFactory: void <init>()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void <clinit>()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: org.jhotdraw.util.ResourceBundleUtil getLabels()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void <init>()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void setLocale(java.util.Locale)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void discardAllEdits()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void setHasSignificantEdits(boolean)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: boolean hasSignificantEdits()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: boolean addEdit(javax.swing.undo.UndoableEdit)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: javax.swing.Action getUndoAction()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: javax.swing.Action getRedoAction()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void updateActions()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void undo()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void redo()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void undoOrRedo()>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void addPropertyChangeListener(java.beans.PropertyChangeListener)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void removePropertyChangeListener(java.beans.PropertyChangeListener)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void firePropertyChange(java.lang.String,boolean,boolean)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void firePropertyChange(java.lang.String,int,int)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.undo.UndoRedoManager;;<org.jhotdraw.undo.UndoRedoManager: org.jhotdraw.util.ResourceBundleUtil access$0()>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: void <clinit>()>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: void <init>()>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: void addStorableClass(java.lang.String,java.lang.Class)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: void addStorable(java.lang.String,org.jhotdraw.xml.DOMStorable)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: void addEnumClass(java.lang.String,java.lang.Class)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: void addEnum(java.lang.String,java.lang.Enum)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: java.lang.Object create(java.lang.String)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: java.lang.String getName(org.jhotdraw.xml.DOMStorable)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: java.lang.String getEnumName(java.lang.Enum)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: java.lang.String getEnumValue(java.lang.Enum)>;;0
org.jhotdraw.xml.DefaultDOMFactory;;<org.jhotdraw.xml.DefaultDOMFactory: java.lang.Enum createEnum(java.lang.String,java.lang.String)>;;0
org.jhotdraw.samples.draw.DrawApplicationModel;;<org.jhotdraw.samples.draw.DrawApplicationModel: void <init>()>;;0
org.jhotdraw.samples.draw.DrawApplicationModel;;<org.jhotdraw.samples.draw.DrawApplicationModel: org.jhotdraw.draw.DefaultDrawingEditor getSharedEditor()>;;0
org.jhotdraw.samples.draw.DrawApplicationModel;;<org.jhotdraw.samples.draw.DrawApplicationModel: void initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.draw.DrawApplicationModel;;<org.jhotdraw.samples.draw.DrawApplicationModel: java.util.List createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.draw.DrawApplicationModel;;<org.jhotdraw.samples.draw.DrawApplicationModel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.draw.DrawApplicationModel;;<org.jhotdraw.samples.draw.DrawApplicationModel: void addDefaultCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor,java.util.Collection,java.util.Collection)>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void <init>()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void init()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void setEditor(org.jhotdraw.draw.DrawingEditor)>;;1
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void initActions()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void setHasUnsavedChanges(boolean)>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void write(java.io.File)>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void read(java.io.File)>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void setDrawingEditor(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: org.jhotdraw.draw.DrawingEditor getDrawingEditor()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void clear()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: javax.swing.JFileChooser createOpenChooser()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: javax.swing.JFileChooser createSaveChooser()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: void initComponents()>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: org.jhotdraw.undo.UndoRedoManager access$0(org.jhotdraw.samples.draw.DrawProject)>;;0
org.jhotdraw.samples.draw.DrawProject;;<org.jhotdraw.samples.draw.DrawProject: org.jhotdraw.draw.DefaultDrawingView access$1(org.jhotdraw.samples.draw.DrawProject)>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: void <clinit>()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: void <init>()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.BeanDescriptor getBdescriptor()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.PropertyDescriptor[] getPdescriptor()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.EventSetDescriptor[] getEdescriptor()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.MethodDescriptor[] getMdescriptor()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.BeanDescriptor getBeanDescriptor()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.EventSetDescriptor[] getEventSetDescriptors()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.beans.MethodDescriptor[] getMethodDescriptors()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: int getDefaultPropertyIndex()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: int getDefaultEventIndex()>;;0
org.jhotdraw.samples.draw.DrawingPanelBeanInfo;;<org.jhotdraw.samples.draw.DrawingPanelBeanInfo: java.awt.Image getIcon(int)>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: void <init>()>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: void init()>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: void setData(java.lang.String)>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: java.lang.String getData()>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: java.lang.String[][] getParameterInfo()>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: java.lang.String getAppletInfo()>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: void initComponents()>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: void save(java.awt.event.ActionEvent)>;;0
org.jhotdraw.samples.draw.DrawLiveConnectApplet;;<org.jhotdraw.samples.draw.DrawLiveConnectApplet: void load(java.awt.event.ActionEvent)>;;0
org.jhotdraw.samples.draw.Main;;<org.jhotdraw.samples.draw.Main: void <init>()>;;0
org.jhotdraw.samples.draw.Main;;<org.jhotdraw.samples.draw.Main: void main(java.lang.String[])>;;0
org.jhotdraw.samples.net.Main;;<org.jhotdraw.samples.net.Main: void <init>()>;;0
org.jhotdraw.samples.net.Main;;<org.jhotdraw.samples.net.Main: void main(java.lang.String[])>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: void <clinit>()>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: void <init>()>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: void initApplication(org.jhotdraw.app.Application)>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: org.jhotdraw.draw.DefaultDrawingEditor getSharedEditor()>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: void initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: java.util.List createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.net.NetApplicationModel;;<org.jhotdraw.samples.net.NetApplicationModel: java.util.List createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: void <init>()>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: java.lang.String getParameter(java.lang.String)>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: void init()>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: void setData(java.lang.String)>;;1
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: java.lang.String getData()>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: java.lang.String[][] getParameterInfo()>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: java.lang.String getAppletInfo()>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: void initComponents()>;;0
org.jhotdraw.samples.net.NetApplet;;<org.jhotdraw.samples.net.NetApplet: void main(java.lang.String[])>;;0
org.jhotdraw.samples.net.NetPanel;;<org.jhotdraw.samples.net.NetPanel: void <init>()>;;0
org.jhotdraw.samples.net.NetPanel;;<org.jhotdraw.samples.net.NetPanel: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.net.NetPanel;;<org.jhotdraw.samples.net.NetPanel: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.net.NetPanel;;<org.jhotdraw.samples.net.NetPanel: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.samples.net.NetPanel;;<org.jhotdraw.samples.net.NetPanel: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.net.NetPanel;;<org.jhotdraw.samples.net.NetPanel: void initComponents()>;;0
org.jhotdraw.samples.net.NetPanel;;<org.jhotdraw.samples.net.NetPanel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.net.NetFactory;;<org.jhotdraw.samples.net.NetFactory: void <clinit>()>;;0
org.jhotdraw.samples.net.NetFactory;;<org.jhotdraw.samples.net.NetFactory: void <init>()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void <init>()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void init()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void setEditor(org.jhotdraw.draw.DrawingEditor)>;;1
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void setGridVisible(boolean)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: boolean isGridVisible()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: double getScaleFactor()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void setScaleFactor(double)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void initActions()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void setHasUnsavedChanges(boolean)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void write(java.io.File)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void read(java.io.File)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void setDrawingEditor(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: org.jhotdraw.draw.DrawingEditor getDrawingEditor()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void clear()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: javax.swing.JFileChooser createOpenChooser()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: javax.swing.JFileChooser createSaveChooser()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void initComponents()>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: org.jhotdraw.undo.UndoRedoManager access$0(org.jhotdraw.samples.net.NetProject)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: java.util.prefs.Preferences access$1(org.jhotdraw.samples.net.NetProject)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: void access$2(org.jhotdraw.samples.net.NetProject,java.lang.String,java.lang.Object,java.lang.Object)>;;0
org.jhotdraw.samples.net.NetProject;;<org.jhotdraw.samples.net.NetProject: org.jhotdraw.draw.DefaultDrawingView access$3(org.jhotdraw.samples.net.NetProject)>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: void <init>()>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: void createConnectors()>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: java.awt.geom.Rectangle2D$Double getFigureDrawBounds()>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: org.jhotdraw.draw.Connector findConnector(java.awt.geom.Point2D$Double,org.jhotdraw.draw.ConnectionFigure)>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: org.jhotdraw.draw.Connector findCompatibleConnector(org.jhotdraw.draw.Connector,boolean)>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: org.jhotdraw.samples.net.figures.NodeFigure clone()>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: void drawConnectors(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: int getLayer()>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: void setAttribute(org.jhotdraw.draw.AttributeKey,java.lang.Object)>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: java.lang.Object clone()>;;0
org.jhotdraw.samples.net.figures.NodeFigure;;<org.jhotdraw.samples.net.figures.NodeFigure: org.jhotdraw.draw.TextFigure clone()>;;0
org.jhotdraw.samples.pert.Main;;<org.jhotdraw.samples.pert.Main: void <init>()>;;0
org.jhotdraw.samples.pert.Main;;<org.jhotdraw.samples.pert.Main: void main(java.lang.String[])>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: void <clinit>()>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: void <init>()>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: void initApplication(org.jhotdraw.app.Application)>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: org.jhotdraw.draw.DefaultDrawingEditor getSharedEditor()>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: void initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: java.util.List createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.pert.PertApplicationModel;;<org.jhotdraw.samples.pert.PertApplicationModel: java.util.List createMenus(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: void <init>()>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: java.lang.String getParameter(java.lang.String)>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: void init()>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: void setData(java.lang.String)>;;1
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: java.lang.String getData()>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: java.lang.String[][] getParameterInfo()>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: java.lang.String getAppletInfo()>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: void initComponents()>;;0
org.jhotdraw.samples.pert.PertApplet;;<org.jhotdraw.samples.pert.PertApplet: void main(java.lang.String[])>;;0
org.jhotdraw.samples.pert.PertPanel;;<org.jhotdraw.samples.pert.PertPanel: void <init>()>;;0
org.jhotdraw.samples.pert.PertPanel;;<org.jhotdraw.samples.pert.PertPanel: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.pert.PertPanel;;<org.jhotdraw.samples.pert.PertPanel: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.pert.PertPanel;;<org.jhotdraw.samples.pert.PertPanel: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.samples.pert.PertPanel;;<org.jhotdraw.samples.pert.PertPanel: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.pert.PertPanel;;<org.jhotdraw.samples.pert.PertPanel: void initComponents()>;;0
org.jhotdraw.samples.pert.PertPanel;;<org.jhotdraw.samples.pert.PertPanel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.pert.PertFactory;;<org.jhotdraw.samples.pert.PertFactory: void <clinit>()>;;0
org.jhotdraw.samples.pert.PertFactory;;<org.jhotdraw.samples.pert.PertFactory: void <init>()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void <init>()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void init()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void setEditor(org.jhotdraw.draw.DrawingEditor)>;;1
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void setGridVisible(boolean)>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: boolean isGridVisible()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: double getScaleFactor()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void setScaleFactor(double)>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void initActions()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void setHasUnsavedChanges(boolean)>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void write(java.io.File)>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void read(java.io.File)>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void setDrawingEditor(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: org.jhotdraw.draw.DrawingEditor getDrawingEditor()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void clear()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: javax.swing.JFileChooser createOpenChooser()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: javax.swing.JFileChooser createSaveChooser()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: void initComponents()>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: org.jhotdraw.undo.UndoRedoManager access$0(org.jhotdraw.samples.pert.PertProject)>;;0
org.jhotdraw.samples.pert.PertProject;;<org.jhotdraw.samples.pert.PertProject: org.jhotdraw.draw.DefaultDrawingView access$1(org.jhotdraw.samples.pert.PertProject)>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: void <init>()>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: boolean canConnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: boolean canConnect(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: void handleDisconnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: void handleConnect(org.jhotdraw.draw.Figure,org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: org.jhotdraw.samples.pert.figures.DependencyFigure clone()>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: int getLayer()>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: void removeNotify(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: java.lang.Object clone()>;;0
org.jhotdraw.samples.pert.figures.DependencyFigure;;<org.jhotdraw.samples.pert.figures.DependencyFigure: org.jhotdraw.draw.LineConnectionFigure clone()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void <init>()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: java.util.Collection createHandles(int)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void setName(java.lang.String)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: java.lang.String getName()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void setDuration(int)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: int getDuration()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void updateStartTime()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: int getStartTime()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: org.jhotdraw.draw.TextFigure getNameFigure()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: org.jhotdraw.draw.TextFigure getDurationFigure()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: org.jhotdraw.draw.TextFigure getStartTimeFigure()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void applyAttributes(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: org.jhotdraw.samples.pert.figures.TaskFigure clone()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: int getLayer()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: java.util.Set getDependencies()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void addDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: void removeDependency(org.jhotdraw.samples.pert.figures.DependencyFigure)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: java.util.List getSuccessors()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: java.util.List getPredecessors()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: boolean isDependentOf(org.jhotdraw.samples.pert.figures.TaskFigure)>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: java.lang.String toString()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: java.lang.Object clone()>;;0
org.jhotdraw.samples.pert.figures.TaskFigure;;<org.jhotdraw.samples.pert.figures.TaskFigure: org.jhotdraw.draw.GraphicalCompositeFigure clone()>;;0
org.jhotdraw.samples.pert.figures.SeparatorLineFigure;;<org.jhotdraw.samples.pert.figures.SeparatorLineFigure: void <init>()>;;0
org.jhotdraw.samples.pert.figures.SeparatorLineFigure;;<org.jhotdraw.samples.pert.figures.SeparatorLineFigure: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.samples.pert.figures.SeparatorLineFigure;;<org.jhotdraw.samples.pert.figures.SeparatorLineFigure: org.jhotdraw.geom.Dimension2DDouble getPreferredSize()>;;0
org.jhotdraw.samples.svg.Main;;<org.jhotdraw.samples.svg.Main: void <init>()>;;0
org.jhotdraw.samples.svg.Main;;<org.jhotdraw.samples.svg.Main: void main(java.lang.String[])>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: void <init>()>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: org.jhotdraw.draw.DefaultDrawingEditor getSharedEditor()>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: void initProject(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: java.util.List createToolBars(org.jhotdraw.app.Application,org.jhotdraw.app.Project)>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: java.util.Collection createDrawingActions(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: java.util.Collection createSelectionActions(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: void addAttributesButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: void addColorButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGApplicationModel;;<org.jhotdraw.samples.svg.SVGApplicationModel: void addStrokeButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.PathTool;;<org.jhotdraw.samples.svg.PathTool: void <init>(org.jhotdraw.samples.svg.figures.SVGPath,org.jhotdraw.draw.BezierFigure)>;;0
org.jhotdraw.samples.svg.PathTool;;<org.jhotdraw.samples.svg.PathTool: void <init>(org.jhotdraw.samples.svg.figures.SVGPath,org.jhotdraw.draw.BezierFigure,java.util.Map)>;;0
org.jhotdraw.samples.svg.PathTool;;<org.jhotdraw.samples.svg.PathTool: org.jhotdraw.samples.svg.figures.SVGPath createPath()>;;0
org.jhotdraw.samples.svg.PathTool;;<org.jhotdraw.samples.svg.PathTool: void finishCreation(org.jhotdraw.draw.BezierFigure)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void <init>()>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void drawFigure(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void invalidate()>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void validate()>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void validatePath()>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void invalidatePath()>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void writePoints(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void readPoints(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: boolean isEmpty()>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: java.util.LinkedList createHandles(int)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: java.util.Collection getActions(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.samples.svg.figures.SVGPath;;<org.jhotdraw.samples.svg.figures.SVGPath: java.util.Collection createHandles(int)>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: void <init>()>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: java.lang.String getParameter(java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: void init()>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: void setData(java.lang.String)>;;1
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: java.lang.String getData()>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: java.lang.String[][] getParameterInfo()>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: java.lang.String getAppletInfo()>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: void initComponents()>;;0
org.jhotdraw.samples.svg.SVGApplet;;<org.jhotdraw.samples.svg.SVGApplet: void mainx(java.lang.String[])>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: void <init>()>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: org.jhotdraw.draw.DrawingView getView()>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: java.util.Collection createSelectionActions(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: void addCreationButtonsTo(javax.swing.JToolBar,org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGPanel;;<org.jhotdraw.samples.svg.SVGPanel: void initComponents()>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: void <init>(org.jhotdraw.xml.DOMFactory,java.io.InputStream)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: void <init>(org.jhotdraw.xml.DOMFactory,java.io.Reader)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: java.lang.String getTagName()>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: java.util.List getInheritedAttribute(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: java.lang.String getText()>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: java.lang.String getText(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: int getAttribute(java.lang.String,int)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: double getAttribute(java.lang.String,double)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: boolean getAttribute(java.lang.String,boolean)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: int getElementCount()>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: int getElementCount(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: void openElement(int)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: void openElement(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: void openElement(java.lang.String,int)>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: void closeElement()>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: java.lang.Object readObject()>;;0
org.jhotdraw.xml.NanoXMLDOMInput;;<org.jhotdraw.xml.NanoXMLDOMInput: java.lang.Object readObject(int)>;;0
org.jhotdraw.samples.svg.SVGFigureFactory;;<org.jhotdraw.samples.svg.SVGFigureFactory: void <clinit>()>;;0
org.jhotdraw.samples.svg.SVGFigureFactory;;<org.jhotdraw.samples.svg.SVGFigureFactory: void <init>()>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void <init>(org.jhotdraw.xml.DOMFactory)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void save(java.io.OutputStream)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void save(java.io.Writer)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void print(java.io.PrintWriter)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void openElement(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void closeElement()>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addComment(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addText(java.lang.String)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,java.lang.String)>;;1
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,int)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,boolean)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,float)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,double)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void writeObject(java.lang.Object)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: net.n3.nanoxml.XMLElement writeStorable(org.jhotdraw.xml.DOMStorable)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,float,float)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,int,int)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,double,double)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,boolean,boolean)>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void addAttribute(java.lang.String,java.lang.String,java.lang.String)>;;1
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: java.lang.Object getPrototype()>;;0
org.jhotdraw.xml.NanoXMLDOMOutput;;<org.jhotdraw.xml.NanoXMLDOMOutput: void setDoctype(java.lang.String)>;;0
org.jhotdraw.samples.svg.figures.SVGLine;;<org.jhotdraw.samples.svg.figures.SVGLine: void <init>()>;;0
org.jhotdraw.samples.svg.figures.SVGLine;;<org.jhotdraw.samples.svg.figures.SVGLine: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGLine;;<org.jhotdraw.samples.svg.figures.SVGLine: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGLine;;<org.jhotdraw.samples.svg.figures.SVGLine: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGLine;;<org.jhotdraw.samples.svg.figures.SVGLine: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGLine;;<org.jhotdraw.samples.svg.figures.SVGLine: boolean handleMouseClick(java.awt.geom.Point2D$Double,java.awt.event.MouseEvent,org.jhotdraw.draw.DrawingView)>;;0
org.jhotdraw.samples.svg.figures.SVGLine;;<org.jhotdraw.samples.svg.figures.SVGLine: boolean isEmpty()>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void <clinit>()>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void <init>()>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void drawText(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: java.awt.Color getTextColor()>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: java.awt.Color getFillColor()>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: boolean isEmpty()>;;0
org.jhotdraw.samples.svg.figures.SVGText;;<org.jhotdraw.samples.svg.figures.SVGText: int[] $SWITCH_TABLE$org$jhotdraw$samples$svg$figures$SVGText$TextAnchor()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void <init>()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void init()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: org.jhotdraw.draw.DrawingEditor getEditor()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void setEditor(org.jhotdraw.draw.DrawingEditor)>;;1
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void initActions()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void setHasUnsavedChanges(boolean)>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void write(java.io.File)>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void read(java.io.File)>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void setDrawingEditor(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: org.jhotdraw.draw.DrawingEditor getDrawingEditor()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void clear()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: javax.swing.JFileChooser createOpenChooser()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: javax.swing.JFileChooser createSaveChooser()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: void initComponents()>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: org.jhotdraw.undo.UndoRedoManager access$0(org.jhotdraw.samples.svg.SVGProject)>;;0
org.jhotdraw.samples.svg.SVGProject;;<org.jhotdraw.samples.svg.SVGProject: org.jhotdraw.draw.DefaultDrawingView access$1(org.jhotdraw.samples.svg.SVGProject)>;;0
org.jhotdraw.samples.svg.figures.SVGRect;;<org.jhotdraw.samples.svg.figures.SVGRect: void <init>()>;;0
org.jhotdraw.samples.svg.figures.SVGRect;;<org.jhotdraw.samples.svg.figures.SVGRect: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGRect;;<org.jhotdraw.samples.svg.figures.SVGRect: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGRect;;<org.jhotdraw.samples.svg.figures.SVGRect: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGRect;;<org.jhotdraw.samples.svg.figures.SVGRect: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGRect;;<org.jhotdraw.samples.svg.figures.SVGRect: boolean isEmpty()>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: void <init>()>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: java.util.LinkedList createHandles(int)>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: boolean isEmpty()>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: java.lang.String toString()>;;0
org.jhotdraw.samples.svg.figures.SVGGroup;;<org.jhotdraw.samples.svg.figures.SVGGroup: java.util.Collection createHandles(int)>;;0
org.jhotdraw.samples.svg.figures.SVGEllipse;;<org.jhotdraw.samples.svg.figures.SVGEllipse: void <init>()>;;0
org.jhotdraw.samples.svg.figures.SVGEllipse;;<org.jhotdraw.samples.svg.figures.SVGEllipse: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGEllipse;;<org.jhotdraw.samples.svg.figures.SVGEllipse: void writeAttributes(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGEllipse;;<org.jhotdraw.samples.svg.figures.SVGEllipse: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGEllipse;;<org.jhotdraw.samples.svg.figures.SVGEllipse: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.figures.SVGEllipse;;<org.jhotdraw.samples.svg.figures.SVGEllipse: boolean isEmpty()>;;0
org.jhotdraw.samples.svg.action.CombineAction;;<org.jhotdraw.samples.svg.action.CombineAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.action.CombineAction;;<org.jhotdraw.samples.svg.action.CombineAction: boolean canGroup()>;;0
org.jhotdraw.samples.svg.action.CombineAction;;<org.jhotdraw.samples.svg.action.CombineAction: java.util.Collection ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)>;;0
org.jhotdraw.samples.svg.action.CombineAction;;<org.jhotdraw.samples.svg.action.CombineAction: void groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection)>;;0
org.jhotdraw.samples.svg.action.SplitAction;;<org.jhotdraw.samples.svg.action.SplitAction: void <init>(org.jhotdraw.draw.DrawingEditor)>;;0
org.jhotdraw.samples.svg.action.SplitAction;;<org.jhotdraw.samples.svg.action.SplitAction: boolean canUngroup()>;;0
org.jhotdraw.samples.svg.action.SplitAction;;<org.jhotdraw.samples.svg.action.SplitAction: java.util.Collection ungroupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure)>;;0
org.jhotdraw.samples.svg.action.SplitAction;;<org.jhotdraw.samples.svg.action.SplitAction: void groupFigures(org.jhotdraw.draw.DrawingView,org.jhotdraw.draw.CompositeFigure,java.util.Collection)>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: void <init>()>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: void setTitle(java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: java.lang.String getTitle()>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: void setDescription(java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: java.lang.String getDescription()>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: void read(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: void readAttributes(org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.SVGDrawing;;<org.jhotdraw.samples.svg.SVGDrawing: void write(org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: void <init>()>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: void drawFill(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: void drawStroke(java.awt.Graphics2D)>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: void basicTransform(java.awt.geom.AffineTransform)>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: void basicSetBounds(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: java.awt.geom.Rectangle2D$Double getBounds()>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: java.lang.Object getRestoreData()>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: void restoreTo(java.lang.Object)>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: boolean contains(java.awt.geom.Point2D$Double)>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: org.jhotdraw.samples.svg.figures.SVGImage clone()>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: boolean isEmpty()>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: java.lang.Object clone()>;;0
org.jhotdraw.samples.svg.figures.SVGImage;;<org.jhotdraw.samples.svg.figures.SVGImage: org.jhotdraw.draw.AttributedFigure clone()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: void <init>()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: void init()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: void setDrawing(org.jhotdraw.draw.Drawing)>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: org.jhotdraw.draw.Drawing getDrawing()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: void setData(java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: java.lang.String getData()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: java.lang.String[][] getParameterInfo()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: java.lang.String getAppletInfo()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: void initComponents()>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: void save(java.awt.event.ActionEvent)>;;0
org.jhotdraw.samples.svg.SVGLiveConnectApplet;;<org.jhotdraw.samples.svg.SVGLiveConnectApplet: void load(java.awt.event.ActionEvent)>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: void <clinit>()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: void <init>()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.BeanDescriptor getBdescriptor()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.PropertyDescriptor[] getPdescriptor()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.EventSetDescriptor[] getEdescriptor()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.MethodDescriptor[] getMdescriptor()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.BeanDescriptor getBeanDescriptor()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.EventSetDescriptor[] getEventSetDescriptors()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.beans.MethodDescriptor[] getMethodDescriptors()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: int getDefaultPropertyIndex()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: int getDefaultEventIndex()>;;0
org.jhotdraw.samples.svg.SVGPanelBeanInfo;;<org.jhotdraw.samples.svg.SVGPanelBeanInfo: java.awt.Image getIcon(int)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: void <clinit>()>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: void <init>()>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.awt.geom.AffineTransform getTransform(org.jhotdraw.xml.DOMInput,java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.awt.geom.AffineTransform getTransform(java.lang.String)>;;1
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: double getDimension(org.jhotdraw.xml.DOMInput,java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: double getDimensionValue(org.jhotdraw.xml.DOMInput,java.lang.String)>;;1
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.util.List getPath(org.jhotdraw.xml.DOMInput,java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: void setPath(org.jhotdraw.xml.DOMOutput,java.lang.String,org.jhotdraw.geom.BezierPath)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.lang.String toPathData(org.jhotdraw.geom.BezierPath)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.util.List fromPathData(java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.lang.String getInheritedAttribute(java.lang.String,org.jhotdraw.xml.DOMInput,java.util.List)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: void readAttributes(org.jhotdraw.draw.Figure,org.jhotdraw.xml.DOMInput)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.util.Map getStyles(java.lang.String)>;;1
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: java.awt.Color getColor(java.lang.String)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: void setDefaults(org.jhotdraw.draw.Figure)>;;0
org.jhotdraw.samples.svg.SVGUtil;;<org.jhotdraw.samples.svg.SVGUtil: void writeAttributes(org.jhotdraw.draw.Figure,org.jhotdraw.xml.DOMOutput)>;;0
org.jhotdraw.undo.NonUndoableEdit;;<org.jhotdraw.undo.NonUndoableEdit: void <init>()>;;0
org.jhotdraw.undo.NonUndoableEdit;;<org.jhotdraw.undo.NonUndoableEdit: boolean canUndo()>;;0
org.jhotdraw.undo.NonUndoableEdit;;<org.jhotdraw.undo.NonUndoableEdit: boolean canRedo()>;;0
org.jhotdraw.util.LocaleUtil;;<org.jhotdraw.util.LocaleUtil: void <init>()>;;0
org.jhotdraw.util.LocaleUtil;;<org.jhotdraw.util.LocaleUtil: void setDefault(java.util.Locale)>;;0
org.jhotdraw.util.LocaleUtil;;<org.jhotdraw.util.LocaleUtil: java.util.Locale getDefault()>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void <init>(javax.swing.JToolBar,java.lang.String,java.util.prefs.Preferences)>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void componentHidden(java.awt.event.ComponentEvent)>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void componentMoved(java.awt.event.ComponentEvent)>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void locationChanged()>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void componentResized(java.awt.event.ComponentEvent)>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void componentShown(java.awt.event.ComponentEvent)>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void ancestorAdded(javax.swing.event.AncestorEvent)>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void ancestorMoved(javax.swing.event.AncestorEvent)>;;0
org.jhotdraw.util.prefs.ToolBarPrefsHandler;;<org.jhotdraw.util.prefs.ToolBarPrefsHandler: void ancestorRemoved(javax.swing.event.AncestorEvent)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: void <init>(org.jhotdraw.xml.DOMFactory,java.io.InputStream)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: void <init>(org.jhotdraw.xml.DOMFactory,java.io.Reader)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: java.lang.String getTagName()>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: java.lang.String getAttribute(java.lang.String,java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: java.lang.String getText()>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: java.lang.String getText(java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: void getText(org.w3c.dom.Node,java.lang.StringBuilder)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: java.util.List getInheritedAttribute(java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: int getAttribute(java.lang.String,int)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: double getAttribute(java.lang.String,double)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: boolean getAttribute(java.lang.String,boolean)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: int getElementCount()>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: int getElementCount(java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: void openElement(int)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: void openElement(java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: void openElement(java.lang.String,int)>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: void closeElement()>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: java.lang.Object readObject()>;;0
org.jhotdraw.xml.JavaxDOMInput;;<org.jhotdraw.xml.JavaxDOMInput: java.lang.Object readObject(int)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void <init>(org.jhotdraw.xml.DOMFactory)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void save(java.io.OutputStream)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void save(java.io.Writer)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void openElement(java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void closeElement()>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addComment(java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addText(java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,java.lang.String)>;;1
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,int)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,boolean)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,float)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,double)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void writeObject(java.lang.Object)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void writeStorable(org.jhotdraw.xml.DOMStorable)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,float,float)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,int,int)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,double,double)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,boolean,boolean)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void addAttribute(java.lang.String,java.lang.String,java.lang.String)>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: java.lang.Object getPrototype()>;;0
org.jhotdraw.xml.JavaxDOMOutput;;<org.jhotdraw.xml.JavaxDOMOutput: void setDoctype(java.lang.String)>;;0
